{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "leaf",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "4": "contracts/MerkleLib.sol"
  },
  "ast": {
    "absolutePath": "contracts/MerkleLib.sol",
    "exportedSymbols": {
      "MerkleLib": [
        1370
      ]
    },
    "id": 1371,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1295,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MerkleLib",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 1370,
        "linearizedBaseContracts": [
          1370
        ],
        "name": "MerkleLib",
        "nameLocation": "75:9:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1341,
              "nodeType": "Block",
              "src": "194:265:4",
              "statements": [
                {
                  "assignments": [
                    1308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1308,
                      "mutability": "mutable",
                      "name": "currentHash",
                      "nameLocation": "212:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1341,
                      "src": "204:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1307,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "204:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1310,
                  "initialValue": {
                    "id": 1309,
                    "name": "leaf",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1299,
                    "src": "226:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "204:26:4"
                },
                {
                  "assignments": [
                    1312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1312,
                      "mutability": "mutable",
                      "name": "proofLength",
                      "nameLocation": "246:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1341,
                      "src": "241:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1311,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1315,
                  "initialValue": {
                    "expression": {
                      "id": 1313,
                      "name": "proof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1302,
                      "src": "260:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                        "typeString": "bytes32[] calldata"
                      }
                    },
                    "id": 1314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "260:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "241:31:4"
                },
                {
                  "body": {
                    "id": 1335,
                    "nodeType": "Block",
                    "src": "313:103:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1322,
                            "name": "currentHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1308,
                            "src": "327:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1324,
                                "name": "currentHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1308,
                                "src": "352:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1325,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1302,
                                  "src": "365:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                    "typeString": "bytes32[] calldata"
                                  }
                                },
                                "id": 1327,
                                "indexExpression": {
                                  "id": 1326,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1317,
                                  "src": "371:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "365:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1323,
                              "name": "parentHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "341:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                              }
                            },
                            "id": 1328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "341:33:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "327:47:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1330,
                        "nodeType": "ExpressionStatement",
                        "src": "327:47:4"
                      },
                      {
                        "id": 1334,
                        "nodeType": "UncheckedBlock",
                        "src": "388:18:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 1332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "400:3:4",
                              "subExpression": {
                                "id": 1331,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1317,
                                "src": "402:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1333,
                            "nodeType": "ExpressionStatement",
                            "src": "400:3:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1319,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1317,
                      "src": "295:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1320,
                      "name": "proofLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "299:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "295:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1336,
                  "initializationExpression": {
                    "assignments": [
                      1317
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1317,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "292:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1336,
                        "src": "287:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1316,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "287:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1318,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "287:6:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "282:134:4"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1337,
                      "name": "currentHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1308,
                      "src": "433:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1338,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1297,
                      "src": "448:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "433:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1306,
                  "id": 1340,
                  "nodeType": "Return",
                  "src": "426:26:4"
                }
              ]
            },
            "functionSelector": "9da7347c",
            "id": 1342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyProof",
            "nameLocation": "101:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1297,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "121:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1342,
                  "src": "113:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "113:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1299,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "135:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1342,
                  "src": "127:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "127:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1302,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "160:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1342,
                  "src": "141:24:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1300,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "141:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1301,
                    "nodeType": "ArrayTypeName",
                    "src": "141:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "112:54:4"
            },
            "returnParameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1305,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1342,
                  "src": "188:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1304,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "187:6:4"
            },
            "scope": 1370,
            "src": "92:367:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1368,
              "nodeType": "Block",
              "src": "538:78:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1352,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1344,
                            "src": "565:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1353,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1346,
                            "src": "569:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "565:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "arguments": [
                            {
                              "id": 1362,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1346,
                              "src": "603:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1363,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1344,
                              "src": "606:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 1360,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "592:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "592:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "592:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "565:43:4",
                        "trueExpression": {
                          "arguments": [
                            {
                              "id": 1357,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1344,
                              "src": "584:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1358,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1346,
                              "src": "587:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 1355,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "573:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "573:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "573:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1351,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "555:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "555:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1350,
                  "id": 1367,
                  "nodeType": "Return",
                  "src": "548:61:4"
                }
              ]
            },
            "id": 1369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "parentHash",
            "nameLocation": "474:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1344,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "493:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "485:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1343,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1346,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "504:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "496:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1345,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "484:22:4"
            },
            "returnParameters": {
              "id": 1350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "529:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1348,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "528:9:4"
            },
            "scope": 1370,
            "src": "465:151:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1371,
        "src": "67:552:4",
        "usedErrors": []
      }
    ],
    "src": "42:578:4"
  },
  "bytecode": "6101db61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80639da7347c1461003a575b600080fd5b61004d61004836600461010c565b610061565b604051901515815260200160405180910390f35b60008382825b8181101561009b57610091838787848181106100855761008561018f565b905060200201356100a8565b9250600101610067565b5050909414949350505050565b60008183106100d95760408051602081018490529081018490526060016040516020818303038152906040526100fd565b60408051602081018590529081018390526060016040516020818303038152906040525b80519060200120905092915050565b6000806000806060858703121561012257600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561014857600080fd5b818701915087601f83011261015c57600080fd5b81358181111561016b57600080fd5b8860208260051b850101111561018057600080fd5b95989497505060200194505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220402763657c3f9f33fc7cbb07fbeefcc266276d47a63657e04f378fb0159b048364736f6c634300080c0033",
  "bytecodeSha1": "5b4155282ebef0ad2bc18486f9bc0c9c9d8a76d9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "MerkleLib",
  "coverageMap": {
    "branches": {
      "4": {
        "MerkleLib.parentHash": {
          "4": [
            565,
            570,
            true
          ]
        }
      }
    },
    "statements": {
      "4": {
        "MerkleLib.parentHash": {
          "3": [
            548,
            609
          ]
        },
        "MerkleLib.verifyProof": {
          "0": [
            327,
            374
          ],
          "1": [
            400,
            403
          ],
          "2": [
            426,
            452
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80639da7347c1461003a575b600080fd5b61004d61004836600461010c565b610061565b604051901515815260200160405180910390f35b60008382825b8181101561009b57610091838787848181106100855761008561018f565b905060200201356100a8565b9250600101610067565b5050909414949350505050565b60008183106100d95760408051602081018490529081018490526060016040516020818303038152906040526100fd565b60408051602081018590529081018390526060016040516020818303038152906040525b80519060200120905092915050565b6000806000806060858703121561012257600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561014857600080fd5b818701915087601f83011261015c57600080fd5b81358181111561016b57600080fd5b8860208260051b850101111561018057600080fd5b95989497505060200194505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220402763657c3f9f33fc7cbb07fbeefcc266276d47a63657e04f378fb0159b048364736f6c634300080c0033",
  "deployedSourceMap": "67:552:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;92:367;;;;;;:::i;:::-;;:::i;:::-;;;943:14:8;;936:22;918:41;;906:2;891:18;92:367:4;;;;;;;;188:4;226;260:5;188:4;282:134;299:11;295:1;:15;282:134;;;341:33;352:11;365:5;;371:1;365:8;;;;;;;:::i;:::-;;;;;;;341:10;:33::i;:::-;327:47;-1:-1:-1;400:3:4;;282:134;;;-1:-1:-1;;433:19:4;;;;92:367;-1:-1:-1;;;;92:367:4:o;465:151::-;529:7;569:1;565;:5;:43;;592:16;;;;;;1276:25:8;;;1317:18;;;1310:34;;;1249:18;;592:16:4;;;;;;;;;;;;565:43;;;573:16;;;;;;1276:25:8;;;1317:18;;;1310:34;;;1249:18;;573:16:4;;;;;;;;;;;;565:43;555:54;;;;;;548:61;;465:151;;;;:::o;14:751:8:-;118:6;126;134;142;195:2;183:9;174:7;170:23;166:32;163:52;;;211:1;208;201:12;163:52;247:9;234:23;224:33;;304:2;293:9;289:18;276:32;266:42;;359:2;348:9;344:18;331:32;382:18;423:2;415:6;412:14;409:34;;;439:1;436;429:12;409:34;477:6;466:9;462:22;452:32;;522:7;515:4;511:2;507:13;503:27;493:55;;544:1;541;534:12;493:55;584:2;571:16;610:2;602:6;599:14;596:34;;;626:1;623;616:12;596:34;679:7;674:2;664:6;661:1;657:14;653:2;649:23;645:32;642:45;639:65;;;700:1;697;690:12;639:65;14:751;;;;-1:-1:-1;;731:2:8;723:11;;-1:-1:-1;;;14:751:8:o;970:127::-;1031:10;1026:3;1022:20;1019:1;1012:31;1062:4;1059:1;1052:15;1086:4;1083:1;1076:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    67,
    619
  ],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DA7347C EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D PUSH2 0x48 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP4 DUP3 DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9B JUMPI PUSH2 0x91 DUP4 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x85 JUMPI PUSH2 0x85 PUSH2 0x18F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xA8 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 ADD PUSH2 0x67 JUMP JUMPDEST POP POP SWAP1 SWAP5 EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xD9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x27 PUSH4 0x657C3F9F CALLER 0xFC PUSH29 0xBB07FBEEFCC266276D47A63657E04F378FB0159B048364736F6C634300 ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        67,
        619
      ],
      "op": "PUSH20",
      "path": "4",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "EQ",
      "path": "4"
    },
    "23": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "28": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "30": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "31": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "LT",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35"
    },
    "35": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "36": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "38": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "41": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "SHR",
      "path": "4"
    },
    "42": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "DUP1",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x9DA7347C"
    },
    "48": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "EQ",
      "path": "4"
    },
    "49": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3A"
    },
    "52": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "53": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "56": {
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "DUP1",
      "path": "4"
    },
    "57": {
      "first_revert": true,
      "fn": null,
      "offset": [
        67,
        619
      ],
      "op": "REVERT",
      "path": "4"
    },
    "58": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "59": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D"
    },
    "62": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48"
    },
    "65": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "66": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "68": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10C"
    },
    "71": {
      "fn": "MerkleLib.verifyProof",
      "jump": "i",
      "offset": [
        92,
        459
      ],
      "op": "JUMP",
      "path": "4"
    },
    "72": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "73": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x61"
    },
    "76": {
      "fn": "MerkleLib.verifyProof",
      "jump": "i",
      "offset": [
        92,
        459
      ],
      "op": "JUMP",
      "path": "4"
    },
    "77": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "78": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "80": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "81": {
      "op": "SWAP1"
    },
    "82": {
      "op": "ISZERO"
    },
    "83": {
      "op": "ISZERO"
    },
    "84": {
      "op": "DUP2"
    },
    "85": {
      "op": "MSTORE"
    },
    "86": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "88": {
      "op": "ADD"
    },
    "89": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "91": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "92": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "DUP1",
      "path": "4"
    },
    "93": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "94": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "SUB",
      "path": "4"
    },
    "95": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "96": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "RETURN",
      "path": "4"
    },
    "97": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "98": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        188,
        192
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "100": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        226,
        230
      ],
      "op": "DUP4",
      "path": "4"
    },
    "101": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        260,
        265
      ],
      "op": "DUP3",
      "path": "4"
    },
    "102": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        188,
        192
      ],
      "op": "DUP3",
      "path": "4"
    },
    "103": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        282,
        416
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "104": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        299,
        310
      ],
      "op": "DUP2",
      "path": "4"
    },
    "105": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        295,
        296
      ],
      "op": "DUP2",
      "path": "4"
    },
    "106": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        295,
        310
      ],
      "op": "LT",
      "path": "4"
    },
    "107": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        282,
        416
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "108": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        282,
        416
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B"
    },
    "111": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        282,
        416
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "112": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        341,
        374
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 0,
      "value": "0x91"
    },
    "115": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        352,
        363
      ],
      "op": "DUP4",
      "path": "4"
    },
    "116": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        370
      ],
      "op": "DUP8",
      "path": "4"
    },
    "117": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        370
      ],
      "op": "DUP8",
      "path": "4"
    },
    "118": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        371,
        372
      ],
      "op": "DUP5",
      "path": "4"
    },
    "119": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "DUP2",
      "path": "4"
    },
    "120": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "DUP2",
      "path": "4"
    },
    "121": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "LT",
      "path": "4"
    },
    "122": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x85"
    },
    "125": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "126": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x85"
    },
    "129": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18F"
    },
    "132": {
      "fn": "MerkleLib.verifyProof",
      "jump": "i",
      "offset": [
        365,
        373
      ],
      "op": "JUMP",
      "path": "4"
    },
    "133": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "134": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "135": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "POP",
      "path": "4"
    },
    "136": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "138": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "MUL",
      "path": "4"
    },
    "139": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "ADD",
      "path": "4"
    },
    "140": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        365,
        373
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "141": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        341,
        351
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA8"
    },
    "144": {
      "fn": "MerkleLib.verifyProof",
      "jump": "i",
      "offset": [
        341,
        374
      ],
      "op": "JUMP",
      "path": "4"
    },
    "145": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        341,
        374
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "146": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        327,
        374
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "147": {
      "op": "POP"
    },
    "148": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        400,
        403
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x1"
    },
    "150": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        400,
        403
      ],
      "op": "ADD",
      "path": "4"
    },
    "151": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        282,
        416
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x67"
    },
    "154": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        282,
        416
      ],
      "op": "JUMP",
      "path": "4"
    },
    "155": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        282,
        416
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "156": {
      "op": "POP"
    },
    "157": {
      "op": "POP"
    },
    "158": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        433,
        452
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 2
    },
    "159": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        433,
        452
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "160": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        433,
        452
      ],
      "op": "EQ",
      "path": "4"
    },
    "161": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        433,
        452
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "162": {
      "fn": "MerkleLib.verifyProof",
      "offset": [
        92,
        459
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "163": {
      "op": "POP"
    },
    "164": {
      "op": "POP"
    },
    "165": {
      "op": "POP"
    },
    "166": {
      "op": "POP"
    },
    "167": {
      "fn": "MerkleLib.verifyProof",
      "jump": "o",
      "offset": [
        92,
        459
      ],
      "op": "JUMP",
      "path": "4"
    },
    "168": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        465,
        616
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "169": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        529,
        536
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "171": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        569,
        570
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 3
    },
    "172": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        565,
        566
      ],
      "op": "DUP4",
      "path": "4"
    },
    "173": {
      "branch": 4,
      "fn": "MerkleLib.parentHash",
      "offset": [
        565,
        570
      ],
      "op": "LT",
      "path": "4"
    },
    "174": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        565,
        608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD9"
    },
    "177": {
      "branch": 4,
      "fn": "MerkleLib.parentHash",
      "offset": [
        565,
        608
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "178": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "180": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "181": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "182": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "184": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "185": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "ADD",
      "path": "4"
    },
    "186": {
      "op": "DUP5"
    },
    "187": {
      "op": "SWAP1"
    },
    "188": {
      "op": "MSTORE"
    },
    "189": {
      "op": "SWAP1"
    },
    "190": {
      "op": "DUP2"
    },
    "191": {
      "op": "ADD"
    },
    "192": {
      "op": "DUP5"
    },
    "193": {
      "op": "SWAP1"
    },
    "194": {
      "op": "MSTORE"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "197": {
      "op": "ADD"
    },
    "198": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "200": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "201": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "203": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "204": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "DUP4",
      "path": "4"
    },
    "205": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "SUB",
      "path": "4"
    },
    "206": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "SUB",
      "path": "4"
    },
    "207": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "208": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "209": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "210": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "212": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        592,
        608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "213": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        565,
        608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD"
    },
    "216": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        565,
        608
      ],
      "op": "JUMP",
      "path": "4"
    },
    "217": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        565,
        608
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "218": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "220": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "DUP1",
      "path": "4"
    },
    "221": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "222": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "224": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "DUP2",
      "path": "4"
    },
    "225": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "ADD",
      "path": "4"
    },
    "226": {
      "op": "DUP6"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "MSTORE"
    },
    "229": {
      "op": "SWAP1"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "ADD"
    },
    "232": {
      "op": "DUP4"
    },
    "233": {
      "op": "SWAP1"
    },
    "234": {
      "op": "MSTORE"
    },
    "235": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "237": {
      "op": "ADD"
    },
    "238": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "240": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "241": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "243": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "DUP2",
      "path": "4"
    },
    "244": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "DUP4",
      "path": "4"
    },
    "245": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "SUB",
      "path": "4"
    },
    "246": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "SUB",
      "path": "4"
    },
    "247": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "DUP2",
      "path": "4"
    },
    "248": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "249": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "250": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "252": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        573,
        589
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "253": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        565,
        608
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "254": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        555,
        609
      ],
      "op": "DUP1",
      "path": "4"
    },
    "255": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        555,
        609
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "256": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        555,
        609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "257": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        555,
        609
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "259": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        555,
        609
      ],
      "op": "ADD",
      "path": "4"
    },
    "260": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        555,
        609
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "261": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        548,
        609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "262": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        548,
        609
      ],
      "op": "POP",
      "path": "4"
    },
    "263": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        465,
        616
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "264": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        465,
        616
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "265": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        465,
        616
      ],
      "op": "POP",
      "path": "4"
    },
    "266": {
      "fn": "MerkleLib.parentHash",
      "offset": [
        465,
        616
      ],
      "op": "POP",
      "path": "4"
    },
    "267": {
      "fn": "MerkleLib.parentHash",
      "jump": "o",
      "offset": [
        465,
        616
      ],
      "op": "JUMP",
      "path": "4"
    },
    "268": {
      "op": "JUMPDEST"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "271": {
      "op": "DUP1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "274": {
      "op": "DUP1"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "277": {
      "op": "DUP6"
    },
    "278": {
      "op": "DUP8"
    },
    "279": {
      "op": "SUB"
    },
    "280": {
      "op": "SLT"
    },
    "281": {
      "op": "ISZERO"
    },
    "282": {
      "op": "PUSH2",
      "value": "0x122"
    },
    "285": {
      "op": "JUMPI"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "288": {
      "op": "DUP1"
    },
    "289": {
      "op": "REVERT"
    },
    "290": {
      "op": "JUMPDEST"
    },
    "291": {
      "op": "DUP5"
    },
    "292": {
      "op": "CALLDATALOAD"
    },
    "293": {
      "op": "SWAP4"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "297": {
      "op": "DUP6"
    },
    "298": {
      "op": "ADD"
    },
    "299": {
      "op": "CALLDATALOAD"
    },
    "300": {
      "op": "SWAP3"
    },
    "301": {
      "op": "POP"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "304": {
      "op": "DUP6"
    },
    "305": {
      "op": "ADD"
    },
    "306": {
      "op": "CALLDATALOAD"
    },
    "307": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "316": {
      "op": "DUP1"
    },
    "317": {
      "op": "DUP3"
    },
    "318": {
      "op": "GT"
    },
    "319": {
      "op": "ISZERO"
    },
    "320": {
      "op": "PUSH2",
      "value": "0x148"
    },
    "323": {
      "op": "JUMPI"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "326": {
      "op": "DUP1"
    },
    "327": {
      "op": "REVERT"
    },
    "328": {
      "op": "JUMPDEST"
    },
    "329": {
      "op": "DUP2"
    },
    "330": {
      "op": "DUP8"
    },
    "331": {
      "op": "ADD"
    },
    "332": {
      "op": "SWAP2"
    },
    "333": {
      "op": "POP"
    },
    "334": {
      "op": "DUP8"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "337": {
      "op": "DUP4"
    },
    "338": {
      "op": "ADD"
    },
    "339": {
      "op": "SLT"
    },
    "340": {
      "op": "PUSH2",
      "value": "0x15C"
    },
    "343": {
      "op": "JUMPI"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "346": {
      "op": "DUP1"
    },
    "347": {
      "op": "REVERT"
    },
    "348": {
      "op": "JUMPDEST"
    },
    "349": {
      "op": "DUP2"
    },
    "350": {
      "op": "CALLDATALOAD"
    },
    "351": {
      "op": "DUP2"
    },
    "352": {
      "op": "DUP2"
    },
    "353": {
      "op": "GT"
    },
    "354": {
      "op": "ISZERO"
    },
    "355": {
      "op": "PUSH2",
      "value": "0x16B"
    },
    "358": {
      "op": "JUMPI"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "361": {
      "op": "DUP1"
    },
    "362": {
      "op": "REVERT"
    },
    "363": {
      "op": "JUMPDEST"
    },
    "364": {
      "op": "DUP9"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "367": {
      "op": "DUP3"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "370": {
      "op": "SHL"
    },
    "371": {
      "op": "DUP6"
    },
    "372": {
      "op": "ADD"
    },
    "373": {
      "op": "ADD"
    },
    "374": {
      "op": "GT"
    },
    "375": {
      "op": "ISZERO"
    },
    "376": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "379": {
      "op": "JUMPI"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "382": {
      "op": "DUP1"
    },
    "383": {
      "op": "REVERT"
    },
    "384": {
      "op": "JUMPDEST"
    },
    "385": {
      "op": "SWAP6"
    },
    "386": {
      "op": "SWAP9"
    },
    "387": {
      "op": "SWAP5"
    },
    "388": {
      "op": "SWAP8"
    },
    "389": {
      "op": "POP"
    },
    "390": {
      "op": "POP"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "393": {
      "op": "ADD"
    },
    "394": {
      "op": "SWAP5"
    },
    "395": {
      "op": "POP"
    },
    "396": {
      "op": "POP"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "jump": "o",
      "op": "JUMP"
    },
    "399": {
      "op": "JUMPDEST"
    },
    "400": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "407": {
      "op": "SHL"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "410": {
      "op": "MSTORE"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "415": {
      "op": "MSTORE"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "420": {
      "op": "REVERT"
    }
  },
  "sha1": "992bc833537ac194451124ae12a3a1c4210790c3",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\n\npragma solidity 0.8.12;\n\nlibrary MerkleLib {\n\n    function verifyProof(bytes32 root, bytes32 leaf, bytes32[] calldata proof) public pure returns (bool) {\n        bytes32 currentHash = leaf;\n\n        uint proofLength = proof.length;\n        for (uint i; i < proofLength;) {\n            currentHash = parentHash(currentHash, proof[i]);\n            unchecked { ++i; }\n        }\n\n        return currentHash == root;\n    }\n\n    function parentHash(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return keccak256(a < b ? abi.encode(a, b) : abi.encode(b, a));\n    }\n\n}\n",
  "sourceMap": "67:552:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;67:552:4;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/MerkleLib.sol",
  "type": "library"
}