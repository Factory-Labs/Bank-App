{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        }
      ],
      "name": "MerkleRootAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensLeft",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "merkleIndex",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalOccurred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "rootHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "name": "addMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numTree",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "merkleIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockPeriodEndTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "merkleTrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "rootHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numTrees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tranches",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "coinsPerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastWithdrawalTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockPeriodEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "merkleIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "4": "contracts/MerkleLib.sol",
    "6": "contracts/MerkleVesting.sol",
    "7": "interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/MerkleVesting.sol",
    "exportedSymbols": {
      "IERC20": [
        2201
      ],
      "MerkleLib": [
        1224
      ],
      "MerkleVesting": [
        2123
      ]
    },
    "id": 2124,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1763,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:22:6"
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 1764,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2124,
        "sourceUnit": 2202,
        "src": "66:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/MerkleLib.sol",
        "file": "./MerkleLib.sol",
        "id": 1765,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2124,
        "sourceUnit": 1225,
        "src": "101:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MerkleVesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2123,
        "linearizedBaseContracts": [
          2123
        ],
        "name": "MerkleVesting",
        "nameLocation": "137:13:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1768,
            "libraryName": {
              "id": 1766,
              "name": "MerkleLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1224,
              "src": "163:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "157:28:6",
            "typeName": {
              "id": 1767,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "177:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "390b7c66",
            "id": 1771,
            "mutability": "mutable",
            "name": "numTrees",
            "nameLocation": "203:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 2123,
            "src": "191:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1769,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "191:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1770,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "214:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MerkleVesting.Tranche",
            "id": 1786,
            "members": [
              {
                "constant": false,
                "id": 1773,
                "mutability": "mutable",
                "name": "totalCoins",
                "nameLocation": "256:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 1786,
                "src": "251:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1772,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "251:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1775,
                "mutability": "mutable",
                "name": "currentCoins",
                "nameLocation": "281:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 1786,
                "src": "276:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1774,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1777,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "308:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 1786,
                "src": "303:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1776,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "303:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1779,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "332:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 1786,
                "src": "327:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1778,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "327:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1781,
                "mutability": "mutable",
                "name": "coinsPerSecond",
                "nameLocation": "354:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 1786,
                "src": "349:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1780,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "349:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1783,
                "mutability": "mutable",
                "name": "lastWithdrawalTime",
                "nameLocation": "383:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 1786,
                "src": "378:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1782,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1785,
                "mutability": "mutable",
                "name": "lockPeriodEndTime",
                "nameLocation": "416:17:6",
                "nodeType": "VariableDeclaration",
                "scope": 1786,
                "src": "411:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1784,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "411:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Tranche",
            "nameLocation": "233:7:6",
            "nodeType": "StructDefinition",
            "scope": 2123,
            "src": "226:214:6",
            "visibility": "public"
          },
          {
            "canonicalName": "MerkleVesting.MerkleTree",
            "id": 1795,
            "members": [
              {
                "constant": false,
                "id": 1788,
                "mutability": "mutable",
                "name": "rootHash",
                "nameLocation": "482:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 1795,
                "src": "474:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1787,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1790,
                "mutability": "mutable",
                "name": "ipfsHash",
                "nameLocation": "508:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 1795,
                "src": "500:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1789,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "500:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1792,
                "mutability": "mutable",
                "name": "tokenAddress",
                "nameLocation": "534:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 1795,
                "src": "526:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1791,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "526:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1794,
                "mutability": "mutable",
                "name": "tokenBalance",
                "nameLocation": "561:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 1795,
                "src": "556:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1793,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "556:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MerkleTree",
            "nameLocation": "453:10:6",
            "nodeType": "StructDefinition",
            "scope": 2123,
            "src": "446:134:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "86bb8249",
            "id": 1801,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "637:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 2123,
            "src": "586:62:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 1800,
              "keyType": {
                "id": 1796,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "595:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "586:43:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 1799,
                "keyType": {
                  "id": 1797,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "615:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "606:22:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 1798,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "623:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "85d88cb1",
            "id": 1806,
            "mutability": "mutable",
            "name": "merkleTrees",
            "nameLocation": "690:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 2123,
            "src": "654:47:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1795_storage_$",
              "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree)"
            },
            "typeName": {
              "id": 1805,
              "keyType": {
                "id": 1802,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "663:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "654:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1795_storage_$",
                "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree)"
              },
              "valueType": {
                "id": 1804,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1803,
                  "name": "MerkleTree",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1795,
                  "src": "671:10:6"
                },
                "referencedDeclaration": 1795,
                "src": "671:10:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MerkleTree_$1795_storage_ptr",
                  "typeString": "struct MerkleVesting.MerkleTree"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c26cb54f",
            "id": 1813,
            "mutability": "mutable",
            "name": "tranches",
            "nameLocation": "761:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 2123,
            "src": "707:62:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Tranche_$1786_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct MerkleVesting.Tranche))"
            },
            "typeName": {
              "id": 1812,
              "keyType": {
                "id": 1807,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "716:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "707:46:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Tranche_$1786_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct MerkleVesting.Tranche))"
              },
              "valueType": {
                "id": 1811,
                "keyType": {
                  "id": 1808,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "736:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "727:25:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1786_storage_$",
                  "typeString": "mapping(uint256 => struct MerkleVesting.Tranche)"
                },
                "valueType": {
                  "id": 1810,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1809,
                    "name": "Tranche",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1786,
                    "src": "744:7:6"
                  },
                  "referencedDeclaration": 1786,
                  "src": "744:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                    "typeString": "struct MerkleVesting.Tranche"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1823,
            "name": "WithdrawalOccurred",
            "nameLocation": "782:18:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1815,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "817:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "801:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1817,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numTokens",
                  "nameLocation": "835:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "830:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1816,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1819,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensLeft",
                  "nameLocation": "851:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "846:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1818,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1821,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "merkleIndex",
                  "nameLocation": "876:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "863:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1820,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "800:88:6"
            },
            "src": "776:113:6"
          },
          {
            "anonymous": false,
            "id": 1831,
            "name": "MerkleRootAdded",
            "nameLocation": "900:15:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1825,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "929:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "916:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1824,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1827,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "952:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "936:28:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1829,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "974:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "966:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "915:67:6"
            },
            "src": "894:89:6"
          },
          {
            "body": {
              "id": 1865,
              "nodeType": "Block",
              "src": "1276:201:6",
              "statements": [
                {
                  "expression": {
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1842,
                        "name": "merkleTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1806,
                        "src": "1286:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1795_storage_$",
                          "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                        }
                      },
                      "id": 1845,
                      "indexExpression": {
                        "id": 1844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "1298:10:6",
                        "subExpression": {
                          "id": 1843,
                          "name": "numTrees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1771,
                          "src": "1300:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1286:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$1795_storage",
                        "typeString": "struct MerkleVesting.MerkleTree storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1847,
                          "name": "rootHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1833,
                          "src": "1323:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1848,
                          "name": "ipfsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1835,
                          "src": "1333:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1849,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "1343:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 1850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1357:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1846,
                        "name": "MerkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1795,
                        "src": "1312:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MerkleTree_$1795_storage_ptr_$",
                          "typeString": "type(struct MerkleVesting.MerkleTree storage pointer)"
                        }
                      },
                      "id": 1851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1312:47:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$1795_memory_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree memory"
                      }
                    },
                    "src": "1286:73:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$1795_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "id": 1853,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1855,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "1383:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1856,
                        "name": "tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1393:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1854,
                      "name": "depositTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1904,
                      "src": "1369:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1369:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1858,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:37:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1860,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "1437:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1861,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "1447:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1862,
                        "name": "rootHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1833,
                        "src": "1461:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1859,
                      "name": "MerkleRootAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1831,
                      "src": "1421:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,bytes32)"
                      }
                    },
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1864,
                  "nodeType": "EmitStatement",
                  "src": "1416:54:6"
                }
              ]
            },
            "functionSelector": "9e18a054",
            "id": 1866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMerkleRoot",
            "nameLocation": "1178:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "rootHash",
                  "nameLocation": "1200:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "1192:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "1218:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "1210:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1834,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1837,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1236:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "1228:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1839,
                  "mutability": "mutable",
                  "name": "tokenBalance",
                  "nameLocation": "1255:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1866,
                  "src": "1250:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1838,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1191:77:6"
            },
            "returnParameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:0:6"
            },
            "scope": 2123,
            "src": "1169:308:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1903,
              "nodeType": "Block",
              "src": "1539:233:6",
              "statements": [
                {
                  "assignments": [
                    1875
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1875,
                      "mutability": "mutable",
                      "name": "merkleTree",
                      "nameLocation": "1568:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1903,
                      "src": "1549:29:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$1795_storage_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree"
                      },
                      "typeName": {
                        "id": 1874,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1873,
                          "name": "MerkleTree",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1795,
                          "src": "1549:10:6"
                        },
                        "referencedDeclaration": 1795,
                        "src": "1549:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$1795_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1879,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1876,
                      "name": "merkleTrees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1806,
                      "src": "1581:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1795_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                      }
                    },
                    "id": 1878,
                    "indexExpression": {
                      "id": 1877,
                      "name": "numTree",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1868,
                      "src": "1593:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1581:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$1795_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1549:52:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1886,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1664:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1664:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1890,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1684:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MerkleVesting_$2123",
                                  "typeString": "contract MerkleVesting"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MerkleVesting_$2123",
                                  "typeString": "contract MerkleVesting"
                                }
                              ],
                              "id": 1889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1676:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1888,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1676:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1676:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1892,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1870,
                            "src": "1691:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1882,
                                  "name": "merkleTree",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1875,
                                  "src": "1626:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MerkleTree_$1795_storage_ptr",
                                    "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                                  }
                                },
                                "id": 1883,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1792,
                                "src": "1626:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1881,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2201,
                              "src": "1619:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$2201_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1619:31:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2201",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2182,
                          "src": "1619:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1619:78:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230207472616e73666572206661696c6564",
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1699:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                          "typeString": "literal_string \"ERC20 transfer failed\""
                        },
                        "value": "ERC20 transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                          "typeString": "literal_string \"ERC20 transfer failed\""
                        }
                      ],
                      "id": 1880,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1611:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:112:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1896,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:112:6"
                },
                {
                  "expression": {
                    "id": 1901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1897,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1875,
                        "src": "1733:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$1795_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 1899,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1794,
                      "src": "1733:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1900,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1870,
                      "src": "1760:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1733:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1902,
                  "nodeType": "ExpressionStatement",
                  "src": "1733:32:6"
                }
              ]
            },
            "functionSelector": "f16ad51e",
            "id": 1904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokens",
            "nameLocation": "1492:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1868,
                  "mutability": "mutable",
                  "name": "numTree",
                  "nameLocation": "1511:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "1506:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1867,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1525:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "1520:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1505:26:6"
            },
            "returnParameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1539:0:6"
            },
            "scope": 2123,
            "src": "1483:289:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2006,
              "nodeType": "Block",
              "src": "1941:816:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1959:38:6",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1923,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1801,
                              "src": "1960:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(uint256 => bool))"
                              }
                            },
                            "id": 1925,
                            "indexExpression": {
                              "id": 1924,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1908,
                              "src": "1972:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1960:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 1927,
                          "indexExpression": {
                            "id": 1926,
                            "name": "merkleIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1906,
                            "src": "1985:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1960:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 1929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1999:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 1922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1951:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1951:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1931,
                  "nodeType": "ExpressionStatement",
                  "src": "1951:70:6"
                },
                {
                  "assignments": [
                    1933
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1933,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "2039:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2006,
                      "src": "2031:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1932,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2031:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1944,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1937,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "2067:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1938,
                            "name": "totalCoins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "2080:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1939,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "2092:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1940,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1914,
                            "src": "2103:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1941,
                            "name": "lockPeriodEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1916,
                            "src": "2112:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1935,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2056:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2056:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2056:74:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1934,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2046:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:85:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2031:100:6"
                },
                {
                  "assignments": [
                    1947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1947,
                      "mutability": "mutable",
                      "name": "tree",
                      "nameLocation": "2159:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2006,
                      "src": "2141:22:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$1795_memory_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree"
                      },
                      "typeName": {
                        "id": 1946,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1945,
                          "name": "MerkleTree",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1795,
                          "src": "2141:10:6"
                        },
                        "referencedDeclaration": 1795,
                        "src": "2141:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$1795_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1951,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1948,
                      "name": "merkleTrees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1806,
                      "src": "2166:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1795_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                      }
                    },
                    "id": 1950,
                    "indexExpression": {
                      "id": 1949,
                      "name": "merkleIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1906,
                      "src": "2178:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2166:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$1795_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2141:49:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1956,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "2234:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1957,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1919,
                            "src": "2240:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 1953,
                              "name": "tree",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1947,
                              "src": "2208:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleTree_$1795_memory_ptr",
                                "typeString": "struct MerkleVesting.MerkleTree memory"
                              }
                            },
                            "id": 1954,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rootHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1788,
                            "src": "2208:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyProof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1191,
                          "src": "2208:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_pure$_t_bytes32_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes32_$",
                            "typeString": "function (bytes32,bytes32,bytes32[] memory) pure returns (bool)"
                          }
                        },
                        "id": 1958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2208:38:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f6f6620636f756c64206e6f742062652076657269666965642e",
                        "id": 1959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2248:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6befa95a15378f3fa320a9fc597710e04d31854374b1378d40ad4268234fd91c",
                          "typeString": "literal_string \"The proof could not be verified.\""
                        },
                        "value": "The proof could not be verified."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6befa95a15378f3fa320a9fc597710e04d31854374b1378d40ad4268234fd91c",
                          "typeString": "literal_string \"The proof could not be verified.\""
                        }
                      ],
                      "id": 1952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2200:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2200:83:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1961,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:83:6"
                },
                {
                  "expression": {
                    "id": 1968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1962,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1801,
                          "src": "2293:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bool))"
                          }
                        },
                        "id": 1965,
                        "indexExpression": {
                          "id": 1963,
                          "name": "destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1908,
                          "src": "2305:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2293:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1966,
                      "indexExpression": {
                        "id": 1964,
                        "name": "merkleIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1906,
                        "src": "2318:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2293:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2333:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2293:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1969,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:44:6"
                },
                {
                  "assignments": [
                    1971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1971,
                      "mutability": "mutable",
                      "name": "coinsPerSecond",
                      "nameLocation": "2352:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2006,
                      "src": "2347:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1970,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2347:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1978,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1972,
                      "name": "totalCoins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1910,
                      "src": "2369:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1973,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1914,
                            "src": "2383:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1974,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "2393:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2383:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1976,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2382:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2369:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2347:56:6"
                },
                {
                  "expression": {
                    "id": 1993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1979,
                          "name": "tranches",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1813,
                          "src": "2413:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Tranche_$1786_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct MerkleVesting.Tranche storage ref))"
                          }
                        },
                        "id": 1982,
                        "indexExpression": {
                          "id": 1980,
                          "name": "destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1908,
                          "src": "2422:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2413:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1786_storage_$",
                          "typeString": "mapping(uint256 => struct MerkleVesting.Tranche storage ref)"
                        }
                      },
                      "id": 1983,
                      "indexExpression": {
                        "id": 1981,
                        "name": "merkleIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1906,
                        "src": "2435:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2413:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$1786_storage",
                        "typeString": "struct MerkleVesting.Tranche storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1985,
                          "name": "totalCoins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1910,
                          "src": "2471:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1986,
                          "name": "totalCoins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1910,
                          "src": "2495:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1987,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1912,
                          "src": "2519:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1988,
                          "name": "endTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1914,
                          "src": "2542:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1989,
                          "name": "coinsPerSecond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1971,
                          "src": "2563:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1990,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1912,
                          "src": "2591:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1991,
                          "name": "lockPeriodEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1916,
                          "src": "2614:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1984,
                        "name": "Tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1786,
                        "src": "2450:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Tranche_$1786_storage_ptr_$",
                          "typeString": "type(struct MerkleVesting.Tranche storage pointer)"
                        }
                      },
                      "id": 1992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2450:191:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$1786_memory_ptr",
                        "typeString": "struct MerkleVesting.Tranche memory"
                      }
                    },
                    "src": "2413:228:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$1786_storage",
                      "typeString": "struct MerkleVesting.Tranche storage ref"
                    }
                  },
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:228:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1995,
                      "name": "lockPeriodEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1916,
                      "src": "2655:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1996,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2675:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2675:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2655:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2005,
                  "nodeType": "IfStatement",
                  "src": "2651:100:6",
                  "trueBody": {
                    "id": 2004,
                    "nodeType": "Block",
                    "src": "2692:59:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2000,
                              "name": "merkleIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1906,
                              "src": "2715:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2001,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1908,
                              "src": "2728:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1999,
                            "name": "withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2122,
                            "src": "2706:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 2002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2706:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2003,
                        "nodeType": "ExpressionStatement",
                        "src": "2706:34:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a8efa9ba",
            "id": 2007,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1787:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1906,
                  "mutability": "mutable",
                  "name": "merkleIndex",
                  "nameLocation": "1803:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "1798:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1905,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1908,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "1824:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "1816:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "totalCoins",
                  "nameLocation": "1842:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "1837:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1837:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "1859:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "1854:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1914,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "1875:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "1870:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1913,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1870:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1916,
                  "mutability": "mutable",
                  "name": "lockPeriodEndTime",
                  "nameLocation": "1889:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "1884:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1915,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1919,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1925:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "1908:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1917,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1908:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1918,
                    "nodeType": "ArrayTypeName",
                    "src": "1908:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1797:134:6"
            },
            "returnParameters": {
              "id": 1921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1941:0:6"
            },
            "scope": 2123,
            "src": "1778:979:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2121,
              "nodeType": "Block",
              "src": "2827:1188:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2015,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1801,
                            "src": "2845:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                              "typeString": "mapping(address => mapping(uint256 => bool))"
                            }
                          },
                          "id": 2017,
                          "indexExpression": {
                            "id": 2016,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2011,
                            "src": "2857:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2845:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 2019,
                        "indexExpression": {
                          "id": 2018,
                          "name": "merkleIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2009,
                          "src": "2870:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2845:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420696e697469616c697a6520796f7572206163636f756e742066697273742e",
                        "id": 2020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2884:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4abd8331dd14b306cce990886a8c58b8be69cac04657ffd8c84a7e7c5940d2d1",
                          "typeString": "literal_string \"You must initialize your account first.\""
                        },
                        "value": "You must initialize your account first."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4abd8331dd14b306cce990886a8c58b8be69cac04657ffd8c84a7e7c5940d2d1",
                          "typeString": "literal_string \"You must initialize your account first.\""
                        }
                      ],
                      "id": 2014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2837:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:89:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2022,
                  "nodeType": "ExpressionStatement",
                  "src": "2837:89:6"
                },
                {
                  "assignments": [
                    2025
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2025,
                      "mutability": "mutable",
                      "name": "tranche",
                      "nameLocation": "2952:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2121,
                      "src": "2936:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                        "typeString": "struct MerkleVesting.Tranche"
                      },
                      "typeName": {
                        "id": 2024,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2023,
                          "name": "Tranche",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1786,
                          "src": "2936:7:6"
                        },
                        "referencedDeclaration": 1786,
                        "src": "2936:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2031,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2026,
                        "name": "tranches",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1813,
                        "src": "2962:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Tranche_$1786_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct MerkleVesting.Tranche storage ref))"
                        }
                      },
                      "id": 2028,
                      "indexExpression": {
                        "id": 2027,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2011,
                        "src": "2971:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2962:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1786_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.Tranche storage ref)"
                      }
                    },
                    "id": 2030,
                    "indexExpression": {
                      "id": 2029,
                      "name": "merkleIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2009,
                      "src": "2984:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2962:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$1786_storage",
                      "typeString": "struct MerkleVesting.Tranche storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2936:60:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2033,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3014:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3014:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 2035,
                            "name": "tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2025,
                            "src": "3032:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                              "typeString": "struct MerkleVesting.Tranche storage pointer"
                            }
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lockPeriodEndTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1785,
                          "src": "3032:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3014:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374207761697420756e74696c206166746572206c6f636b20706572696f64",
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3059:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4851ffb49a226462a329d7b437f6651b8678ae005e405cdc9b1624e4b41fca3",
                          "typeString": "literal_string \"Must wait until after lock period\""
                        },
                        "value": "Must wait until after lock period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4851ffb49a226462a329d7b437f6651b8678ae005e405cdc9b1624e4b41fca3",
                          "typeString": "literal_string \"Must wait until after lock period\""
                        }
                      ],
                      "id": 2032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3006:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3006:89:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2040,
                  "nodeType": "ExpressionStatement",
                  "src": "3006:89:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2042,
                            "name": "tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2025,
                            "src": "3113:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                              "typeString": "struct MerkleVesting.Tranche storage pointer"
                            }
                          },
                          "id": 2043,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currentCoins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1775,
                          "src": "3113:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3137:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3113:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20636f696e73206c65667420746f207769746864726177",
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3140:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5408369ba8a5a8ab8865a5c8cf9d54818bf598d281aa43e2647b1ce4add273e",
                          "typeString": "literal_string \"No coins left to withdraw\""
                        },
                        "value": "No coins left to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5408369ba8a5a8ab8865a5c8cf9d54818bf598d281aa43e2647b1ce4add273e",
                          "typeString": "literal_string \"No coins left to withdraw\""
                        }
                      ],
                      "id": 2041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3105:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3105:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "3105:63:6"
                },
                {
                  "assignments": [
                    2050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2050,
                      "mutability": "mutable",
                      "name": "currentWithdrawal",
                      "nameLocation": "3183:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2121,
                      "src": "3178:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2049,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3178:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2052,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3203:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3178:26:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2053,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3290:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3290:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 2055,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "3309:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 2056,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1779,
                      "src": "3309:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3290:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2076,
                    "nodeType": "Block",
                    "src": "3397:158:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2064,
                            "name": "currentWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "3453:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2069,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2065,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "3474:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2066,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "3474:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2067,
                                      "name": "tranche",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2025,
                                      "src": "3492:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                                        "typeString": "struct MerkleVesting.Tranche storage pointer"
                                      }
                                    },
                                    "id": 2068,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastWithdrawalTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1783,
                                    "src": "3492:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3474:44:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2070,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3473:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 2071,
                                "name": "tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2025,
                                "src": "3522:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                                  "typeString": "struct MerkleVesting.Tranche storage pointer"
                                }
                              },
                              "id": 2072,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "coinsPerSecond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1781,
                              "src": "3522:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3473:71:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3453:91:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2075,
                        "nodeType": "ExpressionStatement",
                        "src": "3453:91:6"
                      }
                    ]
                  },
                  "id": 2077,
                  "nodeType": "IfStatement",
                  "src": "3286:269:6",
                  "trueBody": {
                    "id": 2063,
                    "nodeType": "Block",
                    "src": "3326:65:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2058,
                            "name": "currentWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "3340:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2059,
                              "name": "tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2025,
                              "src": "3360:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                                "typeString": "struct MerkleVesting.Tranche storage pointer"
                              }
                            },
                            "id": 2060,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentCoins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1775,
                            "src": "3360:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3340:40:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2062,
                        "nodeType": "ExpressionStatement",
                        "src": "3340:40:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2078,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "3590:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 2080,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentCoins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1775,
                      "src": "3590:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2081,
                      "name": "currentWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "3614:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3590:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2083,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:41:6"
                },
                {
                  "expression": {
                    "id": 2089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2084,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "3641:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 2086,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastWithdrawalTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1783,
                      "src": "3641:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2087,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3670:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3670:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3641:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2090,
                  "nodeType": "ExpressionStatement",
                  "src": "3641:44:6"
                },
                {
                  "assignments": [
                    2093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2093,
                      "mutability": "mutable",
                      "name": "tree",
                      "nameLocation": "3715:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2121,
                      "src": "3696:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$1795_storage_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree"
                      },
                      "typeName": {
                        "id": 2092,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2091,
                          "name": "MerkleTree",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1795,
                          "src": "3696:10:6"
                        },
                        "referencedDeclaration": 1795,
                        "src": "3696:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$1795_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2097,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2094,
                      "name": "merkleTrees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1806,
                      "src": "3722:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1795_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                      }
                    },
                    "id": 2096,
                    "indexExpression": {
                      "id": 2095,
                      "name": "merkleIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2009,
                      "src": "3734:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3722:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$1795_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3696:50:6"
                },
                {
                  "expression": {
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2098,
                        "name": "tree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2093,
                        "src": "3756:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$1795_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 2100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1794,
                      "src": "3756:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2101,
                      "name": "currentWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "3777:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3756:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "3756:38:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2109,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2011,
                        "src": "3877:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2110,
                        "name": "currentWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "3890:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2105,
                              "name": "tree",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2093,
                              "src": "3849:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MerkleTree_$1795_storage_ptr",
                                "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                              }
                            },
                            "id": 2106,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1792,
                            "src": "3849:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2104,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2201,
                          "src": "3842:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2201_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3842:25:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2201",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2150,
                      "src": "3842:34:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3842:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2112,
                  "nodeType": "ExpressionStatement",
                  "src": "3842:66:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2114,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2011,
                        "src": "3942:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2115,
                        "name": "currentWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "3955:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2116,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2025,
                          "src": "3974:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$1786_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currentCoins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1775,
                        "src": "3974:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2118,
                        "name": "merkleIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "3996:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2113,
                      "name": "WithdrawalOccurred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1823,
                      "src": "3923:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 2119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3923:85:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2120,
                  "nodeType": "EmitStatement",
                  "src": "3918:90:6"
                }
              ]
            },
            "functionSelector": "00f714ce",
            "id": 2122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2772:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2009,
                  "mutability": "mutable",
                  "name": "merkleIndex",
                  "nameLocation": "2786:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2122,
                  "src": "2781:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2008,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2011,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "2807:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2122,
                  "src": "2799:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2799:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:39:6"
            },
            "returnParameters": {
              "id": 2013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2827:0:6"
            },
            "scope": 2123,
            "src": "2763:1252:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2124,
        "src": "128:3890:6",
        "usedErrors": []
      }
    ],
    "src": "42:3976:6"
  },
  "bytecode": "60806040526000805534801561001457600080fd5b50610d09806100246000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80639e18a0541161005b5780639e18a0541461016a578063a8efa9ba1461017d578063c26cb54f14610190578063f16ad51e1461021957600080fd5b8062f714ce1461008c578063390b7c66146100a157806385d88cb1146100bd57806386bb82491461012c575b600080fd5b61009f61009a3660046109cf565b61022c565b005b6100aa60005481565b6040519081526020015b60405180910390f35b6100fd6100cb3660046109fb565b600260208190526000918252604090912080546001820154928201546003909201549092916001600160a01b03169084565b6040516100b4949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b61015a61013a366004610a14565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100b4565b61009f610178366004610a3e565b6104e9565b61009f61018b366004610a91565b6105d5565b6101e461019e366004610a14565b6003602081815260009384526040808520909152918352912080546001820154600283015493830154600484015460058501546006909501549395929492939192909187565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0016100b4565b61009f610227366004610b92565b6108b5565b6001600160a01b038116600090815260016020908152604080832085845290915290205460ff166102b45760405162461bcd60e51b815260206004820152602760248201527f596f75206d75737420696e697469616c697a6520796f7572206163636f756e74604482015266103334b939ba1760c91b60648201526084015b60405180910390fd5b6001600160a01b03811660009081526003602090815260408083208584529091529020600681015442116103345760405162461bcd60e51b815260206004820152602160248201527f4d757374207761697420756e74696c206166746572206c6f636b20706572696f6044820152601960fa1b60648201526084016102ab565b60008160010154116103885760405162461bcd60e51b815260206004820152601960248201527f4e6f20636f696e73206c65667420746f2077697468647261770000000000000060448201526064016102ab565b6000816003015442106103a0575060018101546103c1565b600482015460058301546103b49042610bca565b6103be9190610be1565b90505b808260010160008282546103d59190610bca565b9091555050426005830155600084815260026020526040812060038101805491928492610403908490610bca565b9091555050600281015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529091169063a9059cbb90604401602060405180830381600087803b15801561045857600080fd5b505af115801561046c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104909190610c00565b5084846001600160a01b03167f5ffb4b63dec15ba26308386f1d5ca61843b29ba365511062a887d95aa27532d38486600101546040516104da929190918252602082015260400190565b60405180910390a35050505050565b6040518060800160405280858152602001848152602001836001600160a01b03168152602001600081525060026000806000815461052690610c29565b918290555081526020808201929092526040908101600090812084518155928401516001840155908301516002830180546001600160a01b0319166001600160a01b039092169190911790556060909201516003909101555461058990826108b5565b816001600160a01b03166000547fe273192d66feeccd5e76000356363957eb17e3f1bff1f91105559db4aa9281b6866040516105c791815260200190565b60405180910390a350505050565b6001600160a01b03861660009081526001602090815260408083208a845290915290205460ff161561063f5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016102ab565b604080516001600160a01b0388166020820152908101869052606081018590526080810184905260a0810183905260009060c00160408051601f19818403018152828252805160209182012060008c81526002808452908490206080860185528054808752600182015494870194909452908101546001600160a01b0316858501526003015460608501529151632769cd1f60e21b815291935073__MerkleLib_____________________________91639da7347c916107059186908890600401610c44565b60206040518083038186803b15801561071d57600080fd5b505af4158015610731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107559190610c00565b6107a15760405162461bcd60e51b815260206004820181905260248201527f5468652070726f6f6620636f756c64206e6f742062652076657269666965642e60448201526064016102ab565b6001600160a01b03881660009081526001602081815260408084208d85529091528220805460ff191690911790556107d98787610bca565b6107e39089610c99565b90506040518060e0016040528089815260200189815260200188815260200187815260200182815260200188815260200186815250600360008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060155905050428510156108a9576108a98a8a61022c565b50505050505050505050565b6000828152600260208190526040918290209081015491516323b872dd60e01b81523360048201523060248201526044810184905290916001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561091957600080fd5b505af115801561092d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109519190610c00565b6109955760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b60448201526064016102ab565b818160030160008282546109a99190610cbb565b9091555050505050565b80356001600160a01b03811681146109ca57600080fd5b919050565b600080604083850312156109e257600080fd5b823591506109f2602084016109b3565b90509250929050565b600060208284031215610a0d57600080fd5b5035919050565b60008060408385031215610a2757600080fd5b610a30836109b3565b946020939093013593505050565b60008060008060808587031215610a5457600080fd5b8435935060208501359250610a6b604086016109b3565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610aac57600080fd5b873596506020610abd818a016109b3565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff80821115610af657600080fd5b818b0191508b601f830112610b0a57600080fd5b813581811115610b1c57610b1c610a7b565b8060051b604051601f19603f83011681018181108582111715610b4157610b41610a7b565b60405291825284820192508381018501918e831115610b5f57600080fd5b938501935b82851015610b7d57843584529385019392850192610b64565b80965050505050505092959891949750929550565b60008060408385031215610ba557600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082821015610bdc57610bdc610bb4565b500390565b6000816000190483118215151615610bfb57610bfb610bb4565b500290565b600060208284031215610c1257600080fd5b81518015158114610c2257600080fd5b9392505050565b6000600019821415610c3d57610c3d610bb4565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015610c8b57845183529383019391830191600101610c6f565b509098975050505050505050565b600082610cb657634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610cce57610cce610bb4565b50019056fea26469706673582212208466ef61b854bcdf35bdfb8568c48d081a0ed3194750c4405581e8994ae4c8ab64736f6c63430008090033",
  "bytecodeSha1": "519d1df91a9bea41b099aa324da53031e37edaf8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "MerkleVesting",
  "coverageMap": {
    "branches": {
      "4": {},
      "6": {
        "MerkleVesting.depositTokens": {
          "27": [
            1619,
            1697,
            true
          ]
        },
        "MerkleVesting.initialize": {
          "24": [
            1959,
            1997,
            true
          ],
          "25": [
            2208,
            2246,
            true
          ],
          "26": [
            2655,
            2690,
            false
          ]
        },
        "MerkleVesting.withdraw": {
          "20": [
            2845,
            2882,
            true
          ],
          "21": [
            3014,
            3057,
            true
          ],
          "22": [
            3113,
            3138,
            true
          ],
          "23": [
            3290,
            3324,
            false
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "4": {},
      "6": {
        "MerkleVesting.addMerkleRoot": {
          "10": [
            1286,
            1359
          ],
          "11": [
            1369,
            1406
          ],
          "12": [
            1416,
            1470
          ]
        },
        "MerkleVesting.depositTokens": {
          "18": [
            1611,
            1723
          ],
          "19": [
            1733,
            1765
          ]
        },
        "MerkleVesting.initialize": {
          "13": [
            1951,
            2021
          ],
          "14": [
            2200,
            2283
          ],
          "15": [
            2293,
            2337
          ],
          "16": [
            2413,
            2641
          ],
          "17": [
            2706,
            2740
          ]
        },
        "MerkleVesting.withdraw": {
          "0": [
            2837,
            2926
          ],
          "1": [
            3006,
            3095
          ],
          "2": [
            3105,
            3168
          ],
          "3": [
            3340,
            3380
          ],
          "4": [
            3453,
            3544
          ],
          "5": [
            3590,
            3631
          ],
          "6": [
            3641,
            3685
          ],
          "7": [
            3756,
            3794
          ],
          "8": [
            3842,
            3908
          ],
          "9": [
            3918,
            4008
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "IERC20",
    "MerkleLib"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100875760003560e01c80639e18a0541161005b5780639e18a0541461016a578063a8efa9ba1461017d578063c26cb54f14610190578063f16ad51e1461021957600080fd5b8062f714ce1461008c578063390b7c66146100a157806385d88cb1146100bd57806386bb82491461012c575b600080fd5b61009f61009a3660046109cf565b61022c565b005b6100aa60005481565b6040519081526020015b60405180910390f35b6100fd6100cb3660046109fb565b600260208190526000918252604090912080546001820154928201546003909201549092916001600160a01b03169084565b6040516100b4949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b61015a61013a366004610a14565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100b4565b61009f610178366004610a3e565b6104e9565b61009f61018b366004610a91565b6105d5565b6101e461019e366004610a14565b6003602081815260009384526040808520909152918352912080546001820154600283015493830154600484015460058501546006909501549395929492939192909187565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0016100b4565b61009f610227366004610b92565b6108b5565b6001600160a01b038116600090815260016020908152604080832085845290915290205460ff166102b45760405162461bcd60e51b815260206004820152602760248201527f596f75206d75737420696e697469616c697a6520796f7572206163636f756e74604482015266103334b939ba1760c91b60648201526084015b60405180910390fd5b6001600160a01b03811660009081526003602090815260408083208584529091529020600681015442116103345760405162461bcd60e51b815260206004820152602160248201527f4d757374207761697420756e74696c206166746572206c6f636b20706572696f6044820152601960fa1b60648201526084016102ab565b60008160010154116103885760405162461bcd60e51b815260206004820152601960248201527f4e6f20636f696e73206c65667420746f2077697468647261770000000000000060448201526064016102ab565b6000816003015442106103a0575060018101546103c1565b600482015460058301546103b49042610bca565b6103be9190610be1565b90505b808260010160008282546103d59190610bca565b9091555050426005830155600084815260026020526040812060038101805491928492610403908490610bca565b9091555050600281015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529091169063a9059cbb90604401602060405180830381600087803b15801561045857600080fd5b505af115801561046c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104909190610c00565b5084846001600160a01b03167f5ffb4b63dec15ba26308386f1d5ca61843b29ba365511062a887d95aa27532d38486600101546040516104da929190918252602082015260400190565b60405180910390a35050505050565b6040518060800160405280858152602001848152602001836001600160a01b03168152602001600081525060026000806000815461052690610c29565b918290555081526020808201929092526040908101600090812084518155928401516001840155908301516002830180546001600160a01b0319166001600160a01b039092169190911790556060909201516003909101555461058990826108b5565b816001600160a01b03166000547fe273192d66feeccd5e76000356363957eb17e3f1bff1f91105559db4aa9281b6866040516105c791815260200190565b60405180910390a350505050565b6001600160a01b03861660009081526001602090815260408083208a845290915290205460ff161561063f5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016102ab565b604080516001600160a01b0388166020820152908101869052606081018590526080810184905260a0810183905260009060c00160408051601f19818403018152828252805160209182012060008c81526002808452908490206080860185528054808752600182015494870194909452908101546001600160a01b0316858501526003015460608501529151632769cd1f60e21b815291935073__$61dd25696c02d5bd2863c8d2c1a2324a87$__91639da7347c916107059186908890600401610c44565b60206040518083038186803b15801561071d57600080fd5b505af4158015610731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107559190610c00565b6107a15760405162461bcd60e51b815260206004820181905260248201527f5468652070726f6f6620636f756c64206e6f742062652076657269666965642e60448201526064016102ab565b6001600160a01b03881660009081526001602081815260408084208d85529091528220805460ff191690911790556107d98787610bca565b6107e39089610c99565b90506040518060e0016040528089815260200189815260200188815260200187815260200182815260200188815260200186815250600360008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060155905050428510156108a9576108a98a8a61022c565b50505050505050505050565b6000828152600260208190526040918290209081015491516323b872dd60e01b81523360048201523060248201526044810184905290916001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561091957600080fd5b505af115801561092d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109519190610c00565b6109955760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b60448201526064016102ab565b818160030160008282546109a99190610cbb565b9091555050505050565b80356001600160a01b03811681146109ca57600080fd5b919050565b600080604083850312156109e257600080fd5b823591506109f2602084016109b3565b90509250929050565b600060208284031215610a0d57600080fd5b5035919050565b60008060408385031215610a2757600080fd5b610a30836109b3565b946020939093013593505050565b60008060008060808587031215610a5457600080fd5b8435935060208501359250610a6b604086016109b3565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610aac57600080fd5b873596506020610abd818a016109b3565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff80821115610af657600080fd5b818b0191508b601f830112610b0a57600080fd5b813581811115610b1c57610b1c610a7b565b8060051b604051601f19603f83011681018181108582111715610b4157610b41610a7b565b60405291825284820192508381018501918e831115610b5f57600080fd5b938501935b82851015610b7d57843584529385019392850192610b64565b80965050505050505092959891949750929550565b60008060408385031215610ba557600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082821015610bdc57610bdc610bb4565b500390565b6000816000190483118215151615610bfb57610bfb610bb4565b500290565b600060208284031215610c1257600080fd5b81518015158114610c2257600080fd5b9392505050565b6000600019821415610c3d57610c3d610bb4565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015610c8b57845183529383019391830191600101610c6f565b509098975050505050505050565b600082610cb657634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610cce57610cce610bb4565b50019056fea26469706673582212208466ef61b854bcdf35bdfb8568c48d081a0ed3194750c4405581e8994ae4c8ab64736f6c63430008090033",
  "deployedSourceMap": "128:3890:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2763:1252;;;;;;:::i;:::-;;:::i;:::-;;191:24;;;;;;;;;597:25:8;;;585:2;570:18;191:24:6;;;;;;;;654:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;654:47:6;;;;;;;;;;;;;1049:25:8;;;1105:2;1090:18;;1083:34;;;;-1:-1:-1;;;;;1153:32:8;1148:2;1133:18;;1126:60;1217:2;1202:18;;1195:34;1036:3;1021:19;;818:417;586:62:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:14:8;;1657:22;1639:41;;1627:2;1612:18;586:62:6;1499:187:8;1169:308:6;;;;;;:::i;:::-;;:::i;1778:979::-;;;;;;:::i;:::-;;:::i;707:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4072:25:8;;;4128:2;4113:18;;4106:34;;;;4156:18;;;4149:34;;;;4214:2;4199:18;;4192:34;;;;4257:3;4242:19;;4235:35;4301:3;4286:19;;4279:35;4345:3;4330:19;;4323:35;4059:3;4044:19;707:62:6;3757:607:8;1483:289:6;;;;;;:::i;:::-;;:::i;2763:1252::-;-1:-1:-1;;;;;2845:24:6;;;;;;:11;:24;;;;;;;;:37;;;;;;;;;;;2837:89;;;;-1:-1:-1;;;2837:89:6;;4824:2:8;2837:89:6;;;4806:21:8;4863:2;4843:18;;;4836:30;4902:34;4882:18;;;4875:62;-1:-1:-1;;;4953:18:8;;;4946:37;5000:19;;2837:89:6;;;;;;;;;-1:-1:-1;;;;;2962:21:6;;2936:23;2962:21;;;:8;:21;;;;;;;;:34;;;;;;;;3032:25;;;;3014:15;:43;3006:89;;;;-1:-1:-1;;;3006:89:6;;5232:2:8;3006:89:6;;;5214:21:8;5271:2;5251:18;;;5244:30;5310:34;5290:18;;;5283:62;-1:-1:-1;;;5361:18:8;;;5354:31;5402:19;;3006:89:6;5030:397:8;3006:89:6;3137:1;3113:7;:20;;;:25;3105:63;;;;-1:-1:-1;;;3105:63:6;;5634:2:8;3105:63:6;;;5616:21:8;5673:2;5653:18;;;5646:30;5712:27;5692:18;;;5685:55;5757:18;;3105:63:6;5432:349:8;3105:63:6;3178:22;3309:7;:15;;;3290;:34;3286:269;;-1:-1:-1;3360:20:6;;;;3286:269;;;3522:22;;;;3492:26;;;;3474:44;;:15;:44;:::i;:::-;3473:71;;;;:::i;:::-;3453:91;;3286:269;3614:17;3590:7;:20;;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;3670:15:6;3641:26;;;:44;3696:23;3722:24;;;:11;:24;;;;;3756:17;;;:38;;3722:24;;3777:17;;3756:38;;3777:17;;3756:38;:::i;:::-;;;;-1:-1:-1;;3849:17:6;;;;3842:66;;-1:-1:-1;;;3842:66:6;;-1:-1:-1;;;;;6413:32:8;;;3842:66:6;;;6395:51:8;6462:18;;;6455:34;;;3849:17:6;;;;3842:34;;6368:18:8;;3842:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3996:11;3942;-1:-1:-1;;;;;3923:85:6;;3955:17;3974:7;:20;;;3923:85;;;;;;6956:25:8;;;7012:2;6997:18;;6990:34;6944:2;6929:18;;6782:248;3923:85:6;;;;;;;;2827:1188;;;2763:1252;;:::o;1169:308::-;1312:47;;;;;;;;1323:8;1312:47;;;;1333:8;1312:47;;;;1343:12;-1:-1:-1;;;;;1312:47:6;;;;;1357:1;1312:47;;;1286:11;:23;1300:8;;1298:10;;;;;:::i;:::-;;;;;-1:-1:-1;1286:23:6;;;;;;;;;;;;;;-1:-1:-1;1286:23:6;;;:73;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1286:73:6;-1:-1:-1;;;;;1286:73:6;;;;;;;;;;;;;;;;;;;1383:8;1369:37;;1393:12;1369:13;:37::i;:::-;1447:12;-1:-1:-1;;;;;1421:49:6;1437:8;;1421:49;1461:8;1421:49;;;;597:25:8;;585:2;570:18;;451:177;1421:49:6;;;;;;;;1169:308;;;;:::o;1778:979::-;-1:-1:-1;;;;;1960:24:6;;;;;;:11;:24;;;;;;;;:37;;;;;;;;;;;1959:38;1951:70;;;;-1:-1:-1;;;1951:70:6;;7559:2:8;1951:70:6;;;7541:21:8;7598:2;7578:18;;;7571:30;-1:-1:-1;;;7617:18:8;;;7610:49;7676:18;;1951:70:6;7357:343:8;1951:70:6;2056:74;;;-1:-1:-1;;;;;7982:32:8;;2056:74:6;;;7964:51:8;8031:18;;;8024:34;;;8074:18;;;8067:34;;;8117:18;;;8110:34;;;8160:19;;;8153:35;;;2031:12:6;;7936:19:8;;2056:74:6;;;-1:-1:-1;;2056:74:6;;;;;;;;;2046:85;;2056:74;2046:85;;;;2141:22;2166:24;;;:11;:24;;;;;;;2141:49;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2141:49:6;;;;;;;;;;;;2208:38;;-1:-1:-1;;;2208:38:6;;2046:85;;-1:-1:-1;2208:25:6;;;;:38;;2046:85;;2240:5;;2208:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2200:83;;;;-1:-1:-1;;;2200:83:6;;9189:2:8;2200:83:6;;;9171:21:8;;;9208:18;;;9201:30;9267:34;9247:18;;;9240:62;9319:18;;2200:83:6;8987:356:8;2200:83:6;-1:-1:-1;;;;;2293:24:6;;;;;;2333:4;2293:24;;;;;;;;:37;;;;;;;;:44;;-1:-1:-1;;2293:44:6;;;;;;2383:19;2393:9;2383:7;:19;:::i;:::-;2369:34;;:10;:34;:::i;:::-;2347:56;;2450:191;;;;;;;;2471:10;2450:191;;;;2495:10;2450:191;;;;2519:9;2450:191;;;;2542:7;2450:191;;;;2563:14;2450:191;;;;2591:9;2450:191;;;;2614:17;2450:191;;;2413:8;:21;2422:11;-1:-1:-1;;;;;2413:21:6;-1:-1:-1;;;;;2413:21:6;;;;;;;;;;;;:34;2435:11;2413:34;;;;;;;;;;;:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2675:15;2655:17;:35;2651:100;;;2706:34;2715:11;2728;2706:8;:34::i;:::-;1941:816;;;1778:979;;;;;;;:::o;1483:289::-;1549:29;1581:20;;;:11;:20;;;;;;;;;1626:23;;;;1619:78;;-1:-1:-1;;;1619:78:6;;1664:10;1619:78;;;9810:34:8;1684:4:6;9860:18:8;;;9853:43;9912:18;;;9905:34;;;1581:20:6;;-1:-1:-1;;;;;1626:23:6;;1619:44;;9745:18:8;;1619:78:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1611:112;;;;-1:-1:-1;;;1611:112:6;;10152:2:8;1611:112:6;;;10134:21:8;10191:2;10171:18;;;10164:30;-1:-1:-1;;;10210:18:8;;;10203:51;10271:18;;1611:112:6;9950:345:8;1611:112:6;1760:5;1733:10;:23;;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1483:289:6:o;14:173:8:-;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;633:180::-;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;-1:-1:-1;784:23:8;;633:180;-1:-1:-1;633:180:8:o;1240:254::-;1308:6;1316;1369:2;1357:9;1348:7;1344:23;1340:32;1337:52;;;1385:1;1382;1375:12;1337:52;1408:29;1427:9;1408:29;:::i;:::-;1398:39;1484:2;1469:18;;;;1456:32;;-1:-1:-1;;;1240:254:8:o;1691:391::-;1777:6;1785;1793;1801;1854:3;1842:9;1833:7;1829:23;1825:33;1822:53;;;1871:1;1868;1861:12;1822:53;1907:9;1894:23;1884:33;;1964:2;1953:9;1949:18;1936:32;1926:42;;1987:38;2021:2;2010:9;2006:18;1987:38;:::i;:::-;1691:391;;;;-1:-1:-1;1977:48:8;;2072:2;2057:18;2044:32;;-1:-1:-1;;1691:391:8:o;2087:127::-;2148:10;2143:3;2139:20;2136:1;2129:31;2179:4;2176:1;2169:15;2203:4;2200:1;2193:15;2219:1533;2357:6;2365;2373;2381;2389;2397;2405;2458:3;2446:9;2437:7;2433:23;2429:33;2426:53;;;2475:1;2472;2465:12;2426:53;2511:9;2498:23;2488:33;;2540:2;2561:38;2595:2;2584:9;2580:18;2561:38;:::i;:::-;2551:48;;2646:2;2635:9;2631:18;2618:32;2608:42;;2697:2;2686:9;2682:18;2669:32;2659:42;;2748:3;2737:9;2733:19;2720:33;2710:43;;2800:3;2789:9;2785:19;2772:33;2762:43;;2856:3;2845:9;2841:19;2828:33;2880:18;2921:2;2913:6;2910:14;2907:34;;;2937:1;2934;2927:12;2907:34;2975:6;2964:9;2960:22;2950:32;;3020:7;3013:4;3009:2;3005:13;3001:27;2991:55;;3042:1;3039;3032:12;2991:55;3078:2;3065:16;3100:2;3096;3093:10;3090:36;;;3106:18;;:::i;:::-;3152:2;3149:1;3145:10;3184:2;3178:9;3247:2;3243:7;3238:2;3234;3230:11;3226:25;3218:6;3214:38;3302:6;3290:10;3287:22;3282:2;3270:10;3267:18;3264:46;3261:72;;;3313:18;;:::i;:::-;3349:2;3342:22;3399:18;;;3433:15;;;;-1:-1:-1;3475:11:8;;;3471:20;;;3503:19;;;3500:39;;;3535:1;3532;3525:12;3500:39;3559:11;;;;3579:142;3595:6;3590:3;3587:15;3579:142;;;3661:17;;3649:30;;3612:12;;;;3699;;;;3579:142;;;3740:6;3730:16;;;;;;;;2219:1533;;;;;;;;;;:::o;4369:248::-;4437:6;4445;4498:2;4486:9;4477:7;4473:23;4469:32;4466:52;;;4514:1;4511;4504:12;4466:52;-1:-1:-1;;4537:23:8;;;4607:2;4592:18;;;4579:32;;-1:-1:-1;4369:248:8:o;5786:127::-;5847:10;5842:3;5838:20;5835:1;5828:31;5878:4;5875:1;5868:15;5902:4;5899:1;5892:15;5918:125;5958:4;5986:1;5983;5980:8;5977:34;;;5991:18;;:::i;:::-;-1:-1:-1;6028:9:8;;5918:125::o;6048:168::-;6088:7;6154:1;6150;6146:6;6142:14;6139:1;6136:21;6131:1;6124:9;6117:17;6113:45;6110:71;;;6161:18;;:::i;:::-;-1:-1:-1;6201:9:8;;6048:168::o;6500:277::-;6567:6;6620:2;6608:9;6599:7;6595:23;6591:32;6588:52;;;6636:1;6633;6626:12;6588:52;6668:9;6662:16;6721:5;6714:13;6707:21;6700:5;6697:32;6687:60;;6743:1;6740;6733:12;6687:60;6766:5;6500:277;-1:-1:-1;;;6500:277:8:o;7035:135::-;7074:3;-1:-1:-1;;7095:17:8;;7092:43;;;7115:18;;:::i;:::-;-1:-1:-1;7162:1:8;7151:13;;7035:135::o;8199:783::-;8405:4;8453:2;8442:9;8438:18;8483:6;8472:9;8465:25;8509:2;8547:6;8542:2;8531:9;8527:18;8520:34;8590:2;8585;8574:9;8570:18;8563:30;8613:6;8648;8642:13;8679:6;8671;8664:22;8717:3;8706:9;8702:19;8695:26;;8756:2;8748:6;8744:15;8730:29;;8777:1;8787:169;8801:6;8798:1;8795:13;8787:169;;;8862:13;;8850:26;;8931:15;;;;8896:12;;;;8823:1;8816:9;8787:169;;;-1:-1:-1;8973:3:8;;8199:783;-1:-1:-1;;;;;;;;8199:783:8:o;9348:217::-;9388:1;9414;9404:132;;9458:10;9453:3;9449:20;9446:1;9439:31;9493:4;9490:1;9483:15;9521:4;9518:1;9511:15;9404:132;-1:-1:-1;9550:9:8;;9348:217::o;10300:128::-;10340:3;10371:1;10367:6;10364:1;10361:13;10358:39;;;10377:18;;:::i;:::-;-1:-1:-1;10413:9:8;;10300:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    128,
    4018
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E18A054 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9E18A054 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xA8EFA9BA EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xC26CB54F EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xF16AD51E EQ PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x390B7C66 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x85D88CB1 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x86BB8249 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xA91 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x1E4 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 SWAP3 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D75737420696E697469616C697A6520796F7572206163636F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x103334B939BA17 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD TIMESTAMP GT PUSH2 0x334 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374207761697420756E74696C206166746572206C6F636B20706572696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20636F696E73206C65667420746F20776974686472617700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x3A0 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH2 0x3B4 SWAP1 TIMESTAMP PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 DUP5 SWAP3 PUSH2 0x403 SWAP1 DUP5 SWAP1 PUSH2 0xBCA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x46C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST POP DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5FFB4B63DEC15BA26308386F1D5CA61843B29BA365511062A887D95AA27532D3 DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD PUSH2 0x526 SWAP1 PUSH2 0xC29 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH2 0x589 SWAP1 DUP3 PUSH2 0x8B5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SLOAD PUSH32 0xE273192D66FEECCD5E76000356363957EB17E3F1BFF1F91105559DB4AA9281B6 DUP7 PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x2 DUP1 DUP5 MSTORE SWAP1 DUP5 SWAP1 KECCAK256 PUSH1 0x80 DUP7 ADD DUP6 MSTORE DUP1 SLOAD DUP1 DUP8 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 ADD MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE SWAP2 MLOAD PUSH4 0x2769CD1F PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 SWAP4 POP PUSH20 0x0 SWAP2 PUSH4 0x9DA7347C SWAP2 PUSH2 0x705 SWAP2 DUP7 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x731 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x755 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070726F6F6620636F756C64206E6F742062652076657269666965642E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP14 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x7D9 DUP8 DUP8 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x7E3 SWAP1 DUP10 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP TIMESTAMP DUP6 LT ISZERO PUSH2 0x8A9 JUMPI PUSH2 0x8A9 DUP11 DUP11 PUSH2 0x22C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x951 SWAP2 SWAP1 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AB JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x9F2 PUSH1 0x20 DUP5 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA30 DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0xA6B PUSH1 0x40 DUP7 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xAAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 PUSH2 0xABD DUP2 DUP11 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB1C JUMPI PUSH2 0xB1C PUSH2 0xA7B JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xB41 JUMPI PUSH2 0xB41 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP15 DUP4 GT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xB7D JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xB64 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBDC JUMPI PUSH2 0xBDC PUSH2 0xBB4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFB PUSH2 0xBB4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xC3D JUMPI PUSH2 0xC3D PUSH2 0xBB4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 DUP6 DUP2 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC8B JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC6F JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCCE JUMPI PUSH2 0xCCE PUSH2 0xBB4 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 PUSH7 0xEF61B854BCDF35 0xBD 0xFB DUP6 PUSH9 0xC48D081A0ED3194750 0xC4 BLOCKHASH SSTORE DUP2 0xE8 SWAP10 0x4A 0xE4 0xC8 0xAB PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        128,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87"
    },
    "25": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9E18A054"
    },
    "38": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9E18A054"
    },
    "49": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16A"
    },
    "53": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA8EFA9BA"
    },
    "60": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "64": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC26CB54F"
    },
    "71": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x190"
    },
    "75": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF16AD51E"
    },
    "82": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x219"
    },
    "86": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "90": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "REVERT",
      "path": "6"
    },
    "91": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "92": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "93": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0xF714CE"
    },
    "97": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "EQ",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C"
    },
    "101": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x390B7C66"
    },
    "108": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "EQ",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA1"
    },
    "112": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "113": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x85D88CB1"
    },
    "119": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "EQ",
      "path": "6"
    },
    "120": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD"
    },
    "123": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x86BB8249"
    },
    "130": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "EQ",
      "path": "6"
    },
    "131": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12C"
    },
    "134": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "135": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "139": {
      "first_revert": true,
      "fn": null,
      "offset": [
        128,
        4018
      ],
      "op": "REVERT",
      "path": "6"
    },
    "140": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "141": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9F"
    },
    "144": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A"
    },
    "147": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "148": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "150": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9CF"
    },
    "153": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2763,
        4015
      ],
      "op": "JUMP",
      "path": "6"
    },
    "154": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "155": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22C"
    },
    "158": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2763,
        4015
      ],
      "op": "JUMP",
      "path": "6"
    },
    "159": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "160": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "STOP",
      "path": "6"
    },
    "161": {
      "offset": [
        191,
        215
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "162": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA"
    },
    "165": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "167": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "168": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "DUP2",
      "path": "6"
    },
    "169": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "JUMP",
      "path": "6"
    },
    "170": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "171": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "173": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "174": {
      "op": "SWAP1"
    },
    "175": {
      "op": "DUP2"
    },
    "176": {
      "op": "MSTORE"
    },
    "177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "179": {
      "op": "ADD"
    },
    "180": {
      "offset": [
        191,
        215
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "181": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "183": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "184": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "DUP1",
      "path": "6"
    },
    "185": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "186": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "SUB",
      "path": "6"
    },
    "187": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "188": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        191,
        215
      ],
      "op": "RETURN",
      "path": "6"
    },
    "189": {
      "offset": [
        654,
        701
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "190": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFD"
    },
    "193": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB"
    },
    "196": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "197": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "199": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9FB"
    },
    "202": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        654,
        701
      ],
      "op": "JUMP",
      "path": "6"
    },
    "203": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "204": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "206": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "208": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "DUP2",
      "path": "6"
    },
    "209": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "210": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "211": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "213": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "214": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "DUP3",
      "path": "6"
    },
    "215": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "216": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "218": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "219": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "220": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "221": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "DUP1",
      "path": "6"
    },
    "222": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "223": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "225": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "DUP3",
      "path": "6"
    },
    "226": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "ADD",
      "path": "6"
    },
    "227": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "228": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "229": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "DUP3",
      "path": "6"
    },
    "230": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "ADD",
      "path": "6"
    },
    "231": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "232": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "234": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "235": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "236": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "ADD",
      "path": "6"
    },
    "237": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "238": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "239": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "240": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "247": {
      "op": "SHL"
    },
    "248": {
      "op": "SUB"
    },
    "249": {
      "offset": [
        654,
        701
      ],
      "op": "AND",
      "path": "6"
    },
    "250": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "251": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "DUP5",
      "path": "6"
    },
    "252": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "JUMP",
      "path": "6"
    },
    "253": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "254": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "256": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "257": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB4"
    },
    "260": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "261": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "262": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "263": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "264": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        654,
        701
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "265": {
      "op": "SWAP4"
    },
    "266": {
      "op": "DUP5"
    },
    "267": {
      "op": "MSTORE"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "270": {
      "op": "DUP5"
    },
    "271": {
      "op": "ADD"
    },
    "272": {
      "op": "SWAP3"
    },
    "273": {
      "op": "SWAP1"
    },
    "274": {
      "op": "SWAP3"
    },
    "275": {
      "op": "MSTORE"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "282": {
      "op": "SHL"
    },
    "283": {
      "op": "SUB"
    },
    "284": {
      "op": "AND"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "287": {
      "op": "DUP4"
    },
    "288": {
      "op": "ADD"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "292": {
      "op": "DUP3"
    },
    "293": {
      "op": "ADD"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "297": {
      "op": "ADD"
    },
    "298": {
      "op": "SWAP1"
    },
    "299": {
      "op": "JUMP"
    },
    "300": {
      "offset": [
        586,
        648
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "301": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "304": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13A"
    },
    "307": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "308": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "310": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA14"
    },
    "313": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        586,
        648
      ],
      "op": "JUMP",
      "path": "6"
    },
    "314": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "315": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "317": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "319": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "320": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "DUP2",
      "path": "6"
    },
    "321": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "322": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "324": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "325": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "DUP4",
      "path": "6"
    },
    "326": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "327": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "329": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "DUP1",
      "path": "6"
    },
    "330": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "DUP5",
      "path": "6"
    },
    "331": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "332": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "333": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "334": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "335": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "336": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "DUP3",
      "path": "6"
    },
    "337": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "338": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "339": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "340": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "341": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "343": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "AND",
      "path": "6"
    },
    "344": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "DUP2",
      "path": "6"
    },
    "345": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "JUMP",
      "path": "6"
    },
    "346": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "347": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "349": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        586,
        648
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "350": {
      "op": "SWAP1"
    },
    "351": {
      "op": "ISZERO"
    },
    "352": {
      "op": "ISZERO"
    },
    "353": {
      "op": "DUP2"
    },
    "354": {
      "op": "MSTORE"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "offset": [
        586,
        648
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB4"
    },
    "361": {
      "op": "JUMP"
    },
    "362": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "363": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9F"
    },
    "366": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x178"
    },
    "369": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "370": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "372": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA3E"
    },
    "375": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        1169,
        1477
      ],
      "op": "JUMP",
      "path": "6"
    },
    "376": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "377": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E9"
    },
    "380": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        1169,
        1477
      ],
      "op": "JUMP",
      "path": "6"
    },
    "381": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "382": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9F"
    },
    "385": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18B"
    },
    "388": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "389": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "391": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA91"
    },
    "394": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1778,
        2757
      ],
      "op": "JUMP",
      "path": "6"
    },
    "395": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "396": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D5"
    },
    "399": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1778,
        2757
      ],
      "op": "JUMP",
      "path": "6"
    },
    "400": {
      "offset": [
        707,
        769
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "401": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E4"
    },
    "404": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19E"
    },
    "407": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "408": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "410": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA14"
    },
    "413": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        707,
        769
      ],
      "op": "JUMP",
      "path": "6"
    },
    "414": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "415": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "417": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "419": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP2",
      "path": "6"
    },
    "420": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP2",
      "path": "6"
    },
    "421": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "422": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "424": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "425": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP5",
      "path": "6"
    },
    "426": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "427": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "429": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP1",
      "path": "6"
    },
    "430": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP6",
      "path": "6"
    },
    "431": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "432": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "433": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "434": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "435": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "436": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP4",
      "path": "6"
    },
    "437": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "438": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "439": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "440": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP1",
      "path": "6"
    },
    "441": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "442": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "444": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP3",
      "path": "6"
    },
    "445": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "ADD",
      "path": "6"
    },
    "446": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "447": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "449": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP4",
      "path": "6"
    },
    "450": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "ADD",
      "path": "6"
    },
    "451": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "452": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "453": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP4",
      "path": "6"
    },
    "454": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "ADD",
      "path": "6"
    },
    "455": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "456": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "458": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP5",
      "path": "6"
    },
    "459": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "ADD",
      "path": "6"
    },
    "460": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "461": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "463": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP6",
      "path": "6"
    },
    "464": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "ADD",
      "path": "6"
    },
    "465": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "466": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "468": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "469": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "470": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "ADD",
      "path": "6"
    },
    "471": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "472": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "473": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "474": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "475": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "476": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "477": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "478": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "479": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "480": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "481": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "482": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP8",
      "path": "6"
    },
    "483": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "JUMP",
      "path": "6"
    },
    "484": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "485": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "487": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "DUP1",
      "path": "6"
    },
    "488": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        707,
        769
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "489": {
      "op": "SWAP8"
    },
    "490": {
      "op": "DUP9"
    },
    "491": {
      "op": "MSTORE"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "494": {
      "op": "DUP9"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "SWAP7"
    },
    "497": {
      "op": "SWAP1"
    },
    "498": {
      "op": "SWAP7"
    },
    "499": {
      "op": "MSTORE"
    },
    "500": {
      "op": "SWAP5"
    },
    "501": {
      "op": "DUP7"
    },
    "502": {
      "op": "ADD"
    },
    "503": {
      "op": "SWAP4"
    },
    "504": {
      "op": "SWAP1"
    },
    "505": {
      "op": "SWAP4"
    },
    "506": {
      "op": "MSTORE"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "509": {
      "op": "DUP6"
    },
    "510": {
      "op": "ADD"
    },
    "511": {
      "op": "SWAP2"
    },
    "512": {
      "op": "SWAP1"
    },
    "513": {
      "op": "SWAP2"
    },
    "514": {
      "op": "MSTORE"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "517": {
      "op": "DUP5"
    },
    "518": {
      "op": "ADD"
    },
    "519": {
      "op": "MSTORE"
    },
    "520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "522": {
      "op": "DUP4"
    },
    "523": {
      "op": "ADD"
    },
    "524": {
      "op": "MSTORE"
    },
    "525": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "527": {
      "op": "DUP3"
    },
    "528": {
      "op": "ADD"
    },
    "529": {
      "op": "MSTORE"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "532": {
      "op": "ADD"
    },
    "533": {
      "offset": [
        707,
        769
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB4"
    },
    "536": {
      "op": "JUMP"
    },
    "537": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1483,
        1772
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "538": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1483,
        1772
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9F"
    },
    "541": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1483,
        1772
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x227"
    },
    "544": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1483,
        1772
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "545": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1483,
        1772
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "547": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1483,
        1772
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB92"
    },
    "550": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        1483,
        1772
      ],
      "op": "JUMP",
      "path": "6"
    },
    "551": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1483,
        1772
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "552": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1483,
        1772
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8B5"
    },
    "555": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        1483,
        1772
      ],
      "op": "JUMP",
      "path": "6"
    },
    "556": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "563": {
      "op": "SHL"
    },
    "564": {
      "op": "SUB"
    },
    "565": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 0
    },
    "566": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "AND",
      "path": "6"
    },
    "567": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "569": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "570": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "DUP2",
      "path": "6"
    },
    "571": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "572": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2856
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "574": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "576": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "577": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "DUP2",
      "path": "6"
    },
    "578": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "579": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "581": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "DUP1",
      "path": "6"
    },
    "582": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "DUP4",
      "path": "6"
    },
    "583": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2869
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "584": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "DUP6",
      "path": "6"
    },
    "585": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "DUP5",
      "path": "6"
    },
    "586": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "587": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "588": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "589": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "590": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "591": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "592": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "593": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "595": {
      "branch": 20,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2845,
        2882
      ],
      "op": "AND",
      "path": "6"
    },
    "596": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B4"
    },
    "599": {
      "branch": 20,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "600": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "602": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "603": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "607": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "609": {
      "op": "SHL"
    },
    "610": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "DUP2",
      "path": "6"
    },
    "611": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "614": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "616": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "DUP3",
      "path": "6"
    },
    "617": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "ADD",
      "path": "6"
    },
    "618": {
      "op": "MSTORE"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "623": {
      "op": "DUP3"
    },
    "624": {
      "op": "ADD"
    },
    "625": {
      "op": "MSTORE"
    },
    "626": {
      "op": "PUSH32",
      "value": "0x596F75206D75737420696E697469616C697A6520796F7572206163636F756E74"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "661": {
      "op": "DUP3"
    },
    "662": {
      "op": "ADD"
    },
    "663": {
      "op": "MSTORE"
    },
    "664": {
      "op": "PUSH7",
      "value": "0x103334B939BA17"
    },
    "672": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "674": {
      "op": "SHL"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "677": {
      "op": "DUP3"
    },
    "678": {
      "op": "ADD"
    },
    "679": {
      "op": "MSTORE"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "682": {
      "op": "ADD"
    },
    "683": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "684": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "686": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "687": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "DUP1",
      "path": "6"
    },
    "688": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "689": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "SUB",
      "path": "6"
    },
    "690": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "691": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "692": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2837,
        2926
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "699": {
      "op": "SHL"
    },
    "700": {
      "op": "SUB"
    },
    "701": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "DUP2",
      "path": "6"
    },
    "702": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "AND",
      "path": "6"
    },
    "703": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2936,
        2959
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "705": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "706": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "DUP2",
      "path": "6"
    },
    "707": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "708": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2970
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "710": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "712": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "713": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "DUP2",
      "path": "6"
    },
    "714": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "715": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "717": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "DUP1",
      "path": "6"
    },
    "718": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "DUP4",
      "path": "6"
    },
    "719": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2983
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "720": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2996
      ],
      "op": "DUP6",
      "path": "6"
    },
    "721": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2996
      ],
      "op": "DUP5",
      "path": "6"
    },
    "722": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2996
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "723": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2996
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "724": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2996
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "725": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2996
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "726": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2996
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "727": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2962,
        2996
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "728": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3032,
        3057
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x6"
    },
    "730": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3032,
        3057
      ],
      "op": "DUP2",
      "path": "6"
    },
    "731": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3032,
        3057
      ],
      "op": "ADD",
      "path": "6"
    },
    "732": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3032,
        3057
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "733": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3014,
        3029
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "734": {
      "branch": 21,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3014,
        3057
      ],
      "op": "GT",
      "path": "6"
    },
    "735": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x334"
    },
    "738": {
      "branch": 21,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "739": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "741": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "DUP2",
      "path": "6"
    },
    "750": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "753": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "755": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "DUP3",
      "path": "6"
    },
    "756": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "ADD",
      "path": "6"
    },
    "757": {
      "op": "MSTORE"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "762": {
      "op": "DUP3"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "op": "MSTORE"
    },
    "765": {
      "op": "PUSH32",
      "value": "0x4D757374207761697420756E74696C206166746572206C6F636B20706572696F"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "800": {
      "op": "DUP3"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "805": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "807": {
      "op": "SHL"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "810": {
      "op": "DUP3"
    },
    "811": {
      "op": "ADD"
    },
    "812": {
      "op": "MSTORE"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "815": {
      "op": "ADD"
    },
    "816": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AB"
    },
    "819": {
      "op": "JUMP"
    },
    "820": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3006,
        3095
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "821": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3137,
        3138
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x0"
    },
    "823": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3113,
        3120
      ],
      "op": "DUP2",
      "path": "6"
    },
    "824": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3113,
        3133
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "826": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3113,
        3133
      ],
      "op": "ADD",
      "path": "6"
    },
    "827": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3113,
        3133
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "828": {
      "branch": 22,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3113,
        3138
      ],
      "op": "GT",
      "path": "6"
    },
    "829": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x388"
    },
    "832": {
      "branch": 22,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "833": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "835": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "836": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "840": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "842": {
      "op": "SHL"
    },
    "843": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "DUP2",
      "path": "6"
    },
    "844": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "847": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "849": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "DUP3",
      "path": "6"
    },
    "850": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "ADD",
      "path": "6"
    },
    "851": {
      "op": "MSTORE"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "856": {
      "op": "DUP3"
    },
    "857": {
      "op": "ADD"
    },
    "858": {
      "op": "MSTORE"
    },
    "859": {
      "op": "PUSH32",
      "value": "0x4E6F20636F696E73206C65667420746F20776974686472617700000000000000"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "894": {
      "op": "DUP3"
    },
    "895": {
      "op": "ADD"
    },
    "896": {
      "op": "MSTORE"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "899": {
      "op": "ADD"
    },
    "900": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AB"
    },
    "903": {
      "op": "JUMP"
    },
    "904": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3105,
        3168
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "905": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3178,
        3200
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "907": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3309,
        3316
      ],
      "op": "DUP2",
      "path": "6"
    },
    "908": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3309,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "910": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3309,
        3324
      ],
      "op": "ADD",
      "path": "6"
    },
    "911": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3309,
        3324
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "912": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3290,
        3305
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "913": {
      "branch": 23,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3290,
        3324
      ],
      "op": "LT",
      "path": "6"
    },
    "914": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3286,
        3555
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3A0"
    },
    "917": {
      "branch": 23,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3286,
        3555
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3360,
        3380
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x1"
    },
    "921": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3360,
        3380
      ],
      "op": "DUP2",
      "path": "6"
    },
    "922": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3360,
        3380
      ],
      "op": "ADD",
      "path": "6"
    },
    "923": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3360,
        3380
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "924": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3286,
        3555
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C1"
    },
    "927": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3286,
        3555
      ],
      "op": "JUMP",
      "path": "6"
    },
    "928": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3286,
        3555
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "929": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3522,
        3544
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x4"
    },
    "931": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3522,
        3544
      ],
      "op": "DUP3",
      "path": "6"
    },
    "932": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3522,
        3544
      ],
      "op": "ADD",
      "path": "6"
    },
    "933": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3522,
        3544
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "934": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3492,
        3518
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "936": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3492,
        3518
      ],
      "op": "DUP4",
      "path": "6"
    },
    "937": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3492,
        3518
      ],
      "op": "ADD",
      "path": "6"
    },
    "938": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3492,
        3518
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "939": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3474,
        3518
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B4"
    },
    "942": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3474,
        3518
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "943": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3474,
        3489
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "944": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3474,
        3518
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCA"
    },
    "947": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        3474,
        3518
      ],
      "op": "JUMP",
      "path": "6"
    },
    "948": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3474,
        3518
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "949": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3473,
        3544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3BE"
    },
    "952": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3473,
        3544
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "953": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3473,
        3544
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "954": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3473,
        3544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBE1"
    },
    "957": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        3473,
        3544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "958": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3473,
        3544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "959": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3453,
        3544
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "960": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3453,
        3544
      ],
      "op": "POP",
      "path": "6"
    },
    "961": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3286,
        3555
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "962": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3614,
        3631
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 5
    },
    "963": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3597
      ],
      "op": "DUP3",
      "path": "6"
    },
    "964": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3610
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "966": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3610
      ],
      "op": "ADD",
      "path": "6"
    },
    "967": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3610
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "969": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "970": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "DUP3",
      "path": "6"
    },
    "971": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "972": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D5"
    },
    "975": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "976": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "977": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCA"
    },
    "980": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        3590,
        3631
      ],
      "op": "JUMP",
      "path": "6"
    },
    "981": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "982": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "983": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "984": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3590,
        3631
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "985": {
      "op": "POP"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3670,
        3685
      ],
      "op": "TIMESTAMP",
      "path": "6",
      "statement": 6
    },
    "988": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3641,
        3667
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "990": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3641,
        3667
      ],
      "op": "DUP4",
      "path": "6"
    },
    "991": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3641,
        3667
      ],
      "op": "ADD",
      "path": "6"
    },
    "992": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3641,
        3685
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "993": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3696,
        3719
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "995": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3746
      ],
      "op": "DUP5",
      "path": "6"
    },
    "996": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3746
      ],
      "op": "DUP2",
      "path": "6"
    },
    "997": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3746
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "998": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3733
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1000": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3746
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1002": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3746
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1003": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3746
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1005": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3746
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1006": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3746
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1007": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3773
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x3"
    },
    "1009": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3773
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1010": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3773
      ],
      "op": "ADD",
      "path": "6"
    },
    "1011": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3794
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1012": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3794
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1013": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3746
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1014": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3722,
        3746
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1015": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3777,
        3794
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1016": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3777,
        3794
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1017": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3794
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x403"
    },
    "1020": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3794
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1021": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3777,
        3794
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1022": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3777,
        3794
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1023": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3794
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCA"
    },
    "1026": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        3756,
        3794
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1027": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3794
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1028": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3794
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1029": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3794
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1030": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3756,
        3794
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "op": "POP"
    },
    "1033": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3849,
        3866
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x2"
    },
    "1035": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3849,
        3866
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1036": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3849,
        3866
      ],
      "op": "ADD",
      "path": "6"
    },
    "1037": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3849,
        3866
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1038": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1040": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1041": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1050": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1057": {
      "op": "SHL"
    },
    "1058": {
      "op": "SUB"
    },
    "1059": {
      "op": "DUP7"
    },
    "1060": {
      "op": "DUP2"
    },
    "1061": {
      "op": "AND"
    },
    "1062": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1064": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1065": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "ADD",
      "path": "6"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1069": {
      "op": "DUP3"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "DUP6"
    },
    "1072": {
      "op": "SWAP1"
    },
    "1073": {
      "op": "MSTORE"
    },
    "1074": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3849,
        3866
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1075": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3849,
        3866
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1076": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3849,
        3866
      ],
      "op": "AND",
      "path": "6"
    },
    "1077": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3849,
        3866
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1078": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3876
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "1083": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3876
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1086": {
      "op": "ADD"
    },
    "1087": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1089": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1091": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1092": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1093": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1094": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "SUB",
      "path": "6"
    },
    "1095": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1096": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1098": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1099": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1100": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1101": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1102": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1103": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1104": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x458"
    },
    "1107": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1108": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1110": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1111": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1112": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1113": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1114": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "GAS",
      "path": "6"
    },
    "1115": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "CALL",
      "path": "6"
    },
    "1116": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1117": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1118": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1119": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46C"
    },
    "1122": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1123": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1124": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1126": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1127": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1128": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1129": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1131": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1132": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1133": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1134": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1135": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1136": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1137": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1139": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1140": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1141": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1143": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "NOT",
      "path": "6"
    },
    "1144": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1146": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1147": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "ADD",
      "path": "6"
    },
    "1148": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "AND",
      "path": "6"
    },
    "1149": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1150": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "ADD",
      "path": "6"
    },
    "1151": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1152": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1154": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1155": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1156": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1157": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "ADD",
      "path": "6"
    },
    "1158": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1159": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x490"
    },
    "1162": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1163": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1164": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC00"
    },
    "1167": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        3842,
        3908
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1168": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1169": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3842,
        3908
      ],
      "op": "POP",
      "path": "6"
    },
    "1170": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3996,
        4007
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 9
    },
    "1171": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3942,
        3953
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1178": {
      "op": "SHL"
    },
    "1179": {
      "op": "SUB"
    },
    "1180": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "AND",
      "path": "6"
    },
    "1181": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5FFB4B63DEC15BA26308386F1D5CA61843B29BA365511062A887D95AA27532D3"
    },
    "1214": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3955,
        3972
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1215": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3974,
        3981
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1216": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3974,
        3994
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1218": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3974,
        3994
      ],
      "op": "ADD",
      "path": "6"
    },
    "1219": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3974,
        3994
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1220": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1222": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1223": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DA"
    },
    "1226": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1227": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1228": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1229": {
      "op": "SWAP2"
    },
    "1230": {
      "op": "DUP3"
    },
    "1231": {
      "op": "MSTORE"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1234": {
      "op": "DUP3"
    },
    "1235": {
      "op": "ADD"
    },
    "1236": {
      "op": "MSTORE"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1239": {
      "op": "ADD"
    },
    "1240": {
      "op": "SWAP1"
    },
    "1241": {
      "op": "JUMP"
    },
    "1242": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1243": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1245": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1246": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1247": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1248": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "SUB",
      "path": "6"
    },
    "1249": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1250": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        3923,
        4008
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1251": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2827,
        4015
      ],
      "op": "POP",
      "path": "6"
    },
    "1252": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2827,
        4015
      ],
      "op": "POP",
      "path": "6"
    },
    "1253": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2827,
        4015
      ],
      "op": "POP",
      "path": "6"
    },
    "1254": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "POP",
      "path": "6"
    },
    "1255": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2763,
        4015
      ],
      "op": "POP",
      "path": "6"
    },
    "1256": {
      "fn": "MerkleVesting.withdraw",
      "jump": "o",
      "offset": [
        2763,
        4015
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1257": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1258": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x40"
    },
    "1260": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1261": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1262": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "1264": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "ADD",
      "path": "6"
    },
    "1265": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1267": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1268": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1269": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1323,
        1331
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1270": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1271": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1272": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1274": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "ADD",
      "path": "6"
    },
    "1275": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1333,
        1341
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1276": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1277": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1278": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1280": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "ADD",
      "path": "6"
    },
    "1281": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1343,
        1355
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1288": {
      "op": "SHL"
    },
    "1289": {
      "op": "SUB"
    },
    "1290": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "AND",
      "path": "6"
    },
    "1291": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1292": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1293": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1295": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "ADD",
      "path": "6"
    },
    "1296": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1357,
        1358
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1298": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1299": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1300": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1312,
        1359
      ],
      "op": "POP",
      "path": "6"
    },
    "1301": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1297
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1303": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1305": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1300,
        1308
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1306": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1300,
        1308
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1308": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1298,
        1308
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1309": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1298,
        1308
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1310": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1298,
        1308
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x526"
    },
    "1313": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1298,
        1308
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1314": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1298,
        1308
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC29"
    },
    "1317": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        1298,
        1308
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1318": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1298,
        1308
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1319": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1298,
        1308
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1320": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1298,
        1308
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1321": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1298,
        1308
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1322": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1298,
        1308
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1323": {
      "op": "POP"
    },
    "1324": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1325": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1326": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1328": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1329": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1330": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "ADD",
      "path": "6"
    },
    "1331": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1332": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1333": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1334": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1335": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1337": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1338": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1339": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "ADD",
      "path": "6"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1342": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1343": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1344": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1309
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1345": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1346": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1347": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1348": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1349": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1350": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1351": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "ADD",
      "path": "6"
    },
    "1352": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1353": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1355": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1356": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "ADD",
      "path": "6"
    },
    "1357": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1358": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1359": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1360": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "ADD",
      "path": "6"
    },
    "1361": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1362": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1364": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1365": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "ADD",
      "path": "6"
    },
    "1366": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1367": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "op": "SUB"
    },
    "1376": {
      "op": "NOT"
    },
    "1377": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "AND",
      "path": "6"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "op": "SUB"
    },
    "1386": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1387": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1388": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "AND",
      "path": "6"
    },
    "1389": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1390": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1391": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1392": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "OR",
      "path": "6"
    },
    "1393": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1394": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1395": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1397": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1398": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1399": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "ADD",
      "path": "6"
    },
    "1400": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1401": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1403": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1404": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1405": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "ADD",
      "path": "6"
    },
    "1406": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1286,
        1359
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1407": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1383,
        1391
      ],
      "op": "SLOAD",
      "path": "6",
      "statement": 11
    },
    "1408": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1369,
        1406
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x589"
    },
    "1411": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1369,
        1406
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1412": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1393,
        1405
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1413": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1369,
        1382
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8B5"
    },
    "1416": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        1369,
        1406
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1417": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1369,
        1406
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1418": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1447,
        1459
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 12
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1425": {
      "op": "SHL"
    },
    "1426": {
      "op": "SUB"
    },
    "1427": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "AND",
      "path": "6"
    },
    "1428": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1437,
        1445
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1430": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1437,
        1445
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1431": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xE273192D66FEECCD5E76000356363957EB17E3F1BFF1F91105559DB4AA9281B6"
    },
    "1464": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1461,
        1469
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1465": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1467": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1468": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5C7"
    },
    "1471": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1472": {
      "op": "DUP2"
    },
    "1473": {
      "op": "MSTORE"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "SWAP1"
    },
    "1478": {
      "op": "JUMP"
    },
    "1479": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1480": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1482": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1483": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1484": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1485": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "SUB",
      "path": "6"
    },
    "1486": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1487": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1421,
        1470
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1488": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "POP",
      "path": "6"
    },
    "1489": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "POP",
      "path": "6"
    },
    "1490": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "POP",
      "path": "6"
    },
    "1491": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1169,
        1477
      ],
      "op": "POP",
      "path": "6"
    },
    "1492": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "o",
      "offset": [
        1169,
        1477
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1493": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "SUB"
    },
    "1502": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 13
    },
    "1503": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "AND",
      "path": "6"
    },
    "1504": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1506": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1507": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1508": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1509": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1971
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1511": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1513": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1514": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1515": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1516": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1518": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1519": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1520": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1984
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1521": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "DUP11",
      "path": "6"
    },
    "1522": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1523": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1524": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1525": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1526": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1527": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1528": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1529": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1530": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1532": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1960,
        1997
      ],
      "op": "AND",
      "path": "6"
    },
    "1533": {
      "branch": 24,
      "fn": "MerkleVesting.initialize",
      "offset": [
        1959,
        1997
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1534": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x63F"
    },
    "1537": {
      "branch": 24,
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1538": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1540": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1541": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1547": {
      "op": "SHL"
    },
    "1548": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1549": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1552": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1554": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1555": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "ADD",
      "path": "6"
    },
    "1556": {
      "op": "MSTORE"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1561": {
      "op": "DUP3"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "op": "PUSH19",
      "value": "0x105B1C9958591E481A5B9A5D1A585B1A5E9959"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "1586": {
      "op": "SHL"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1589": {
      "op": "DUP3"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1594": {
      "op": "ADD"
    },
    "1595": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AB"
    },
    "1598": {
      "op": "JUMP"
    },
    "1599": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1951,
        2021
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1600": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1602": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1603": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "op": "SUB"
    },
    "1612": {
      "op": "DUP9"
    },
    "1613": {
      "op": "AND"
    },
    "1614": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1616": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1617": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "ADD",
      "path": "6"
    },
    "1618": {
      "op": "MSTORE"
    },
    "1619": {
      "op": "SWAP1"
    },
    "1620": {
      "op": "DUP2"
    },
    "1621": {
      "op": "ADD"
    },
    "1622": {
      "op": "DUP7"
    },
    "1623": {
      "op": "SWAP1"
    },
    "1624": {
      "op": "MSTORE"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1627": {
      "op": "DUP2"
    },
    "1628": {
      "op": "ADD"
    },
    "1629": {
      "op": "DUP6"
    },
    "1630": {
      "op": "SWAP1"
    },
    "1631": {
      "op": "MSTORE"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1634": {
      "op": "DUP2"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "DUP5"
    },
    "1637": {
      "op": "SWAP1"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1641": {
      "op": "DUP2"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "op": "DUP4"
    },
    "1644": {
      "op": "SWAP1"
    },
    "1645": {
      "op": "MSTORE"
    },
    "1646": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2031,
        2043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1648": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2031,
        2043
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1651": {
      "op": "ADD"
    },
    "1652": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1654": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1655": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1658": {
      "op": "NOT"
    },
    "1659": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1660": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1661": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "SUB",
      "path": "6"
    },
    "1662": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "ADD",
      "path": "6"
    },
    "1663": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1664": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1665": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1666": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1667": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1668": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2046,
        2131
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1669": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2046,
        2131
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1670": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2056,
        2130
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1672": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2046,
        2131
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1673": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2046,
        2131
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1674": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2046,
        2131
      ],
      "op": "ADD",
      "path": "6"
    },
    "1675": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2046,
        2131
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1676": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2163
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1678": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2190
      ],
      "op": "DUP13",
      "path": "6"
    },
    "1679": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2190
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1680": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2190
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1681": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2177
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1683": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2190
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1684": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2190
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1685": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2190
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1686": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2190
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1687": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2190
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1688": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2190
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1689": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2166,
        2190
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1690": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "1692": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1693": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "ADD",
      "path": "6"
    },
    "1694": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1695": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1696": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1697": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1698": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1699": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1700": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1701": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1703": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1704": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "ADD",
      "path": "6"
    },
    "1705": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1706": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1707": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1708": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "ADD",
      "path": "6"
    },
    "1709": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1710": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1711": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1712": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1713": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1714": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1715": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "ADD",
      "path": "6"
    },
    "1716": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1723": {
      "op": "SHL"
    },
    "1724": {
      "op": "SUB"
    },
    "1725": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "AND",
      "path": "6"
    },
    "1726": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1727": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1728": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "ADD",
      "path": "6"
    },
    "1729": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1730": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1732": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "ADD",
      "path": "6"
    },
    "1733": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1734": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1736": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1737": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "ADD",
      "path": "6"
    },
    "1738": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2141,
        2190
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1739": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 14
    },
    "1740": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1741": {
      "op": "PUSH4",
      "value": "0x2769CD1F"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1750": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1751": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2046,
        2131
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1752": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2046,
        2131
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1753": {
      "op": "POP"
    },
    "1754": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2233
      ],
      "op": "PUSH20",
      "path": "6",
      "value": "0x0"
    },
    "1775": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2233
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1776": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2233
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9DA7347C"
    },
    "1781": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2233
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1782": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x705"
    },
    "1785": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1786": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2046,
        2131
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1787": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2046,
        2131
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1788": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2240,
        2245
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1789": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2240,
        2245
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1790": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1792": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "ADD",
      "path": "6"
    },
    "1793": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC44"
    },
    "1796": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        2208,
        2246
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1797": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1798": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1800": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1802": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1803": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1804": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1805": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "SUB",
      "path": "6"
    },
    "1806": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1807": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1808": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1809": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1810": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1811": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1812": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1813": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x71D"
    },
    "1816": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1817": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1819": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1820": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1821": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1822": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "POP",
      "path": "6"
    },
    "1823": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "GAS",
      "path": "6"
    },
    "1824": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DELEGATECALL",
      "path": "6"
    },
    "1825": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1826": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1827": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1828": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x731"
    },
    "1831": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1832": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1833": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1835": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1836": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1837": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1838": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1840": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1841": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1842": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "POP",
      "path": "6"
    },
    "1843": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "POP",
      "path": "6"
    },
    "1844": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "POP",
      "path": "6"
    },
    "1845": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "POP",
      "path": "6"
    },
    "1846": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1848": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1849": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1850": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1852": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "NOT",
      "path": "6"
    },
    "1853": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1855": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1856": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "ADD",
      "path": "6"
    },
    "1857": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "AND",
      "path": "6"
    },
    "1858": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1859": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "ADD",
      "path": "6"
    },
    "1860": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1861": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1863": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1864": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "POP",
      "path": "6"
    },
    "1865": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1866": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "ADD",
      "path": "6"
    },
    "1867": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1868": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x755"
    },
    "1871": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1872": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1873": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC00"
    },
    "1876": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        2208,
        2246
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1877": {
      "branch": 25,
      "fn": "MerkleVesting.initialize",
      "offset": [
        2208,
        2246
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1878": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7A1"
    },
    "1881": {
      "branch": 25,
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1882": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1884": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1885": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1891": {
      "op": "SHL"
    },
    "1892": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1893": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1896": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1898": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1899": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "ADD",
      "path": "6"
    },
    "1900": {
      "op": "DUP2"
    },
    "1901": {
      "op": "SWAP1"
    },
    "1902": {
      "op": "MSTORE"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1905": {
      "op": "DUP3"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "op": "PUSH32",
      "value": "0x5468652070726F6F6620636F756C64206E6F742062652076657269666965642E"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1943": {
      "op": "DUP3"
    },
    "1944": {
      "op": "ADD"
    },
    "1945": {
      "op": "MSTORE"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1948": {
      "op": "ADD"
    },
    "1949": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AB"
    },
    "1952": {
      "op": "JUMP"
    },
    "1953": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2200,
        2283
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1960": {
      "op": "SHL"
    },
    "1961": {
      "op": "SUB"
    },
    "1962": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "DUP9",
      "path": "6",
      "statement": 15
    },
    "1963": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "AND",
      "path": "6"
    },
    "1964": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1966": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1967": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1968": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1969": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2333,
        2337
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1971": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1973": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1974": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1975": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1976": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1978": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1979": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1980": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2317
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1981": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2330
      ],
      "op": "DUP14",
      "path": "6"
    },
    "1982": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2330
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1983": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2330
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1984": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2330
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1985": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2330
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1986": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2330
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1987": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2330
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1988": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2330
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1989": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2337
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1990": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2337
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1993": {
      "op": "NOT"
    },
    "1994": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2337
      ],
      "op": "AND",
      "path": "6"
    },
    "1995": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2337
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1996": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2337
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1997": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2337
      ],
      "op": "OR",
      "path": "6"
    },
    "1998": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2337
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1999": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2293,
        2337
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2000": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2383,
        2402
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7D9"
    },
    "2003": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2393,
        2402
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2004": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2383,
        2390
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2005": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2383,
        2402
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCA"
    },
    "2008": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        2383,
        2402
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2009": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2383,
        2402
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2010": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2369,
        2403
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E3"
    },
    "2013": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2369,
        2403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2014": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2369,
        2379
      ],
      "op": "DUP10",
      "path": "6"
    },
    "2015": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2369,
        2403
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC99"
    },
    "2018": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        2369,
        2403
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2019": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2369,
        2403
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2020": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2347,
        2403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2021": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2347,
        2403
      ],
      "op": "POP",
      "path": "6"
    },
    "2022": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 16,
      "value": "0x40"
    },
    "2024": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2025": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2026": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2028": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2029": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2031": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2032": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2033": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2471,
        2481
      ],
      "op": "DUP10",
      "path": "6"
    },
    "2034": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2035": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2036": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2038": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2039": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2495,
        2505
      ],
      "op": "DUP10",
      "path": "6"
    },
    "2040": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2041": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2042": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2044": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2045": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2519,
        2528
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2046": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2047": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2048": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2050": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2051": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2542,
        2549
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2052": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2053": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2054": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2056": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2057": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2563,
        2577
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2058": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2059": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2060": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2062": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2063": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2591,
        2600
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2064": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2065": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2066": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2068": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2069": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2614,
        2631
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2070": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2071": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2072": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2450,
        2641
      ],
      "op": "POP",
      "path": "6"
    },
    "2073": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2421
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2075": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2077": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2422,
        2433
      ],
      "op": "DUP12",
      "path": "6"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2084": {
      "op": "SHL"
    },
    "2085": {
      "op": "SUB"
    },
    "2086": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "AND",
      "path": "6"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2093": {
      "op": "SHL"
    },
    "2094": {
      "op": "SUB"
    },
    "2095": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "AND",
      "path": "6"
    },
    "2096": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2097": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2098": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2100": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "ADD",
      "path": "6"
    },
    "2101": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2102": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2103": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2104": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2106": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "ADD",
      "path": "6"
    },
    "2107": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2109": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2434
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2110": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2112": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2435,
        2446
      ],
      "op": "DUP13",
      "path": "6"
    },
    "2113": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2114": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2115": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2117": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "ADD",
      "path": "6"
    },
    "2118": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2119": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2120": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2121": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2123": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "ADD",
      "path": "6"
    },
    "2124": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2126": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2447
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2127": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2129": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2130": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2131": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2132": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2133": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2135": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2136": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2137": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2139": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2140": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2141": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2142": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2143": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2145": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2146": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2147": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2149": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2150": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2151": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2152": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2153": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2155": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2156": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2157": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2159": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2160": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2161": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2162": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2163": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2165": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2166": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2167": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2169": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2170": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2171": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2172": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2173": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2175": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2176": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2177": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "2179": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2180": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2181": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2182": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2183": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "2185": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2186": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2187": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC0"
    },
    "2189": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2190": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2191": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2192": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2193": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "2195": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "ADD",
      "path": "6"
    },
    "2196": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2197": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2198": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "POP",
      "path": "6"
    },
    "2199": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2413,
        2641
      ],
      "op": "POP",
      "path": "6"
    },
    "2200": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2675,
        2690
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "2201": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2655,
        2672
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2202": {
      "branch": 26,
      "fn": "MerkleVesting.initialize",
      "offset": [
        2655,
        2690
      ],
      "op": "LT",
      "path": "6"
    },
    "2203": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2651,
        2751
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2204": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2651,
        2751
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8A9"
    },
    "2207": {
      "branch": 26,
      "fn": "MerkleVesting.initialize",
      "offset": [
        2651,
        2751
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2208": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2706,
        2740
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 17,
      "value": "0x8A9"
    },
    "2211": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2715,
        2726
      ],
      "op": "DUP11",
      "path": "6"
    },
    "2212": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2728,
        2739
      ],
      "op": "DUP11",
      "path": "6"
    },
    "2213": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2706,
        2714
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22C"
    },
    "2216": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        2706,
        2740
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2217": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2706,
        2740
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2218": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1941,
        2757
      ],
      "op": "POP",
      "path": "6"
    },
    "2219": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1941,
        2757
      ],
      "op": "POP",
      "path": "6"
    },
    "2220": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1941,
        2757
      ],
      "op": "POP",
      "path": "6"
    },
    "2221": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "POP",
      "path": "6"
    },
    "2222": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "POP",
      "path": "6"
    },
    "2223": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "POP",
      "path": "6"
    },
    "2224": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "POP",
      "path": "6"
    },
    "2225": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "POP",
      "path": "6"
    },
    "2226": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "POP",
      "path": "6"
    },
    "2227": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1778,
        2757
      ],
      "op": "POP",
      "path": "6"
    },
    "2228": {
      "fn": "MerkleVesting.initialize",
      "jump": "o",
      "offset": [
        1778,
        2757
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2229": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1483,
        1772
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2230": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1549,
        1578
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2232": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2233": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2234": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2235": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2237": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2239": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2240": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2241": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2242": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2244": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2245": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2246": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2247": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2248": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1626,
        1649
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 18
    },
    "2249": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1626,
        1649
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2250": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1626,
        1649
      ],
      "op": "ADD",
      "path": "6"
    },
    "2251": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1626,
        1649
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2252": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2253": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2254": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2261": {
      "op": "SHL"
    },
    "2262": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2263": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2264": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1664,
        1674
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2265": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2267": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2268": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "ADD",
      "path": "6"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1684,
        1688
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2273": {
      "op": "DUP3"
    },
    "2274": {
      "op": "ADD"
    },
    "2275": {
      "op": "MSTORE"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2278": {
      "op": "DUP2"
    },
    "2279": {
      "op": "ADD"
    },
    "2280": {
      "op": "DUP5"
    },
    "2281": {
      "op": "SWAP1"
    },
    "2282": {
      "op": "MSTORE"
    },
    "2283": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2284": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1581,
        1601
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2291": {
      "op": "SHL"
    },
    "2292": {
      "op": "SUB"
    },
    "2293": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1626,
        1649
      ],
      "op": "AND",
      "path": "6"
    },
    "2294": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1626,
        1649
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2295": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1663
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "2300": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1663
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2303": {
      "op": "ADD"
    },
    "2304": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2306": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2308": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2309": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2310": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2311": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "SUB",
      "path": "6"
    },
    "2312": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2313": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2315": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2316": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2317": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2318": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2319": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2320": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2321": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x919"
    },
    "2324": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2325": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2327": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2328": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2329": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2330": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "POP",
      "path": "6"
    },
    "2331": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "GAS",
      "path": "6"
    },
    "2332": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "CALL",
      "path": "6"
    },
    "2333": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2334": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2335": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2336": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x92D"
    },
    "2339": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2340": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2341": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2343": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2344": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2345": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2346": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2348": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2349": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2350": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "POP",
      "path": "6"
    },
    "2351": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "POP",
      "path": "6"
    },
    "2352": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "POP",
      "path": "6"
    },
    "2353": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "POP",
      "path": "6"
    },
    "2354": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2356": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2357": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2358": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2360": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "NOT",
      "path": "6"
    },
    "2361": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2363": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2364": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "ADD",
      "path": "6"
    },
    "2365": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "AND",
      "path": "6"
    },
    "2366": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2367": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "ADD",
      "path": "6"
    },
    "2368": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2369": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2371": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2372": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "POP",
      "path": "6"
    },
    "2373": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2374": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "ADD",
      "path": "6"
    },
    "2375": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2376": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x951"
    },
    "2379": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2380": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2381": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC00"
    },
    "2384": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        1619,
        1697
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2385": {
      "branch": 27,
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1619,
        1697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2386": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x995"
    },
    "2389": {
      "branch": 27,
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2390": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2392": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2393": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2401": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2404": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2406": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2407": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "ADD",
      "path": "6"
    },
    "2408": {
      "op": "MSTORE"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2413": {
      "op": "DUP3"
    },
    "2414": {
      "op": "ADD"
    },
    "2415": {
      "op": "MSTORE"
    },
    "2416": {
      "op": "PUSH21",
      "value": "0x115490CC8C081D1C985B9CD9995C8819985A5B1959"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "2440": {
      "op": "SHL"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "MSTORE"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AB"
    },
    "2452": {
      "op": "JUMP"
    },
    "2453": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1611,
        1723
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2454": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1760,
        1765
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 19
    },
    "2455": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1743
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2456": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1756
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2458": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1756
      ],
      "op": "ADD",
      "path": "6"
    },
    "2459": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1756
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2461": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2462": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2463": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2464": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A9"
    },
    "2467": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2468": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2469": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCBB"
    },
    "2472": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        1733,
        1765
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2473": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2474": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2475": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2476": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        1733,
        1765
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "op": "POP"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "op": "POP"
    },
    "2482": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "o",
      "offset": [
        1483,
        1772
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2483": {
      "op": "JUMPDEST"
    },
    "2484": {
      "op": "DUP1"
    },
    "2485": {
      "op": "CALLDATALOAD"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2492": {
      "op": "SHL"
    },
    "2493": {
      "op": "SUB"
    },
    "2494": {
      "op": "DUP2"
    },
    "2495": {
      "op": "AND"
    },
    "2496": {
      "op": "DUP2"
    },
    "2497": {
      "op": "EQ"
    },
    "2498": {
      "op": "PUSH2",
      "value": "0x9CA"
    },
    "2501": {
      "op": "JUMPI"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2504": {
      "op": "DUP1"
    },
    "2505": {
      "op": "REVERT"
    },
    "2506": {
      "op": "JUMPDEST"
    },
    "2507": {
      "op": "SWAP2"
    },
    "2508": {
      "op": "SWAP1"
    },
    "2509": {
      "op": "POP"
    },
    "2510": {
      "jump": "o",
      "op": "JUMP"
    },
    "2511": {
      "op": "JUMPDEST"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2514": {
      "op": "DUP1"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2517": {
      "op": "DUP4"
    },
    "2518": {
      "op": "DUP6"
    },
    "2519": {
      "op": "SUB"
    },
    "2520": {
      "op": "SLT"
    },
    "2521": {
      "op": "ISZERO"
    },
    "2522": {
      "op": "PUSH2",
      "value": "0x9E2"
    },
    "2525": {
      "op": "JUMPI"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2528": {
      "op": "DUP1"
    },
    "2529": {
      "op": "REVERT"
    },
    "2530": {
      "op": "JUMPDEST"
    },
    "2531": {
      "op": "DUP3"
    },
    "2532": {
      "op": "CALLDATALOAD"
    },
    "2533": {
      "op": "SWAP2"
    },
    "2534": {
      "op": "POP"
    },
    "2535": {
      "op": "PUSH2",
      "value": "0x9F2"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2540": {
      "op": "DUP5"
    },
    "2541": {
      "op": "ADD"
    },
    "2542": {
      "op": "PUSH2",
      "value": "0x9B3"
    },
    "2545": {
      "jump": "i",
      "op": "JUMP"
    },
    "2546": {
      "op": "JUMPDEST"
    },
    "2547": {
      "op": "SWAP1"
    },
    "2548": {
      "op": "POP"
    },
    "2549": {
      "op": "SWAP3"
    },
    "2550": {
      "op": "POP"
    },
    "2551": {
      "op": "SWAP3"
    },
    "2552": {
      "op": "SWAP1"
    },
    "2553": {
      "op": "POP"
    },
    "2554": {
      "jump": "o",
      "op": "JUMP"
    },
    "2555": {
      "op": "JUMPDEST"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2560": {
      "op": "DUP3"
    },
    "2561": {
      "op": "DUP5"
    },
    "2562": {
      "op": "SUB"
    },
    "2563": {
      "op": "SLT"
    },
    "2564": {
      "op": "ISZERO"
    },
    "2565": {
      "op": "PUSH2",
      "value": "0xA0D"
    },
    "2568": {
      "op": "JUMPI"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2571": {
      "op": "DUP1"
    },
    "2572": {
      "op": "REVERT"
    },
    "2573": {
      "op": "JUMPDEST"
    },
    "2574": {
      "op": "POP"
    },
    "2575": {
      "op": "CALLDATALOAD"
    },
    "2576": {
      "op": "SWAP2"
    },
    "2577": {
      "op": "SWAP1"
    },
    "2578": {
      "op": "POP"
    },
    "2579": {
      "jump": "o",
      "op": "JUMP"
    },
    "2580": {
      "op": "JUMPDEST"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2583": {
      "op": "DUP1"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2586": {
      "op": "DUP4"
    },
    "2587": {
      "op": "DUP6"
    },
    "2588": {
      "op": "SUB"
    },
    "2589": {
      "op": "SLT"
    },
    "2590": {
      "op": "ISZERO"
    },
    "2591": {
      "op": "PUSH2",
      "value": "0xA27"
    },
    "2594": {
      "op": "JUMPI"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2597": {
      "op": "DUP1"
    },
    "2598": {
      "op": "REVERT"
    },
    "2599": {
      "op": "JUMPDEST"
    },
    "2600": {
      "op": "PUSH2",
      "value": "0xA30"
    },
    "2603": {
      "op": "DUP4"
    },
    "2604": {
      "op": "PUSH2",
      "value": "0x9B3"
    },
    "2607": {
      "jump": "i",
      "op": "JUMP"
    },
    "2608": {
      "op": "JUMPDEST"
    },
    "2609": {
      "op": "SWAP5"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2612": {
      "op": "SWAP4"
    },
    "2613": {
      "op": "SWAP1"
    },
    "2614": {
      "op": "SWAP4"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "op": "CALLDATALOAD"
    },
    "2617": {
      "op": "SWAP4"
    },
    "2618": {
      "op": "POP"
    },
    "2619": {
      "op": "POP"
    },
    "2620": {
      "op": "POP"
    },
    "2621": {
      "jump": "o",
      "op": "JUMP"
    },
    "2622": {
      "op": "JUMPDEST"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2625": {
      "op": "DUP1"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2628": {
      "op": "DUP1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2631": {
      "op": "DUP6"
    },
    "2632": {
      "op": "DUP8"
    },
    "2633": {
      "op": "SUB"
    },
    "2634": {
      "op": "SLT"
    },
    "2635": {
      "op": "ISZERO"
    },
    "2636": {
      "op": "PUSH2",
      "value": "0xA54"
    },
    "2639": {
      "op": "JUMPI"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2642": {
      "op": "DUP1"
    },
    "2643": {
      "op": "REVERT"
    },
    "2644": {
      "op": "JUMPDEST"
    },
    "2645": {
      "op": "DUP5"
    },
    "2646": {
      "op": "CALLDATALOAD"
    },
    "2647": {
      "op": "SWAP4"
    },
    "2648": {
      "op": "POP"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2651": {
      "op": "DUP6"
    },
    "2652": {
      "op": "ADD"
    },
    "2653": {
      "op": "CALLDATALOAD"
    },
    "2654": {
      "op": "SWAP3"
    },
    "2655": {
      "op": "POP"
    },
    "2656": {
      "op": "PUSH2",
      "value": "0xA6B"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2661": {
      "op": "DUP7"
    },
    "2662": {
      "op": "ADD"
    },
    "2663": {
      "op": "PUSH2",
      "value": "0x9B3"
    },
    "2666": {
      "jump": "i",
      "op": "JUMP"
    },
    "2667": {
      "op": "JUMPDEST"
    },
    "2668": {
      "op": "SWAP4"
    },
    "2669": {
      "op": "SWAP7"
    },
    "2670": {
      "op": "SWAP3"
    },
    "2671": {
      "op": "SWAP6"
    },
    "2672": {
      "op": "POP"
    },
    "2673": {
      "op": "SWAP3"
    },
    "2674": {
      "op": "SWAP4"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2677": {
      "op": "ADD"
    },
    "2678": {
      "op": "CALLDATALOAD"
    },
    "2679": {
      "op": "SWAP3"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "jump": "o",
      "op": "JUMP"
    },
    "2683": {
      "op": "JUMPDEST"
    },
    "2684": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2691": {
      "op": "SHL"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2694": {
      "op": "MSTORE"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2699": {
      "op": "MSTORE"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2704": {
      "op": "REVERT"
    },
    "2705": {
      "op": "JUMPDEST"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2708": {
      "op": "DUP1"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2711": {
      "op": "DUP1"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2714": {
      "op": "DUP1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2719": {
      "op": "DUP9"
    },
    "2720": {
      "op": "DUP11"
    },
    "2721": {
      "op": "SUB"
    },
    "2722": {
      "op": "SLT"
    },
    "2723": {
      "op": "ISZERO"
    },
    "2724": {
      "op": "PUSH2",
      "value": "0xAAC"
    },
    "2727": {
      "op": "JUMPI"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2730": {
      "op": "DUP1"
    },
    "2731": {
      "op": "REVERT"
    },
    "2732": {
      "op": "JUMPDEST"
    },
    "2733": {
      "op": "DUP8"
    },
    "2734": {
      "op": "CALLDATALOAD"
    },
    "2735": {
      "op": "SWAP7"
    },
    "2736": {
      "op": "POP"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2739": {
      "op": "PUSH2",
      "value": "0xABD"
    },
    "2742": {
      "op": "DUP2"
    },
    "2743": {
      "op": "DUP11"
    },
    "2744": {
      "op": "ADD"
    },
    "2745": {
      "op": "PUSH2",
      "value": "0x9B3"
    },
    "2748": {
      "jump": "i",
      "op": "JUMP"
    },
    "2749": {
      "op": "JUMPDEST"
    },
    "2750": {
      "op": "SWAP7"
    },
    "2751": {
      "op": "POP"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2754": {
      "op": "DUP10"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "CALLDATALOAD"
    },
    "2757": {
      "op": "SWAP6"
    },
    "2758": {
      "op": "POP"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2761": {
      "op": "DUP10"
    },
    "2762": {
      "op": "ADD"
    },
    "2763": {
      "op": "CALLDATALOAD"
    },
    "2764": {
      "op": "SWAP5"
    },
    "2765": {
      "op": "POP"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2768": {
      "op": "DUP10"
    },
    "2769": {
      "op": "ADD"
    },
    "2770": {
      "op": "CALLDATALOAD"
    },
    "2771": {
      "op": "SWAP4"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2775": {
      "op": "DUP10"
    },
    "2776": {
      "op": "ADD"
    },
    "2777": {
      "op": "CALLDATALOAD"
    },
    "2778": {
      "op": "SWAP3"
    },
    "2779": {
      "op": "POP"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2782": {
      "op": "DUP10"
    },
    "2783": {
      "op": "ADD"
    },
    "2784": {
      "op": "CALLDATALOAD"
    },
    "2785": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2794": {
      "op": "DUP1"
    },
    "2795": {
      "op": "DUP3"
    },
    "2796": {
      "op": "GT"
    },
    "2797": {
      "op": "ISZERO"
    },
    "2798": {
      "op": "PUSH2",
      "value": "0xAF6"
    },
    "2801": {
      "op": "JUMPI"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2804": {
      "op": "DUP1"
    },
    "2805": {
      "op": "REVERT"
    },
    "2806": {
      "op": "JUMPDEST"
    },
    "2807": {
      "op": "DUP2"
    },
    "2808": {
      "op": "DUP12"
    },
    "2809": {
      "op": "ADD"
    },
    "2810": {
      "op": "SWAP2"
    },
    "2811": {
      "op": "POP"
    },
    "2812": {
      "op": "DUP12"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2815": {
      "op": "DUP4"
    },
    "2816": {
      "op": "ADD"
    },
    "2817": {
      "op": "SLT"
    },
    "2818": {
      "op": "PUSH2",
      "value": "0xB0A"
    },
    "2821": {
      "op": "JUMPI"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2824": {
      "op": "DUP1"
    },
    "2825": {
      "op": "REVERT"
    },
    "2826": {
      "op": "JUMPDEST"
    },
    "2827": {
      "op": "DUP2"
    },
    "2828": {
      "op": "CALLDATALOAD"
    },
    "2829": {
      "op": "DUP2"
    },
    "2830": {
      "op": "DUP2"
    },
    "2831": {
      "op": "GT"
    },
    "2832": {
      "op": "ISZERO"
    },
    "2833": {
      "op": "PUSH2",
      "value": "0xB1C"
    },
    "2836": {
      "op": "JUMPI"
    },
    "2837": {
      "op": "PUSH2",
      "value": "0xB1C"
    },
    "2840": {
      "op": "PUSH2",
      "value": "0xA7B"
    },
    "2843": {
      "jump": "i",
      "op": "JUMP"
    },
    "2844": {
      "op": "JUMPDEST"
    },
    "2845": {
      "op": "DUP1"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2848": {
      "op": "SHL"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2851": {
      "op": "MLOAD"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2854": {
      "op": "NOT"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2857": {
      "op": "DUP4"
    },
    "2858": {
      "op": "ADD"
    },
    "2859": {
      "op": "AND"
    },
    "2860": {
      "op": "DUP2"
    },
    "2861": {
      "op": "ADD"
    },
    "2862": {
      "op": "DUP2"
    },
    "2863": {
      "op": "DUP2"
    },
    "2864": {
      "op": "LT"
    },
    "2865": {
      "op": "DUP6"
    },
    "2866": {
      "op": "DUP3"
    },
    "2867": {
      "op": "GT"
    },
    "2868": {
      "op": "OR"
    },
    "2869": {
      "op": "ISZERO"
    },
    "2870": {
      "op": "PUSH2",
      "value": "0xB41"
    },
    "2873": {
      "op": "JUMPI"
    },
    "2874": {
      "op": "PUSH2",
      "value": "0xB41"
    },
    "2877": {
      "op": "PUSH2",
      "value": "0xA7B"
    },
    "2880": {
      "jump": "i",
      "op": "JUMP"
    },
    "2881": {
      "op": "JUMPDEST"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2884": {
      "op": "MSTORE"
    },
    "2885": {
      "op": "SWAP2"
    },
    "2886": {
      "op": "DUP3"
    },
    "2887": {
      "op": "MSTORE"
    },
    "2888": {
      "op": "DUP5"
    },
    "2889": {
      "op": "DUP3"
    },
    "2890": {
      "op": "ADD"
    },
    "2891": {
      "op": "SWAP3"
    },
    "2892": {
      "op": "POP"
    },
    "2893": {
      "op": "DUP4"
    },
    "2894": {
      "op": "DUP2"
    },
    "2895": {
      "op": "ADD"
    },
    "2896": {
      "op": "DUP6"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "SWAP2"
    },
    "2899": {
      "op": "DUP15"
    },
    "2900": {
      "op": "DUP4"
    },
    "2901": {
      "op": "GT"
    },
    "2902": {
      "op": "ISZERO"
    },
    "2903": {
      "op": "PUSH2",
      "value": "0xB5F"
    },
    "2906": {
      "op": "JUMPI"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2909": {
      "op": "DUP1"
    },
    "2910": {
      "op": "REVERT"
    },
    "2911": {
      "op": "JUMPDEST"
    },
    "2912": {
      "op": "SWAP4"
    },
    "2913": {
      "op": "DUP6"
    },
    "2914": {
      "op": "ADD"
    },
    "2915": {
      "op": "SWAP4"
    },
    "2916": {
      "op": "JUMPDEST"
    },
    "2917": {
      "op": "DUP3"
    },
    "2918": {
      "op": "DUP6"
    },
    "2919": {
      "op": "LT"
    },
    "2920": {
      "op": "ISZERO"
    },
    "2921": {
      "op": "PUSH2",
      "value": "0xB7D"
    },
    "2924": {
      "op": "JUMPI"
    },
    "2925": {
      "op": "DUP5"
    },
    "2926": {
      "op": "CALLDATALOAD"
    },
    "2927": {
      "op": "DUP5"
    },
    "2928": {
      "op": "MSTORE"
    },
    "2929": {
      "op": "SWAP4"
    },
    "2930": {
      "op": "DUP6"
    },
    "2931": {
      "op": "ADD"
    },
    "2932": {
      "op": "SWAP4"
    },
    "2933": {
      "op": "SWAP3"
    },
    "2934": {
      "op": "DUP6"
    },
    "2935": {
      "op": "ADD"
    },
    "2936": {
      "op": "SWAP3"
    },
    "2937": {
      "op": "PUSH2",
      "value": "0xB64"
    },
    "2940": {
      "op": "JUMP"
    },
    "2941": {
      "op": "JUMPDEST"
    },
    "2942": {
      "op": "DUP1"
    },
    "2943": {
      "op": "SWAP7"
    },
    "2944": {
      "op": "POP"
    },
    "2945": {
      "op": "POP"
    },
    "2946": {
      "op": "POP"
    },
    "2947": {
      "op": "POP"
    },
    "2948": {
      "op": "POP"
    },
    "2949": {
      "op": "POP"
    },
    "2950": {
      "op": "POP"
    },
    "2951": {
      "op": "SWAP3"
    },
    "2952": {
      "op": "SWAP6"
    },
    "2953": {
      "op": "SWAP9"
    },
    "2954": {
      "op": "SWAP2"
    },
    "2955": {
      "op": "SWAP5"
    },
    "2956": {
      "op": "SWAP8"
    },
    "2957": {
      "op": "POP"
    },
    "2958": {
      "op": "SWAP3"
    },
    "2959": {
      "op": "SWAP6"
    },
    "2960": {
      "op": "POP"
    },
    "2961": {
      "jump": "o",
      "op": "JUMP"
    },
    "2962": {
      "op": "JUMPDEST"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2965": {
      "op": "DUP1"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2968": {
      "op": "DUP4"
    },
    "2969": {
      "op": "DUP6"
    },
    "2970": {
      "op": "SUB"
    },
    "2971": {
      "op": "SLT"
    },
    "2972": {
      "op": "ISZERO"
    },
    "2973": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "2976": {
      "op": "JUMPI"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2979": {
      "op": "DUP1"
    },
    "2980": {
      "op": "REVERT"
    },
    "2981": {
      "op": "JUMPDEST"
    },
    "2982": {
      "op": "POP"
    },
    "2983": {
      "op": "POP"
    },
    "2984": {
      "op": "DUP1"
    },
    "2985": {
      "op": "CALLDATALOAD"
    },
    "2986": {
      "op": "SWAP3"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2989": {
      "op": "SWAP1"
    },
    "2990": {
      "op": "SWAP2"
    },
    "2991": {
      "op": "ADD"
    },
    "2992": {
      "op": "CALLDATALOAD"
    },
    "2993": {
      "op": "SWAP2"
    },
    "2994": {
      "op": "POP"
    },
    "2995": {
      "jump": "o",
      "op": "JUMP"
    },
    "2996": {
      "op": "JUMPDEST"
    },
    "2997": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3004": {
      "op": "SHL"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3007": {
      "op": "MSTORE"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3012": {
      "op": "MSTORE"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3017": {
      "op": "REVERT"
    },
    "3018": {
      "op": "JUMPDEST"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3021": {
      "op": "DUP3"
    },
    "3022": {
      "op": "DUP3"
    },
    "3023": {
      "op": "LT"
    },
    "3024": {
      "op": "ISZERO"
    },
    "3025": {
      "op": "PUSH2",
      "value": "0xBDC"
    },
    "3028": {
      "op": "JUMPI"
    },
    "3029": {
      "op": "PUSH2",
      "value": "0xBDC"
    },
    "3032": {
      "op": "PUSH2",
      "value": "0xBB4"
    },
    "3035": {
      "jump": "i",
      "op": "JUMP"
    },
    "3036": {
      "op": "JUMPDEST"
    },
    "3037": {
      "op": "POP"
    },
    "3038": {
      "op": "SUB"
    },
    "3039": {
      "op": "SWAP1"
    },
    "3040": {
      "jump": "o",
      "op": "JUMP"
    },
    "3041": {
      "op": "JUMPDEST"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3044": {
      "op": "DUP2"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3047": {
      "op": "NOT"
    },
    "3048": {
      "op": "DIV"
    },
    "3049": {
      "op": "DUP4"
    },
    "3050": {
      "op": "GT"
    },
    "3051": {
      "op": "DUP3"
    },
    "3052": {
      "op": "ISZERO"
    },
    "3053": {
      "op": "ISZERO"
    },
    "3054": {
      "op": "AND"
    },
    "3055": {
      "op": "ISZERO"
    },
    "3056": {
      "op": "PUSH2",
      "value": "0xBFB"
    },
    "3059": {
      "op": "JUMPI"
    },
    "3060": {
      "op": "PUSH2",
      "value": "0xBFB"
    },
    "3063": {
      "op": "PUSH2",
      "value": "0xBB4"
    },
    "3066": {
      "jump": "i",
      "op": "JUMP"
    },
    "3067": {
      "op": "JUMPDEST"
    },
    "3068": {
      "op": "POP"
    },
    "3069": {
      "op": "MUL"
    },
    "3070": {
      "op": "SWAP1"
    },
    "3071": {
      "jump": "o",
      "op": "JUMP"
    },
    "3072": {
      "op": "JUMPDEST"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3077": {
      "op": "DUP3"
    },
    "3078": {
      "op": "DUP5"
    },
    "3079": {
      "op": "SUB"
    },
    "3080": {
      "op": "SLT"
    },
    "3081": {
      "op": "ISZERO"
    },
    "3082": {
      "op": "PUSH2",
      "value": "0xC12"
    },
    "3085": {
      "op": "JUMPI"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3088": {
      "op": "DUP1"
    },
    "3089": {
      "op": "REVERT"
    },
    "3090": {
      "op": "JUMPDEST"
    },
    "3091": {
      "op": "DUP2"
    },
    "3092": {
      "op": "MLOAD"
    },
    "3093": {
      "op": "DUP1"
    },
    "3094": {
      "op": "ISZERO"
    },
    "3095": {
      "op": "ISZERO"
    },
    "3096": {
      "op": "DUP2"
    },
    "3097": {
      "op": "EQ"
    },
    "3098": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "3101": {
      "op": "JUMPI"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3104": {
      "op": "DUP1"
    },
    "3105": {
      "op": "REVERT"
    },
    "3106": {
      "op": "JUMPDEST"
    },
    "3107": {
      "op": "SWAP4"
    },
    "3108": {
      "op": "SWAP3"
    },
    "3109": {
      "op": "POP"
    },
    "3110": {
      "op": "POP"
    },
    "3111": {
      "op": "POP"
    },
    "3112": {
      "jump": "o",
      "op": "JUMP"
    },
    "3113": {
      "op": "JUMPDEST"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3118": {
      "op": "NOT"
    },
    "3119": {
      "op": "DUP3"
    },
    "3120": {
      "op": "EQ"
    },
    "3121": {
      "op": "ISZERO"
    },
    "3122": {
      "op": "PUSH2",
      "value": "0xC3D"
    },
    "3125": {
      "op": "JUMPI"
    },
    "3126": {
      "op": "PUSH2",
      "value": "0xC3D"
    },
    "3129": {
      "op": "PUSH2",
      "value": "0xBB4"
    },
    "3132": {
      "jump": "i",
      "op": "JUMP"
    },
    "3133": {
      "op": "JUMPDEST"
    },
    "3134": {
      "op": "POP"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3137": {
      "op": "ADD"
    },
    "3138": {
      "op": "SWAP1"
    },
    "3139": {
      "jump": "o",
      "op": "JUMP"
    },
    "3140": {
      "op": "JUMPDEST"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3145": {
      "op": "DUP3"
    },
    "3146": {
      "op": "ADD"
    },
    "3147": {
      "op": "DUP6"
    },
    "3148": {
      "op": "DUP4"
    },
    "3149": {
      "op": "MSTORE"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3152": {
      "op": "DUP6"
    },
    "3153": {
      "op": "DUP2"
    },
    "3154": {
      "op": "DUP6"
    },
    "3155": {
      "op": "ADD"
    },
    "3156": {
      "op": "MSTORE"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3161": {
      "op": "DUP6"
    },
    "3162": {
      "op": "ADD"
    },
    "3163": {
      "op": "MSTORE"
    },
    "3164": {
      "op": "DUP2"
    },
    "3165": {
      "op": "DUP6"
    },
    "3166": {
      "op": "MLOAD"
    },
    "3167": {
      "op": "DUP1"
    },
    "3168": {
      "op": "DUP5"
    },
    "3169": {
      "op": "MSTORE"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3172": {
      "op": "DUP7"
    },
    "3173": {
      "op": "ADD"
    },
    "3174": {
      "op": "SWAP2"
    },
    "3175": {
      "op": "POP"
    },
    "3176": {
      "op": "DUP3"
    },
    "3177": {
      "op": "DUP8"
    },
    "3178": {
      "op": "ADD"
    },
    "3179": {
      "op": "SWAP4"
    },
    "3180": {
      "op": "POP"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3183": {
      "op": "JUMPDEST"
    },
    "3184": {
      "op": "DUP2"
    },
    "3185": {
      "op": "DUP2"
    },
    "3186": {
      "op": "LT"
    },
    "3187": {
      "op": "ISZERO"
    },
    "3188": {
      "op": "PUSH2",
      "value": "0xC8B"
    },
    "3191": {
      "op": "JUMPI"
    },
    "3192": {
      "op": "DUP5"
    },
    "3193": {
      "op": "MLOAD"
    },
    "3194": {
      "op": "DUP4"
    },
    "3195": {
      "op": "MSTORE"
    },
    "3196": {
      "op": "SWAP4"
    },
    "3197": {
      "op": "DUP4"
    },
    "3198": {
      "op": "ADD"
    },
    "3199": {
      "op": "SWAP4"
    },
    "3200": {
      "op": "SWAP2"
    },
    "3201": {
      "op": "DUP4"
    },
    "3202": {
      "op": "ADD"
    },
    "3203": {
      "op": "SWAP2"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3206": {
      "op": "ADD"
    },
    "3207": {
      "op": "PUSH2",
      "value": "0xC6F"
    },
    "3210": {
      "op": "JUMP"
    },
    "3211": {
      "op": "JUMPDEST"
    },
    "3212": {
      "op": "POP"
    },
    "3213": {
      "op": "SWAP1"
    },
    "3214": {
      "op": "SWAP9"
    },
    "3215": {
      "op": "SWAP8"
    },
    "3216": {
      "op": "POP"
    },
    "3217": {
      "op": "POP"
    },
    "3218": {
      "op": "POP"
    },
    "3219": {
      "op": "POP"
    },
    "3220": {
      "op": "POP"
    },
    "3221": {
      "op": "POP"
    },
    "3222": {
      "op": "POP"
    },
    "3223": {
      "op": "POP"
    },
    "3224": {
      "jump": "o",
      "op": "JUMP"
    },
    "3225": {
      "op": "JUMPDEST"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3228": {
      "op": "DUP3"
    },
    "3229": {
      "op": "PUSH2",
      "value": "0xCB6"
    },
    "3232": {
      "op": "JUMPI"
    },
    "3233": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3243": {
      "op": "MSTORE"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3248": {
      "op": "MSTORE"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3253": {
      "op": "REVERT"
    },
    "3254": {
      "op": "JUMPDEST"
    },
    "3255": {
      "op": "POP"
    },
    "3256": {
      "op": "DIV"
    },
    "3257": {
      "op": "SWAP1"
    },
    "3258": {
      "jump": "o",
      "op": "JUMP"
    },
    "3259": {
      "op": "JUMPDEST"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3262": {
      "op": "DUP3"
    },
    "3263": {
      "op": "NOT"
    },
    "3264": {
      "op": "DUP3"
    },
    "3265": {
      "op": "GT"
    },
    "3266": {
      "op": "ISZERO"
    },
    "3267": {
      "op": "PUSH2",
      "value": "0xCCE"
    },
    "3270": {
      "op": "JUMPI"
    },
    "3271": {
      "op": "PUSH2",
      "value": "0xCCE"
    },
    "3274": {
      "op": "PUSH2",
      "value": "0xBB4"
    },
    "3277": {
      "jump": "i",
      "op": "JUMP"
    },
    "3278": {
      "op": "JUMPDEST"
    },
    "3279": {
      "op": "POP"
    },
    "3280": {
      "op": "ADD"
    },
    "3281": {
      "op": "SWAP1"
    },
    "3282": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ec23b1a8deaa66cbc361ba5d1ba5233187d878ff",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\n\npragma solidity 0.8.9;\n\nimport \"../interfaces/IERC20.sol\";\nimport \"./MerkleLib.sol\";\n\ncontract MerkleVesting {\n    using MerkleLib for bytes32;\n\n    uint public numTrees = 0;\n    \n    struct Tranche {\n        uint totalCoins;\n        uint currentCoins;\n        uint startTime;\n        uint endTime;\n        uint coinsPerSecond;\n        uint lastWithdrawalTime;\n        uint lockPeriodEndTime;\n    }\n\n    struct MerkleTree {\n        bytes32 rootHash;\n        bytes32 ipfsHash;\n        address tokenAddress;\n        uint tokenBalance;\n    }\n\n    mapping (address => mapping (uint => bool)) public initialized;\n    mapping (uint => MerkleTree) public merkleTrees;\n    mapping (address => mapping (uint => Tranche)) public tranches;\n\n    event WithdrawalOccurred(address indexed destination, uint numTokens, uint tokensLeft, uint indexed merkleIndex);\n    event MerkleRootAdded(uint indexed index, address indexed tokenAddress, bytes32 newRoot);\n\n    /*\n        Root hash should be built out of following data:\n        - destination\n        - totalCoins\n        - startTime\n        - endTime\n        - lockPeriodEndTime\n    */\n    function addMerkleRoot(bytes32 rootHash, bytes32 ipfsHash, address tokenAddress, uint tokenBalance) public {\n        merkleTrees[++numTrees] = MerkleTree(rootHash, ipfsHash, tokenAddress, 0);\n        depositTokens(numTrees, tokenBalance);\n        emit MerkleRootAdded(numTrees, tokenAddress, rootHash);\n    }\n\n    function depositTokens(uint numTree, uint value) public {\n        MerkleTree storage merkleTree = merkleTrees[numTree];\n        require(IERC20(merkleTree.tokenAddress).transferFrom(msg.sender, address(this), value), \"ERC20 transfer failed\");\n        merkleTree.tokenBalance += value;\n    }\n\n    function initialize(uint merkleIndex, address destination, uint totalCoins, uint startTime, uint endTime, uint lockPeriodEndTime, bytes32[] memory proof) external {\n        require(!initialized[destination][merkleIndex], \"Already initialized\");\n        bytes32 leaf = keccak256(abi.encode(destination, totalCoins, startTime, endTime, lockPeriodEndTime));\n        MerkleTree memory tree = merkleTrees[merkleIndex];\n        require(tree.rootHash.verifyProof(leaf, proof), \"The proof could not be verified.\");\n        initialized[destination][merkleIndex] = true;\n        uint coinsPerSecond = totalCoins / (endTime - startTime);\n        tranches[destination][merkleIndex] = Tranche(\n            totalCoins,\n            totalCoins,\n            startTime,\n            endTime,\n            coinsPerSecond,\n            startTime,\n            lockPeriodEndTime\n        );\n        if (lockPeriodEndTime < block.timestamp) {\n            withdraw(merkleIndex, destination);\n        }\n    }\n\n    function withdraw(uint merkleIndex, address destination) public {\n        require(initialized[destination][merkleIndex], \"You must initialize your account first.\");\n        Tranche storage tranche = tranches[destination][merkleIndex];\n        require(block.timestamp > tranche.lockPeriodEndTime, 'Must wait until after lock period');\n        require(tranche.currentCoins >  0, 'No coins left to withdraw');\n        uint currentWithdrawal = 0;\n\n        // if after vesting period ends, give them the remaining coins\n        if (block.timestamp >= tranche.endTime) {\n            currentWithdrawal = tranche.currentCoins;\n        } else {\n            // compute allowed withdrawal\n            currentWithdrawal = (block.timestamp - tranche.lastWithdrawalTime) * tranche.coinsPerSecond;\n        }\n\n        // update struct\n        tranche.currentCoins -= currentWithdrawal;\n        tranche.lastWithdrawalTime = block.timestamp;\n\n        MerkleTree storage tree = merkleTrees[merkleIndex];\n        tree.tokenBalance -= currentWithdrawal;\n\n        // transfer the tokens, brah\n        IERC20(tree.tokenAddress).transfer(destination, currentWithdrawal);\n        emit WithdrawalOccurred(destination, currentWithdrawal, tranche.currentCoins, merkleIndex);\n    }\n\n}",
  "sourceMap": "128:3890:6:-:0;;;214:1;191:24;;128:3890;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/MerkleVesting.sol",
  "type": "contract"
}