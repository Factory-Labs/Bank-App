{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        }
      ],
      "name": "MerkleRootAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensLeft",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalOccurred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        }
      ],
      "name": "addMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "merkleIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "management",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "merkleRoots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numRoots",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tranches",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "coinsPerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastWithdrawalTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/MerkleLib.sol",
    "3": "contracts/MerkleVesting.sol",
    "4": "interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/MerkleVesting.sol",
    "exportedSymbols": {
      "IERC20": [
        1204
      ],
      "MerkleLib": [
        312
      ],
      "MerkleVesting": [
        1126
      ]
    },
    "id": 1127,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 852,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:22:3"
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 853,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1127,
        "sourceUnit": 1205,
        "src": "66:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/MerkleLib.sol",
        "file": "./MerkleLib.sol",
        "id": 854,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1127,
        "sourceUnit": 313,
        "src": "101:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MerkleVesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1126,
        "linearizedBaseContracts": [
          1126
        ],
        "name": "MerkleVesting",
        "nameLocation": "137:13:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 857,
            "libraryName": {
              "id": 855,
              "name": "MerkleLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 312,
              "src": "163:9:3"
            },
            "nodeType": "UsingForDirective",
            "src": "157:28:3",
            "typeName": {
              "id": 856,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "177:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "71c5ecb1",
            "id": 861,
            "mutability": "mutable",
            "name": "merkleRoots",
            "nameLocation": "224:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "191:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 860,
              "keyType": {
                "id": 858,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "200:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "191:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 859,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "208:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7cda6497",
            "id": 863,
            "mutability": "mutable",
            "name": "numRoots",
            "nameLocation": "253:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "241:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 862,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "241:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 866,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "281:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "267:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1204",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 865,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 864,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1204,
                "src": "267:6:3"
              },
              "referencedDeclaration": 1204,
              "src": "267:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1204",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18369a2a",
            "id": 868,
            "mutability": "mutable",
            "name": "initialBalance",
            "nameLocation": "305:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "293:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 867,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "293:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88a8d602",
            "id": 870,
            "mutability": "mutable",
            "name": "management",
            "nameLocation": "340:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "325:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 869,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "325:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MerkleVesting.Tranche",
            "id": 883,
            "members": [
              {
                "constant": false,
                "id": 872,
                "mutability": "mutable",
                "name": "totalCoins",
                "nameLocation": "387:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 883,
                "src": "382:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 871,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "382:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 874,
                "mutability": "mutable",
                "name": "currentCoins",
                "nameLocation": "412:12:3",
                "nodeType": "VariableDeclaration",
                "scope": 883,
                "src": "407:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 873,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "407:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 876,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "439:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 883,
                "src": "434:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 875,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "434:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 878,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "463:7:3",
                "nodeType": "VariableDeclaration",
                "scope": 883,
                "src": "458:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 877,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "458:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 880,
                "mutability": "mutable",
                "name": "coinsPerSecond",
                "nameLocation": "485:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 883,
                "src": "480:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 879,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "480:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 882,
                "mutability": "mutable",
                "name": "lastWithdrawalTime",
                "nameLocation": "514:18:3",
                "nodeType": "VariableDeclaration",
                "scope": 883,
                "src": "509:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 881,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "509:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Tranche",
            "nameLocation": "364:7:3",
            "nodeType": "StructDefinition",
            "scope": 1126,
            "src": "357:182:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cbca47db",
            "id": 887,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "578:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "545:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 886,
              "keyType": {
                "id": 884,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "554:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "545:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 885,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "565:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3bb0170d",
            "id": 892,
            "mutability": "mutable",
            "name": "tranches",
            "nameLocation": "631:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 1126,
            "src": "595:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tranche_$883_storage_$",
              "typeString": "mapping(address => struct MerkleVesting.Tranche)"
            },
            "typeName": {
              "id": 891,
              "keyType": {
                "id": 888,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "604:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "595:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tranche_$883_storage_$",
                "typeString": "mapping(address => struct MerkleVesting.Tranche)"
              },
              "valueType": {
                "id": 890,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 889,
                  "name": "Tranche",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 883,
                  "src": "615:7:3"
                },
                "referencedDeclaration": 883,
                "src": "615:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                  "typeString": "struct MerkleVesting.Tranche"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 900,
            "name": "WithdrawalOccurred",
            "nameLocation": "652:18:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "679:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "671:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numTokens",
                  "nameLocation": "697:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "692:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 898,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensLeft",
                  "nameLocation": "713:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "708:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "670:54:3"
            },
            "src": "646:79:3"
          },
          {
            "anonymous": false,
            "id": 906,
            "name": "MerkleRootAdded",
            "nameLocation": "736:15:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "765:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "752:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "780:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "772:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "751:37:3"
            },
            "src": "730:59:3"
          },
          {
            "body": {
              "id": 917,
              "nodeType": "Block",
              "src": "821:95:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 909,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "840:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "840:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 911,
                          "name": "management",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "854:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "840:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206d616e6167656d656e74206d61792063616c6c2074686973",
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "866:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35a38d01aa0af81363c3b4ec0f4e8b2e38d53d5c2a82958ac1e1c62723c14586",
                          "typeString": "literal_string \"Only management may call this\""
                        },
                        "value": "Only management may call this"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35a38d01aa0af81363c3b4ec0f4e8b2e38d53d5c2a82958ac1e1c62723c14586",
                          "typeString": "literal_string \"Only management may call this\""
                        }
                      ],
                      "id": 908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "831:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "831:67:3"
                },
                {
                  "id": 916,
                  "nodeType": "PlaceholderStatement",
                  "src": "908:1:3"
                }
              ]
            },
            "id": 918,
            "name": "managementOnly",
            "nameLocation": "804:14:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:2:3"
            },
            "src": "795:121:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "964:85:3",
              "statements": [
                {
                  "expression": {
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 926,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "974:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1204",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 927,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 921,
                      "src": "982:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1204",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "974:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1204",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "974:14:3"
                },
                {
                  "expression": {
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 930,
                        "name": "merkleRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "998:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 932,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1010:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "998:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 933,
                      "name": "_root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 923,
                      "src": "1015:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "998:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "998:22:3"
                },
                {
                  "expression": {
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 936,
                      "name": "numRoots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 863,
                      "src": "1030:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1041:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1030:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 939,
                  "nodeType": "ExpressionStatement",
                  "src": "1030:12:3"
                }
              ]
            },
            "id": 941,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "941:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "934:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1204",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 920,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 919,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1204,
                      "src": "934:6:3"
                    },
                    "referencedDeclaration": 1204,
                    "src": "934:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1204",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "957:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "949:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "933:30:3"
            },
            "returnParameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:3"
            },
            "scope": 1126,
            "src": "922:127:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 960,
              "nodeType": "Block",
              "src": "1117:99:3",
              "statements": [
                {
                  "expression": {
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 948,
                        "name": "merkleRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "1127:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 951,
                      "indexExpression": {
                        "id": 950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "1139:10:3",
                        "subExpression": {
                          "id": 949,
                          "name": "numRoots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 863,
                          "src": "1141:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1127:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 952,
                      "name": "newRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "1153:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1127:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:33:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 956,
                        "name": "numRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "1191:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 957,
                        "name": "newRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "1201:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 955,
                      "name": "MerkleRootAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "1175:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1175:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 959,
                  "nodeType": "EmitStatement",
                  "src": "1170:39:3"
                }
              ]
            },
            "functionSelector": "3323c807",
            "id": 961,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 946,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 945,
                  "name": "managementOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 918,
                  "src": "1102:14:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1102:14:3"
              }
            ],
            "name": "addMerkleRoot",
            "nameLocation": "1064:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "1086:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "1078:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1077:17:3"
            },
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:0:3"
            },
            "scope": 1126,
            "src": "1055:161:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1040,
              "nodeType": "Block",
              "src": "1361:608:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1379:25:3",
                        "subExpression": {
                          "baseExpression": {
                            "id": 978,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 887,
                            "src": "1380:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 980,
                          "indexExpression": {
                            "id": 979,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "1392:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1380:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1406:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1371:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1371:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "1371:57:3"
                },
                {
                  "assignments": [
                    986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 986,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "1446:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1040,
                      "src": "1438:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 985,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1438:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 996,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 990,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "1480:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 991,
                            "name": "totalCoins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "1493:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 992,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "1505:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 993,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "1516:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 988,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1463:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1463:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1463:61:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 987,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1453:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:72:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1438:87:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1002,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 986,
                            "src": "1581:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1003,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "1587:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "baseExpression": {
                              "id": 998,
                              "name": "merkleRoots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 861,
                              "src": "1544:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 1000,
                            "indexExpression": {
                              "id": 999,
                              "name": "merkleIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 963,
                              "src": "1556:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1544:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyProof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 279,
                          "src": "1544:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_pure$_t_bytes32_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes32_$",
                            "typeString": "function (bytes32,bytes32,bytes32[] memory) pure returns (bool)"
                          }
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1544:49:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f6f6620636f756c64206e6f742062652076657269666965642e",
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1595:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6befa95a15378f3fa320a9fc597710e04d31854374b1378d40ad4268234fd91c",
                          "typeString": "literal_string \"The proof could not be verified.\""
                        },
                        "value": "The proof could not be verified."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6befa95a15378f3fa320a9fc597710e04d31854374b1378d40ad4268234fd91c",
                          "typeString": "literal_string \"The proof could not be verified.\""
                        }
                      ],
                      "id": 997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1536:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1536:94:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "1536:94:3"
                },
                {
                  "expression": {
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1008,
                        "name": "initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "1640:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1010,
                      "indexExpression": {
                        "id": 1009,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "1652:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1640:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1667:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1640:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1013,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:31:3"
                },
                {
                  "assignments": [
                    1015
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1015,
                      "mutability": "mutable",
                      "name": "coinsPerSecond",
                      "nameLocation": "1686:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1040,
                      "src": "1681:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1014,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1681:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1022,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1016,
                      "name": "totalCoins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "1703:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1017,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "1717:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1018,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "1727:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1717:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1020,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1716:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1703:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1681:56:3"
                },
                {
                  "expression": {
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1023,
                        "name": "tranches",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "1747:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tranche_$883_storage_$",
                          "typeString": "mapping(address => struct MerkleVesting.Tranche storage ref)"
                        }
                      },
                      "id": 1025,
                      "indexExpression": {
                        "id": 1024,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "1756:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1747:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$883_storage",
                        "typeString": "struct MerkleVesting.Tranche storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1027,
                          "name": "totalCoins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 967,
                          "src": "1792:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1028,
                          "name": "totalCoins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 967,
                          "src": "1816:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1029,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "1840:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1030,
                          "name": "endTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "1863:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1031,
                          "name": "coinsPerSecond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1015,
                          "src": "1884:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1032,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "1912:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1026,
                        "name": "Tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "1771:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Tranche_$883_storage_ptr_$",
                          "typeString": "type(struct MerkleVesting.Tranche storage pointer)"
                        }
                      },
                      "id": 1033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1771:160:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$883_memory_ptr",
                        "typeString": "struct MerkleVesting.Tranche memory"
                      }
                    },
                    "src": "1747:184:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$883_storage",
                      "typeString": "struct MerkleVesting.Tranche storage ref"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:184:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1037,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "1950:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1036,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "1941:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:21:3"
                }
              ]
            },
            "functionSelector": "f287ad04",
            "id": 1041,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1231:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "merkleIndex",
                  "nameLocation": "1247:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "1242:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "1268:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "1260:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "totalCoins",
                  "nameLocation": "1286:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "1281:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "1303:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "1298:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 971,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "1319:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "1314:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1345:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "1328:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 972,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1328:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 973,
                    "nodeType": "ArrayTypeName",
                    "src": "1328:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1241:110:3"
            },
            "returnParameters": {
              "id": 976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:0:3"
            },
            "scope": 1126,
            "src": "1222:747:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1124,
              "nodeType": "Block",
              "src": "2023:921:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1047,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "2041:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1049,
                        "indexExpression": {
                          "id": 1048,
                          "name": "destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1043,
                          "src": "2053:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2041:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420696e697469616c697a6520796f7572206163636f756e742066697273742e",
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2067:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4abd8331dd14b306cce990886a8c58b8be69cac04657ffd8c84a7e7c5940d2d1",
                          "typeString": "literal_string \"You must initialize your account first.\""
                        },
                        "value": "You must initialize your account first."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4abd8331dd14b306cce990886a8c58b8be69cac04657ffd8c84a7e7c5940d2d1",
                          "typeString": "literal_string \"You must initialize your account first.\""
                        }
                      ],
                      "id": 1046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2033:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2033:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "2033:76:3"
                },
                {
                  "assignments": [
                    1055
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1055,
                      "mutability": "mutable",
                      "name": "tranche",
                      "nameLocation": "2135:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1124,
                      "src": "2119:23:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                        "typeString": "struct MerkleVesting.Tranche"
                      },
                      "typeName": {
                        "id": 1054,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1053,
                          "name": "Tranche",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 883,
                          "src": "2119:7:3"
                        },
                        "referencedDeclaration": 883,
                        "src": "2119:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1059,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1056,
                      "name": "tranches",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 892,
                      "src": "2145:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tranche_$883_storage_$",
                        "typeString": "mapping(address => struct MerkleVesting.Tranche storage ref)"
                      }
                    },
                    "id": 1058,
                    "indexExpression": {
                      "id": 1057,
                      "name": "destination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "2154:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2145:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$883_storage",
                      "typeString": "struct MerkleVesting.Tranche storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2119:47:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1061,
                            "name": "tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1055,
                            "src": "2184:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                              "typeString": "struct MerkleVesting.Tranche storage pointer"
                            }
                          },
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currentCoins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 874,
                          "src": "2184:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2208:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2184:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20636f696e73206c65667420746f207769746864726177",
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2211:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5408369ba8a5a8ab8865a5c8cf9d54818bf598d281aa43e2647b1ce4add273e",
                          "typeString": "literal_string \"No coins left to withdraw\""
                        },
                        "value": "No coins left to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5408369ba8a5a8ab8865a5c8cf9d54818bf598d281aa43e2647b1ce4add273e",
                          "typeString": "literal_string \"No coins left to withdraw\""
                        }
                      ],
                      "id": 1060,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2176:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:63:3"
                },
                {
                  "assignments": [
                    1069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1069,
                      "mutability": "mutable",
                      "name": "currentWithdrawal",
                      "nameLocation": "2254:17:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1124,
                      "src": "2249:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1068,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2249:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1071,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2274:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2249:26:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1072,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2361:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2361:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 1074,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "2380:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 878,
                      "src": "2380:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2361:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1095,
                    "nodeType": "Block",
                    "src": "2468:158:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1083,
                            "name": "currentWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "2524:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1088,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1084,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "2545:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1085,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "2545:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1086,
                                      "name": "tranche",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1055,
                                      "src": "2563:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                                        "typeString": "struct MerkleVesting.Tranche storage pointer"
                                      }
                                    },
                                    "id": 1087,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastWithdrawalTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 882,
                                    "src": "2563:26:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2545:44:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1089,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2544:46:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 1090,
                                "name": "tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1055,
                                "src": "2593:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                                  "typeString": "struct MerkleVesting.Tranche storage pointer"
                                }
                              },
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "coinsPerSecond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 880,
                              "src": "2593:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2544:71:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2524:91:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1094,
                        "nodeType": "ExpressionStatement",
                        "src": "2524:91:3"
                      }
                    ]
                  },
                  "id": 1096,
                  "nodeType": "IfStatement",
                  "src": "2357:269:3",
                  "trueBody": {
                    "id": 1082,
                    "nodeType": "Block",
                    "src": "2397:65:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1077,
                            "name": "currentWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "2411:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1078,
                              "name": "tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1055,
                              "src": "2431:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                                "typeString": "struct MerkleVesting.Tranche storage pointer"
                              }
                            },
                            "id": 1079,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentCoins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 874,
                            "src": "2431:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2411:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1081,
                        "nodeType": "ExpressionStatement",
                        "src": "2411:40:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1097,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "2661:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 1099,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentCoins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 874,
                      "src": "2661:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1100,
                      "name": "currentWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "2685:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2661:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1102,
                  "nodeType": "ExpressionStatement",
                  "src": "2661:41:3"
                },
                {
                  "expression": {
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1103,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "2712:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 1105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastWithdrawalTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 882,
                      "src": "2712:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1106,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2741:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2741:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2712:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1109,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:44:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1113,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "2819:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1114,
                        "name": "currentWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "2832:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1110,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 866,
                        "src": "2804:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1204",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1153,
                      "src": "2804:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2804:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "2804:46:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1118,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "2884:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1119,
                        "name": "currentWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "2897:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1120,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1055,
                          "src": "2916:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$883_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 1121,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currentCoins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 874,
                        "src": "2916:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1117,
                      "name": "WithdrawalOccurred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "2865:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:72:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1123,
                  "nodeType": "EmitStatement",
                  "src": "2860:77:3"
                }
              ]
            },
            "id": 1125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1984:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "2001:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "1993:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1992:21:3"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2023:0:3"
            },
            "scope": 1126,
            "src": "1975:969:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1127,
        "src": "128:2819:3",
        "usedErrors": []
      }
    ],
    "src": "42:2905:3"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610a97380380610a9783398101604081905261002f91610086565b600280546001600160a01b0319166001600160a01b039390931692909217909155600160008181526020527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d9190915580556100c0565b6000806040838503121561009957600080fd5b82516001600160a01b03811681146100b057600080fd5b6020939093015192949293505050565b6109c8806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637cda6497116100665780637cda64971461015957806388a8d60214610162578063cbca47db1461018d578063f287ad04146101c0578063fc0c546a146101d357600080fd5b806318369a2a146100985780633323c807146100b45780633bb0170d146100c957806371c5ecb114610139575b600080fd5b6100a160035481565b6040519081526020015b60405180910390f35b6100c76100c236600461072f565b6101e6565b005b61010c6100d7366004610764565b600660205260009081526040902080546001820154600283015460038401546004850154600590950154939492939192909186565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016100ab565b6100a161014736600461072f565b60006020819052908152604090205481565b6100a160015481565b600454610175906001600160a01b031681565b6040516001600160a01b0390911681526020016100ab565b6101b061019b366004610764565b60056020526000908152604090205460ff1681565b60405190151581526020016100ab565b6100c76101ce36600461079c565b6102af565b600254610175906001600160a01b031681565b6004546001600160a01b031633146102455760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206d616e6167656d656e74206d61792063616c6c207468697300000060448201526064015b60405180910390fd5b80600080600160008154610258906108a8565b9190508190558152602001908152602001600020819055506001547f14ae70b7538cb704d414f634689a12a1b4ac99bcce8305042069d26ee7fed3f3826040516102a491815260200190565b60405180910390a250565b6001600160a01b03851660009081526005602052604090205460ff161561030e5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161023c565b6040516bffffffffffffffffffffffff19606087901b16602082015260348101859052605481018490526074810183905260009060940160408051601f19818403018152828252805160209182012060008b81529182905291902054632769cd1f60e21b835290925073__MerkleLib_____________________________91639da7347c916103a391859087906004016108c3565b60206040518083038186803b1580156103bb57600080fd5b505af41580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f39190610918565b61043f5760405162461bcd60e51b815260206004820181905260248201527f5468652070726f6f6620636f756c64206e6f742062652076657269666965642e604482015260640161023c565b6001600160a01b0386166000908152600560205260408120805460ff1916600117905561046c858561093a565b6104769087610951565b90506040518060c001604052808781526020018781526020018681526020018581526020018281526020018681525060066000896001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a082015181600501559050506105128761051c565b5050505050505050565b6001600160a01b03811660009081526005602052604090205460ff166105945760405162461bcd60e51b815260206004820152602760248201527f596f75206d75737420696e697469616c697a6520796f7572206163636f756e74604482015266103334b939ba1760c91b606482015260840161023c565b6001600160a01b038116600090815260066020526040902060018101546105fd5760405162461bcd60e51b815260206004820152601960248201527f4e6f20636f696e73206c65667420746f20776974686472617700000000000000604482015260640161023c565b60008160030154421061061557506001810154610636565b60048201546005830154610629904261093a565b6106339190610973565b90505b8082600101600082825461064a919061093a565b909155505042600583015560025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106db9190610918565b506001820154604080516001600160a01b03861681526020810184905280820192909252517f840b2e72ac87c36be7e2e3f300d63bfe13603652df8705edbe38c230313531689181900360600190a1505050565b60006020828403121561074157600080fd5b5035919050565b80356001600160a01b038116811461075f57600080fd5b919050565b60006020828403121561077657600080fd5b61077f82610748565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c087890312156107b557600080fd5b8635955060206107c6818901610748565b955060408801359450606088013593506080880135925060a088013567ffffffffffffffff808211156107f857600080fd5b818a0191508a601f83011261080c57600080fd5b81358181111561081e5761081e610786565b8060051b604051601f19603f8301168101818110858211171561084357610843610786565b60405291825284820192508381018501918d83111561086157600080fd5b938501935b8285101561087f57843584529385019392850192610866565b8096505050505050509295509295509295565b634e487b7160e01b600052601160045260246000fd5b60006000198214156108bc576108bc610892565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b8181101561090a578451835293830193918301916001016108ee565b509098975050505050505050565b60006020828403121561092a57600080fd5b8151801515811461077f57600080fd5b60008282101561094c5761094c610892565b500390565b60008261096e57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561098d5761098d610892565b50029056fea26469706673582212202331edb2c90b8893cf8d48a13f2c54c30b4ae41965194bbb20abee532fd3939c64736f6c63430008090033",
  "bytecodeSha1": "33723f7eb091435fb32d9b785b68f9416e32b99d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "MerkleVesting",
  "coverageMap": {
    "branches": {
      "1": {},
      "3": {
        "MerkleVesting.initialize": {
          "15": [
            1379,
            1404,
            true
          ],
          "16": [
            1544,
            1593,
            true
          ]
        },
        "MerkleVesting.withdraw": {
          "17": [
            2041,
            2065,
            true
          ],
          "18": [
            2361,
            2395,
            false
          ]
        }
      },
      "4": {}
    },
    "statements": {
      "1": {},
      "3": {
        "MerkleVesting.addMerkleRoot": {
          "0": [
            1127,
            1160
          ],
          "1": [
            1170,
            1209
          ]
        },
        "MerkleVesting.initialize": {
          "2": [
            1371,
            1428
          ],
          "3": [
            1536,
            1630
          ],
          "4": [
            1640,
            1671
          ],
          "5": [
            1747,
            1931
          ],
          "6": [
            1941,
            1962
          ]
        },
        "MerkleVesting.withdraw": {
          "7": [
            2033,
            2109
          ],
          "8": [
            2176,
            2239
          ],
          "9": [
            2411,
            2451
          ],
          "10": [
            2524,
            2615
          ],
          "11": [
            2661,
            2702
          ],
          "12": [
            2712,
            2756
          ],
          "13": [
            2804,
            2850
          ],
          "14": [
            2860,
            2937
          ]
        }
      },
      "4": {}
    }
  },
  "dependencies": [
    "IERC20",
    "MerkleLib"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c80637cda6497116100665780637cda64971461015957806388a8d60214610162578063cbca47db1461018d578063f287ad04146101c0578063fc0c546a146101d357600080fd5b806318369a2a146100985780633323c807146100b45780633bb0170d146100c957806371c5ecb114610139575b600080fd5b6100a160035481565b6040519081526020015b60405180910390f35b6100c76100c236600461072f565b6101e6565b005b61010c6100d7366004610764565b600660205260009081526040902080546001820154600283015460038401546004850154600590950154939492939192909186565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016100ab565b6100a161014736600461072f565b60006020819052908152604090205481565b6100a160015481565b600454610175906001600160a01b031681565b6040516001600160a01b0390911681526020016100ab565b6101b061019b366004610764565b60056020526000908152604090205460ff1681565b60405190151581526020016100ab565b6100c76101ce36600461079c565b6102af565b600254610175906001600160a01b031681565b6004546001600160a01b031633146102455760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206d616e6167656d656e74206d61792063616c6c207468697300000060448201526064015b60405180910390fd5b80600080600160008154610258906108a8565b9190508190558152602001908152602001600020819055506001547f14ae70b7538cb704d414f634689a12a1b4ac99bcce8305042069d26ee7fed3f3826040516102a491815260200190565b60405180910390a250565b6001600160a01b03851660009081526005602052604090205460ff161561030e5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161023c565b6040516bffffffffffffffffffffffff19606087901b16602082015260348101859052605481018490526074810183905260009060940160408051601f19818403018152828252805160209182012060008b81529182905291902054632769cd1f60e21b835290925073__$61dd25696c02d5bd2863c8d2c1a2324a87$__91639da7347c916103a391859087906004016108c3565b60206040518083038186803b1580156103bb57600080fd5b505af41580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f39190610918565b61043f5760405162461bcd60e51b815260206004820181905260248201527f5468652070726f6f6620636f756c64206e6f742062652076657269666965642e604482015260640161023c565b6001600160a01b0386166000908152600560205260408120805460ff1916600117905561046c858561093a565b6104769087610951565b90506040518060c001604052808781526020018781526020018681526020018581526020018281526020018681525060066000896001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a082015181600501559050506105128761051c565b5050505050505050565b6001600160a01b03811660009081526005602052604090205460ff166105945760405162461bcd60e51b815260206004820152602760248201527f596f75206d75737420696e697469616c697a6520796f7572206163636f756e74604482015266103334b939ba1760c91b606482015260840161023c565b6001600160a01b038116600090815260066020526040902060018101546105fd5760405162461bcd60e51b815260206004820152601960248201527f4e6f20636f696e73206c65667420746f20776974686472617700000000000000604482015260640161023c565b60008160030154421061061557506001810154610636565b60048201546005830154610629904261093a565b6106339190610973565b90505b8082600101600082825461064a919061093a565b909155505042600583015560025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106db9190610918565b506001820154604080516001600160a01b03861681526020810184905280820192909252517f840b2e72ac87c36be7e2e3f300d63bfe13603652df8705edbe38c230313531689181900360600190a1505050565b60006020828403121561074157600080fd5b5035919050565b80356001600160a01b038116811461075f57600080fd5b919050565b60006020828403121561077657600080fd5b61077f82610748565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c087890312156107b557600080fd5b8635955060206107c6818901610748565b955060408801359450606088013593506080880135925060a088013567ffffffffffffffff808211156107f857600080fd5b818a0191508a601f83011261080c57600080fd5b81358181111561081e5761081e610786565b8060051b604051601f19603f8301168101818110858211171561084357610843610786565b60405291825284820192508381018501918d83111561086157600080fd5b938501935b8285101561087f57843584529385019392850192610866565b8096505050505050509295509295509295565b634e487b7160e01b600052601160045260246000fd5b60006000198214156108bc576108bc610892565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b8181101561090a578451835293830193918301916001016108ee565b509098975050505050505050565b60006020828403121561092a57600080fd5b8151801515811461077f57600080fd5b60008282101561094c5761094c610892565b500390565b60008261096e57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561098d5761098d610892565b50029056fea26469706673582212202331edb2c90b8893cf8d48a13f2c54c30b4ae41965194bbb20abee532fd3939c64736f6c63430008090033",
  "deployedSourceMap": "128:2819:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;293:26;;;;;;;;;160:25:5;;;148:2;133:18;293:26:3;;;;;;;;1055:161;;;;;;:::i;:::-;;:::i;:::-;;595:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1037:25:5;;;1093:2;1078:18;;1071:34;;;;1121:18;;;1114:34;;;;1179:2;1164:18;;1157:34;1222:3;1207:19;;1200:35;1266:3;1251:19;;1244:35;1024:3;1009:19;595:44:3;750:535:5;191:44:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;241:20;;;;;;325:25;;;;;-1:-1:-1;;;;;325:25:3;;;;;;-1:-1:-1;;;;;1821:32:5;;;1803:51;;1791:2;1776:18;325:25:3;1657:203:5;545:44:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2030:14:5;;2023:22;2005:41;;1993:2;1978:18;545:44:3;1865:187:5;1222:747:3;;;;;;:::i;:::-;;:::i;267:19::-;;;;;-1:-1:-1;;;;;267:19:3;;;1055:161;854:10;;-1:-1:-1;;;;;854:10:3;840;:24;831:67;;;;-1:-1:-1;;;831:67:3;;4083:2:5;831:67:3;;;4065:21:5;4122:2;4102:18;;;4095:30;4161:31;4141:18;;;4134:59;4210:18;;831:67:3;;;;;;;;;1153:7:::1;1127:11;:23:::0;1141:8:::1;;1139:10;;;;;:::i;:::-;;;;;;;1127:23;;;;;;;;;;;:33;;;;1191:8;;1175:34;1201:7;1175:34;;;;160:25:5::0;;148:2;133:18;;14:177;1175:34:3::1;;;;;;;;1055:161:::0;:::o;1222:747::-;-1:-1:-1;;;;;1380:24:3;;;;;;:11;:24;;;;;;;;1379:25;1371:57;;;;-1:-1:-1;;;1371:57:3;;4713:2:5;1371:57:3;;;4695:21:5;4752:2;4732:18;;;4725:30;-1:-1:-1;;;4771:18:5;;;4764:49;4830:18;;1371:57:3;4511:343:5;1371:57:3;1463:61;;-1:-1:-1;;5092:2:5;5088:15;;;5084:53;1463:61:3;;;5072:66:5;5154:12;;;5147:28;;;5191:12;;;5184:28;;;5228:12;;;5221:28;;;1438:12:3;;5265:13:5;;1463:61:3;;;-1:-1:-1;;1463:61:3;;;;;;;;;1453:72;;1463:61;1453:72;;;;1544:11;:24;;;;;;;;;;;-1:-1:-1;;;1544:49:3;;1453:72;;-1:-1:-1;1544:36:3;;;;:49;;1453:72;;1587:5;;1544:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1536:94;;;;-1:-1:-1;;;1536:94:3;;6561:2:5;1536:94:3;;;6543:21:5;;;6580:18;;;6573:30;6639:34;6619:18;;;6612:62;6691:18;;1536:94:3;6359:356:5;1536:94:3;-1:-1:-1;;;;;1640:24:3;;;;;;:11;:24;;;;;:31;;-1:-1:-1;;1640:31:3;1667:4;1640:31;;;1717:19;1727:9;1717:7;:19;:::i;:::-;1703:34;;:10;:34;:::i;:::-;1681:56;;1771:160;;;;;;;;1792:10;1771:160;;;;1816:10;1771:160;;;;1840:9;1771:160;;;;1863:7;1771:160;;;;1884:14;1771:160;;;;1912:9;1771:160;;;1747:8;:21;1756:11;-1:-1:-1;;;;;1747:21:3;-1:-1:-1;;;;;1747:21:3;;;;;;;;;;;;:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:21;1950:11;1941:8;:21::i;:::-;1361:608;;1222:747;;;;;;:::o;1975:969::-;-1:-1:-1;;;;;2041:24:3;;;;;;:11;:24;;;;;;;;2033:76;;;;-1:-1:-1;;;2033:76:3;;7274:2:5;2033:76:3;;;7256:21:5;7313:2;7293:18;;;7286:30;7352:34;7332:18;;;7325:62;-1:-1:-1;;;7403:18:5;;;7396:37;7450:19;;2033:76:3;7072:403:5;2033:76:3;-1:-1:-1;;;;;2145:21:3;;2119:23;2145:21;;;:8;:21;;;;;2184:20;;;;2176:63;;;;-1:-1:-1;;;2176:63:3;;7682:2:5;2176:63:3;;;7664:21:5;7721:2;7701:18;;;7694:30;7760:27;7740:18;;;7733:55;7805:18;;2176:63:3;7480:349:5;2176:63:3;2249:22;2380:7;:15;;;2361;:34;2357:269;;-1:-1:-1;2431:20:3;;;;2357:269;;;2593:22;;;;2563:26;;;;2545:44;;:15;:44;:::i;:::-;2544:71;;;;:::i;:::-;2524:91;;2357:269;2685:17;2661:7;:20;;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;2741:15:3;2712:26;;;:44;2804:5;;:46;;-1:-1:-1;;;2804:46:3;;-1:-1:-1;;;;;8199:32:5;;;2804:46:3;;;8181:51:5;8248:18;;;8241:34;;;2804:5:3;;;;:14;;8154:18:5;;2804:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2916:20:3;;;;2865:72;;;-1:-1:-1;;;;;8506:32:5;;8488:51;;8570:2;8555:18;;8548:34;;;8598:18;;;8591:34;;;;2865:72:3;;;;;;8476:2:5;2865:72:3;;;2023:921;;1975:969;:::o;196:180:5:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:5;;196:180;-1:-1:-1;196:180:5:o;381:173::-;449:20;;-1:-1:-1;;;;;498:31:5;;488:42;;478:70;;544:1;541;534:12;478:70;381:173;;;:::o;559:186::-;618:6;671:2;659:9;650:7;646:23;642:32;639:52;;;687:1;684;677:12;639:52;710:29;729:9;710:29;:::i;:::-;700:39;559:186;-1:-1:-1;;;559:186:5:o;2057:127::-;2118:10;2113:3;2109:20;2106:1;2099:31;2149:4;2146:1;2139:15;2173:4;2170:1;2163:15;2189:1464;2318:6;2326;2334;2342;2350;2358;2411:3;2399:9;2390:7;2386:23;2382:33;2379:53;;;2428:1;2425;2418:12;2379:53;2464:9;2451:23;2441:33;;2493:2;2514:38;2548:2;2537:9;2533:18;2514:38;:::i;:::-;2504:48;;2599:2;2588:9;2584:18;2571:32;2561:42;;2650:2;2639:9;2635:18;2622:32;2612:42;;2701:3;2690:9;2686:19;2673:33;2663:43;;2757:3;2746:9;2742:19;2729:33;2781:18;2822:2;2814:6;2811:14;2808:34;;;2838:1;2835;2828:12;2808:34;2876:6;2865:9;2861:22;2851:32;;2921:7;2914:4;2910:2;2906:13;2902:27;2892:55;;2943:1;2940;2933:12;2892:55;2979:2;2966:16;3001:2;2997;2994:10;2991:36;;;3007:18;;:::i;:::-;3053:2;3050:1;3046:10;3085:2;3079:9;3148:2;3144:7;3139:2;3135;3131:11;3127:25;3119:6;3115:38;3203:6;3191:10;3188:22;3183:2;3171:10;3168:18;3165:46;3162:72;;;3214:18;;:::i;:::-;3250:2;3243:22;3300:18;;;3334:15;;;;-1:-1:-1;3376:11:5;;;3372:20;;;3404:19;;;3401:39;;;3436:1;3433;3426:12;3401:39;3460:11;;;;3480:142;3496:6;3491:3;3488:15;3480:142;;;3562:17;;3550:30;;3513:12;;;;3600;;;;3480:142;;;3641:6;3631:16;;;;;;;;2189:1464;;;;;;;;:::o;4239:127::-;4300:10;4295:3;4291:20;4288:1;4281:31;4331:4;4328:1;4321:15;4355:4;4352:1;4345:15;4371:135;4410:3;-1:-1:-1;;4431:17:5;;4428:43;;;4451:18;;:::i;:::-;-1:-1:-1;4498:1:5;4487:13;;4371:135::o;5289:783::-;5495:4;5543:2;5532:9;5528:18;5573:6;5562:9;5555:25;5599:2;5637:6;5632:2;5621:9;5617:18;5610:34;5680:2;5675;5664:9;5660:18;5653:30;5703:6;5738;5732:13;5769:6;5761;5754:22;5807:3;5796:9;5792:19;5785:26;;5846:2;5838:6;5834:15;5820:29;;5867:1;5877:169;5891:6;5888:1;5885:13;5877:169;;;5952:13;;5940:26;;6021:15;;;;5986:12;;;;5913:1;5906:9;5877:169;;;-1:-1:-1;6063:3:5;;5289:783;-1:-1:-1;;;;;;;;5289:783:5:o;6077:277::-;6144:6;6197:2;6185:9;6176:7;6172:23;6168:32;6165:52;;;6213:1;6210;6203:12;6165:52;6245:9;6239:16;6298:5;6291:13;6284:21;6277:5;6274:32;6264:60;;6320:1;6317;6310:12;6720:125;6760:4;6788:1;6785;6782:8;6779:34;;;6793:18;;:::i;:::-;-1:-1:-1;6830:9:5;;6720:125::o;6850:217::-;6890:1;6916;6906:132;;6960:10;6955:3;6951:20;6948:1;6941:31;6995:4;6992:1;6985:15;7023:4;7020:1;7013:15;6906:132;-1:-1:-1;7052:9:5;;6850:217::o;7834:168::-;7874:7;7940:1;7936;7932:6;7928:14;7925:1;7922:21;7917:1;7910:9;7903:17;7899:45;7896:71;;;7947:18;;:::i;:::-;-1:-1:-1;7987:9:5;;7834:168::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    128,
    2947
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CDA6497 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7CDA6497 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x88A8D602 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xCBCA47DB EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xF287AD04 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18369A2A EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3323C807 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x3BB0170D EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x71C5ECB1 EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10C PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xAB JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA1 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x175 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAB JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAB JUMP JUMPDEST PUSH2 0xC7 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x175 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D616E6167656D656E74206D61792063616C6C2074686973000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD PUSH2 0x258 SWAP1 PUSH2 0x8A8 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH32 0x14AE70B7538CB704D414F634689A12A1B4AC99BCCE8305042069D26EE7FED3F3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x74 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x94 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD PUSH4 0x2769CD1F PUSH1 0xE2 SHL DUP4 MSTORE SWAP1 SWAP3 POP PUSH20 0x0 SWAP2 PUSH4 0x9DA7347C SWAP2 PUSH2 0x3A3 SWAP2 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070726F6F6620636F756C64206E6F742062652076657269666965642E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x23C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x46C DUP6 DUP6 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x476 SWAP1 DUP8 PUSH2 0x951 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP PUSH2 0x512 DUP8 PUSH2 0x51C JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x594 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D75737420696E697469616C697A6520796F7572206163636F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x103334B939BA17 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x23C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20636F696E73206C65667420746F20776974686472617700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x23C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x615 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH2 0x629 SWAP1 TIMESTAMP PUSH2 0x93A JUMP JUMPDEST PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x64A SWAP2 SWAP1 PUSH2 0x93A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DB SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0x840B2E72AC87C36BE7E2E3F300D63BFE13603652DF8705EDBE38C23031353168 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77F DUP3 PUSH2 0x748 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 PUSH2 0x7C6 DUP2 DUP10 ADD PUSH2 0x748 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x81E JUMPI PUSH2 0x81E PUSH2 0x786 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x843 JUMPI PUSH2 0x843 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP14 DUP4 GT ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x87F JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x866 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x8BC JUMPI PUSH2 0x8BC PUSH2 0x892 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 DUP6 DUP2 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x90A JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x8EE JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x94C JUMPI PUSH2 0x94C PUSH2 0x892 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x96E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x98D JUMPI PUSH2 0x98D PUSH2 0x892 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 BALANCE 0xED 0xB2 0xC9 SIGNEXTEND DUP9 SWAP4 0xCF DUP14 BASEFEE LOG1 EXTCODEHASH 0x2C SLOAD 0xC3 SIGNEXTEND 0x4A 0xE4 NOT PUSH6 0x194BBB20ABEE MSTORE8 0x2F 0xD3 SWAP4 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        128,
        2947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7CDA6497"
    },
    "38": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7CDA6497"
    },
    "49": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x159"
    },
    "53": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x88A8D602"
    },
    "60": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x162"
    },
    "64": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCBCA47DB"
    },
    "71": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D"
    },
    "75": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF287AD04"
    },
    "82": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C0"
    },
    "86": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFC0C546A"
    },
    "93": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D3"
    },
    "97": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "REVERT",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x18369A2A"
    },
    "109": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "EQ",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3323C807"
    },
    "120": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB4"
    },
    "124": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3BB0170D"
    },
    "131": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC9"
    },
    "135": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x71C5ECB1"
    },
    "142": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x139"
    },
    "146": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        128,
        2947
      ],
      "op": "REVERT",
      "path": "3"
    },
    "152": {
      "offset": [
        293,
        319
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "153": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1"
    },
    "156": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "158": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "DUP2",
      "path": "3"
    },
    "160": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "JUMP",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "162": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "164": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "165": {
      "op": "SWAP1"
    },
    "166": {
      "op": "DUP2"
    },
    "167": {
      "op": "MSTORE"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "170": {
      "op": "ADD"
    },
    "171": {
      "offset": [
        293,
        319
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "174": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "DUP1",
      "path": "3"
    },
    "176": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "177": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "SUB",
      "path": "3"
    },
    "178": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        293,
        319
      ],
      "op": "RETURN",
      "path": "3"
    },
    "180": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "181": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC7"
    },
    "184": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC2"
    },
    "187": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "188": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "190": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72F"
    },
    "193": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        1055,
        1216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "194": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "195": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E6"
    },
    "198": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        1055,
        1216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "199": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "200": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "STOP",
      "path": "3"
    },
    "201": {
      "offset": [
        595,
        639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "202": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10C"
    },
    "205": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD7"
    },
    "208": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "209": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "211": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x764"
    },
    "214": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        595,
        639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "215": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "216": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "218": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "220": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "221": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "223": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "224": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "DUP2",
      "path": "3"
    },
    "225": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "226": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "228": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "229": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "230": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "DUP1",
      "path": "3"
    },
    "231": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "232": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "234": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "DUP3",
      "path": "3"
    },
    "235": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "ADD",
      "path": "3"
    },
    "236": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "237": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "239": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "DUP4",
      "path": "3"
    },
    "240": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "ADD",
      "path": "3"
    },
    "241": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "242": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "244": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "DUP5",
      "path": "3"
    },
    "245": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "ADD",
      "path": "3"
    },
    "246": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "247": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "249": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "DUP6",
      "path": "3"
    },
    "250": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "ADD",
      "path": "3"
    },
    "251": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "252": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "254": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "255": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "256": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "ADD",
      "path": "3"
    },
    "257": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "258": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "259": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "260": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "261": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "262": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "263": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "264": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "265": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "266": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "DUP7",
      "path": "3"
    },
    "267": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "JUMP",
      "path": "3"
    },
    "268": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "269": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "271": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "DUP1",
      "path": "3"
    },
    "272": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        595,
        639
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "273": {
      "op": "SWAP7"
    },
    "274": {
      "op": "DUP8"
    },
    "275": {
      "op": "MSTORE"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "278": {
      "op": "DUP8"
    },
    "279": {
      "op": "ADD"
    },
    "280": {
      "op": "SWAP6"
    },
    "281": {
      "op": "SWAP1"
    },
    "282": {
      "op": "SWAP6"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "SWAP4"
    },
    "285": {
      "op": "DUP6"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "op": "SWAP3"
    },
    "288": {
      "op": "SWAP1"
    },
    "289": {
      "op": "SWAP3"
    },
    "290": {
      "op": "MSTORE"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "293": {
      "op": "DUP5"
    },
    "294": {
      "op": "ADD"
    },
    "295": {
      "op": "MSTORE"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "298": {
      "op": "DUP4"
    },
    "299": {
      "op": "ADD"
    },
    "300": {
      "op": "MSTORE"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "303": {
      "op": "DUP3"
    },
    "304": {
      "op": "ADD"
    },
    "305": {
      "op": "MSTORE"
    },
    "306": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "308": {
      "op": "ADD"
    },
    "309": {
      "offset": [
        595,
        639
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB"
    },
    "312": {
      "op": "JUMP"
    },
    "313": {
      "offset": [
        191,
        235
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "314": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1"
    },
    "317": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x147"
    },
    "320": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "321": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "323": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72F"
    },
    "326": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        191,
        235
      ],
      "op": "JUMP",
      "path": "3"
    },
    "327": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "328": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "330": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "332": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "DUP2",
      "path": "3"
    },
    "333": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "334": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "335": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "336": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "DUP2",
      "path": "3"
    },
    "337": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "338": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "340": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "341": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "342": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "343": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "DUP2",
      "path": "3"
    },
    "344": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        191,
        235
      ],
      "op": "JUMP",
      "path": "3"
    },
    "345": {
      "offset": [
        241,
        261
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "346": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        241,
        261
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1"
    },
    "349": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        241,
        261
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "351": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        241,
        261
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "352": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        241,
        261
      ],
      "op": "DUP2",
      "path": "3"
    },
    "353": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        241,
        261
      ],
      "op": "JUMP",
      "path": "3"
    },
    "354": {
      "offset": [
        325,
        350
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "355": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        325,
        350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "357": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        325,
        350
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "358": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        325,
        350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x175"
    },
    "361": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        325,
        350
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "368": {
      "op": "SHL"
    },
    "369": {
      "op": "SUB"
    },
    "370": {
      "offset": [
        325,
        350
      ],
      "op": "AND",
      "path": "3"
    },
    "371": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        325,
        350
      ],
      "op": "DUP2",
      "path": "3"
    },
    "372": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        325,
        350
      ],
      "op": "JUMP",
      "path": "3"
    },
    "373": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        325,
        350
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "374": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        325,
        350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "376": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        325,
        350
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "383": {
      "op": "SHL"
    },
    "384": {
      "op": "SUB"
    },
    "385": {
      "op": "SWAP1"
    },
    "386": {
      "op": "SWAP2"
    },
    "387": {
      "op": "AND"
    },
    "388": {
      "op": "DUP2"
    },
    "389": {
      "op": "MSTORE"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "392": {
      "op": "ADD"
    },
    "393": {
      "offset": [
        325,
        350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB"
    },
    "396": {
      "op": "JUMP"
    },
    "397": {
      "offset": [
        545,
        589
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "398": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B0"
    },
    "401": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "404": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "405": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "407": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x764"
    },
    "410": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        545,
        589
      ],
      "op": "JUMP",
      "path": "3"
    },
    "411": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "412": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "414": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "416": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "417": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "419": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "420": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "DUP2",
      "path": "3"
    },
    "421": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "422": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "424": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "425": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "426": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "427": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "429": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "AND",
      "path": "3"
    },
    "430": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "DUP2",
      "path": "3"
    },
    "431": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "JUMP",
      "path": "3"
    },
    "432": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "433": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "435": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        545,
        589
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "436": {
      "op": "SWAP1"
    },
    "437": {
      "op": "ISZERO"
    },
    "438": {
      "op": "ISZERO"
    },
    "439": {
      "op": "DUP2"
    },
    "440": {
      "op": "MSTORE"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "443": {
      "op": "ADD"
    },
    "444": {
      "offset": [
        545,
        589
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAB"
    },
    "447": {
      "op": "JUMP"
    },
    "448": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "449": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC7"
    },
    "452": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CE"
    },
    "455": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "456": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "458": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79C"
    },
    "461": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1222,
        1969
      ],
      "op": "JUMP",
      "path": "3"
    },
    "462": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "463": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AF"
    },
    "466": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1222,
        1969
      ],
      "op": "JUMP",
      "path": "3"
    },
    "467": {
      "offset": [
        267,
        286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "468": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        267,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "470": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        267,
        286
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "471": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        267,
        286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x175"
    },
    "474": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        267,
        286
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "481": {
      "op": "SHL"
    },
    "482": {
      "op": "SUB"
    },
    "483": {
      "offset": [
        267,
        286
      ],
      "op": "AND",
      "path": "3"
    },
    "484": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        267,
        286
      ],
      "op": "DUP2",
      "path": "3"
    },
    "485": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        267,
        286
      ],
      "op": "JUMP",
      "path": "3"
    },
    "486": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "487": {
      "offset": [
        854,
        864
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "489": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        854,
        864
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "496": {
      "op": "SHL"
    },
    "497": {
      "op": "SUB"
    },
    "498": {
      "offset": [
        854,
        864
      ],
      "op": "AND",
      "path": "3"
    },
    "499": {
      "offset": [
        840,
        850
      ],
      "op": "CALLER",
      "path": "3"
    },
    "500": {
      "offset": [
        840,
        864
      ],
      "op": "EQ",
      "path": "3"
    },
    "501": {
      "offset": [
        831,
        898
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x245"
    },
    "504": {
      "offset": [
        831,
        898
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "505": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "507": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "508": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "514": {
      "op": "SHL"
    },
    "515": {
      "offset": [
        831,
        898
      ],
      "op": "DUP2",
      "path": "3"
    },
    "516": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "519": {
      "offset": [
        831,
        898
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "521": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "DUP3",
      "path": "3"
    },
    "522": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "ADD",
      "path": "3"
    },
    "523": {
      "op": "MSTORE"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "528": {
      "op": "DUP3"
    },
    "529": {
      "op": "ADD"
    },
    "530": {
      "op": "MSTORE"
    },
    "531": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206D616E6167656D656E74206D61792063616C6C2074686973000000"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "566": {
      "op": "DUP3"
    },
    "567": {
      "op": "ADD"
    },
    "568": {
      "op": "MSTORE"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "571": {
      "op": "ADD"
    },
    "572": {
      "offset": [
        831,
        898
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "573": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "575": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "576": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "DUP1",
      "path": "3"
    },
    "577": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "578": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "SUB",
      "path": "3"
    },
    "579": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "580": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "581": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        831,
        898
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "582": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1153,
        1160
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 0
    },
    "583": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1138
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "585": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "DUP1",
      "path": "3"
    },
    "586": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1141,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "588": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1141,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "590": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "591": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "592": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x258"
    },
    "595": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "596": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A8"
    },
    "599": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        1139,
        1149
      ],
      "op": "JUMP",
      "path": "3"
    },
    "600": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "601": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "602": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "603": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "POP",
      "path": "3"
    },
    "604": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "605": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "606": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1139,
        1149
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "607": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "DUP2",
      "path": "3"
    },
    "608": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "609": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "611": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "ADD",
      "path": "3"
    },
    "612": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "613": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "DUP2",
      "path": "3"
    },
    "614": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "615": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "617": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "ADD",
      "path": "3"
    },
    "618": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "620": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1150
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "621": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1160
      ],
      "op": "DUP2",
      "path": "3"
    },
    "622": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1160
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "623": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1160
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "624": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1127,
        1160
      ],
      "op": "POP",
      "path": "3"
    },
    "625": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1191,
        1199
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x1"
    },
    "627": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1191,
        1199
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "628": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x14AE70B7538CB704D414F634689A12A1B4AC99BCCE8305042069D26EE7FED3F3"
    },
    "661": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1201,
        1208
      ],
      "op": "DUP3",
      "path": "3"
    },
    "662": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "664": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "665": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A4"
    },
    "668": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "669": {
      "op": "DUP2"
    },
    "670": {
      "op": "MSTORE"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "673": {
      "op": "ADD"
    },
    "674": {
      "op": "SWAP1"
    },
    "675": {
      "op": "JUMP"
    },
    "676": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "677": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "679": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "680": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "DUP1",
      "path": "3"
    },
    "681": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "682": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "SUB",
      "path": "3"
    },
    "683": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "684": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1175,
        1209
      ],
      "op": "LOG2",
      "path": "3"
    },
    "685": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        1055,
        1216
      ],
      "op": "POP",
      "path": "3"
    },
    "686": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "o",
      "offset": [
        1055,
        1216
      ],
      "op": "JUMP",
      "path": "3"
    },
    "687": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "694": {
      "op": "SHL"
    },
    "695": {
      "op": "SUB"
    },
    "696": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 2
    },
    "697": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "AND",
      "path": "3"
    },
    "698": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "700": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "701": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "DUP2",
      "path": "3"
    },
    "702": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "703": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1391
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "705": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "707": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "708": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "710": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "711": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "712": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "713": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "715": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1380,
        1404
      ],
      "op": "AND",
      "path": "3"
    },
    "716": {
      "branch": 15,
      "fn": "MerkleVesting.initialize",
      "offset": [
        1379,
        1404
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "717": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30E"
    },
    "720": {
      "branch": 15,
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "721": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "723": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "DUP2",
      "path": "3"
    },
    "732": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "735": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "737": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "DUP3",
      "path": "3"
    },
    "738": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "ADD",
      "path": "3"
    },
    "739": {
      "op": "MSTORE"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "744": {
      "op": "DUP3"
    },
    "745": {
      "op": "ADD"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "op": "PUSH19",
      "value": "0x105B1C9958591E481A5B9A5D1A585B1A5E9959"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "772": {
      "op": "DUP3"
    },
    "773": {
      "op": "ADD"
    },
    "774": {
      "op": "MSTORE"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "777": {
      "op": "ADD"
    },
    "778": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C"
    },
    "781": {
      "op": "JUMP"
    },
    "782": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1371,
        1428
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "783": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "785": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "786": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "799": {
      "op": "NOT"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "802": {
      "op": "DUP8"
    },
    "803": {
      "op": "SWAP1"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "op": "AND"
    },
    "806": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "808": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "DUP3",
      "path": "3"
    },
    "809": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "ADD",
      "path": "3"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "813": {
      "op": "DUP2"
    },
    "814": {
      "op": "ADD"
    },
    "815": {
      "op": "DUP6"
    },
    "816": {
      "op": "SWAP1"
    },
    "817": {
      "op": "MSTORE"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "820": {
      "op": "DUP2"
    },
    "821": {
      "op": "ADD"
    },
    "822": {
      "op": "DUP5"
    },
    "823": {
      "op": "SWAP1"
    },
    "824": {
      "op": "MSTORE"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "827": {
      "op": "DUP2"
    },
    "828": {
      "op": "ADD"
    },
    "829": {
      "op": "DUP4"
    },
    "830": {
      "op": "SWAP1"
    },
    "831": {
      "op": "MSTORE"
    },
    "832": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1438,
        1450
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "834": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1438,
        1450
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "840": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "DUP1",
      "path": "3"
    },
    "841": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "844": {
      "op": "NOT"
    },
    "845": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "846": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "DUP5",
      "path": "3"
    },
    "847": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "SUB",
      "path": "3"
    },
    "848": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "ADD",
      "path": "3"
    },
    "849": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "850": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "851": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "DUP3",
      "path": "3"
    },
    "852": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "DUP3",
      "path": "3"
    },
    "853": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "854": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1453,
        1525
      ],
      "op": "DUP1",
      "path": "3"
    },
    "855": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1453,
        1525
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "856": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1463,
        1524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "858": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1453,
        1525
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "859": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1453,
        1525
      ],
      "op": "DUP3",
      "path": "3"
    },
    "860": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1453,
        1525
      ],
      "op": "ADD",
      "path": "3"
    },
    "861": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1453,
        1525
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "862": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1555
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x0"
    },
    "864": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "DUP12",
      "path": "3"
    },
    "865": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "DUP2",
      "path": "3"
    },
    "866": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "867": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "868": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "DUP3",
      "path": "3"
    },
    "869": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "870": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "871": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "872": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "873": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "874": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1568
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "875": {
      "op": "PUSH4",
      "value": "0x2769CD1F"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP4",
      "path": "3"
    },
    "884": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "885": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1453,
        1525
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "886": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1453,
        1525
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "887": {
      "op": "POP"
    },
    "888": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1580
      ],
      "op": "PUSH20",
      "path": "3",
      "value": "0x0"
    },
    "909": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1580
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "910": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1580
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9DA7347C"
    },
    "915": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1580
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "916": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A3"
    },
    "919": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "920": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1453,
        1525
      ],
      "op": "DUP6",
      "path": "3"
    },
    "921": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1453,
        1525
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "922": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1587,
        1592
      ],
      "op": "DUP8",
      "path": "3"
    },
    "923": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1587,
        1592
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "924": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "926": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "ADD",
      "path": "3"
    },
    "927": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C3"
    },
    "930": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1544,
        1593
      ],
      "op": "JUMP",
      "path": "3"
    },
    "931": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "932": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "934": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "936": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "937": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP1",
      "path": "3"
    },
    "938": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP4",
      "path": "3"
    },
    "939": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "SUB",
      "path": "3"
    },
    "940": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP2",
      "path": "3"
    },
    "941": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP7",
      "path": "3"
    },
    "942": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP1",
      "path": "3"
    },
    "943": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "944": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "945": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP1",
      "path": "3"
    },
    "946": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "947": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BB"
    },
    "950": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "951": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "953": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP1",
      "path": "3"
    },
    "954": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "REVERT",
      "path": "3"
    },
    "955": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "956": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "POP",
      "path": "3"
    },
    "957": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "GAS",
      "path": "3"
    },
    "958": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DELEGATECALL",
      "path": "3"
    },
    "959": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "960": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP1",
      "path": "3"
    },
    "961": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "962": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CF"
    },
    "965": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "966": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "967": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "969": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP1",
      "path": "3"
    },
    "970": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "971": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "972": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "974": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "REVERT",
      "path": "3"
    },
    "975": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "976": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "POP",
      "path": "3"
    },
    "977": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "POP",
      "path": "3"
    },
    "978": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "POP",
      "path": "3"
    },
    "979": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "POP",
      "path": "3"
    },
    "980": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "982": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "983": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "984": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "986": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "NOT",
      "path": "3"
    },
    "987": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "989": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP3",
      "path": "3"
    },
    "990": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "ADD",
      "path": "3"
    },
    "991": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "AND",
      "path": "3"
    },
    "992": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP3",
      "path": "3"
    },
    "993": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "ADD",
      "path": "3"
    },
    "994": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP1",
      "path": "3"
    },
    "995": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "997": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "998": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "POP",
      "path": "3"
    },
    "999": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1000": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "ADD",
      "path": "3"
    },
    "1001": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1002": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F3"
    },
    "1005": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1006": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1007": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x918"
    },
    "1010": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1544,
        1593
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1011": {
      "branch": 16,
      "fn": "MerkleVesting.initialize",
      "offset": [
        1544,
        1593
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1012": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43F"
    },
    "1015": {
      "branch": 16,
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1016": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1018": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1027": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1030": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1032": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1033": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "ADD",
      "path": "3"
    },
    "1034": {
      "op": "DUP2"
    },
    "1035": {
      "op": "SWAP1"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1039": {
      "op": "DUP3"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "op": "MSTORE"
    },
    "1042": {
      "op": "PUSH32",
      "value": "0x5468652070726F6F6620636F756C64206E6F742062652076657269666965642E"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1077": {
      "op": "DUP3"
    },
    "1078": {
      "op": "ADD"
    },
    "1079": {
      "op": "MSTORE"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1082": {
      "op": "ADD"
    },
    "1083": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C"
    },
    "1086": {
      "op": "JUMP"
    },
    "1087": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1536,
        1630
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "SUB"
    },
    "1096": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 4
    },
    "1097": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "AND",
      "path": "3"
    },
    "1098": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1100": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1101": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1102": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1103": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1651
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1105": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1107": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1108": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1110": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1111": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1664
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1112": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1671
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1113": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1671
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1116": {
      "op": "NOT"
    },
    "1117": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1671
      ],
      "op": "AND",
      "path": "3"
    },
    "1118": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1667,
        1671
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1120": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1671
      ],
      "op": "OR",
      "path": "3"
    },
    "1121": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1671
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1122": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1640,
        1671
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1123": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46C"
    },
    "1126": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1727,
        1736
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1127": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1717,
        1724
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1128": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1717,
        1736
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x93A"
    },
    "1131": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1717,
        1736
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1132": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1717,
        1736
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1133": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1703,
        1737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x476"
    },
    "1136": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1703,
        1737
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1137": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1703,
        1713
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1138": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1703,
        1737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x951"
    },
    "1141": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1703,
        1737
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1142": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1703,
        1737
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1143": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1681,
        1737
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1144": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1681,
        1737
      ],
      "op": "POP",
      "path": "3"
    },
    "1145": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x40"
    },
    "1147": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1148": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1149": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC0"
    },
    "1151": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1152": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1154": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1155": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1156": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1792,
        1802
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1157": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1158": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1159": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1161": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1162": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1816,
        1826
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1163": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1164": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1165": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1167": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1168": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1840,
        1849
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1169": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1170": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1171": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1173": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1174": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1863,
        1870
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1175": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1176": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1177": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1179": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1180": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1884,
        1898
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1181": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1182": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1183": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1185": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1186": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1912,
        1921
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1187": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1188": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1189": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1771,
        1931
      ],
      "op": "POP",
      "path": "3"
    },
    "1190": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "1192": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1194": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1756,
        1767
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1201": {
      "op": "SHL"
    },
    "1202": {
      "op": "SUB"
    },
    "1203": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "AND",
      "path": "3"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1210": {
      "op": "SHL"
    },
    "1211": {
      "op": "SUB"
    },
    "1212": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "AND",
      "path": "3"
    },
    "1213": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1214": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1215": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1217": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "ADD",
      "path": "3"
    },
    "1218": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1219": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1220": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1221": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1223": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "ADD",
      "path": "3"
    },
    "1224": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1226": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1768
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1227": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1229": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1230": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1231": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1232": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1233": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1235": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1236": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1237": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1239": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1240": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1241": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1242": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1243": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1245": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1246": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1247": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1249": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1250": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1251": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1252": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1253": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1255": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1256": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1257": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1259": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1260": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1261": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1262": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1263": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1265": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1266": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1267": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "1269": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1270": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1271": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1272": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1273": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1275": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1276": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1277": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "1279": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1280": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1281": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1282": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1283": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1285": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "ADD",
      "path": "3"
    },
    "1286": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1287": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1288": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "POP",
      "path": "3"
    },
    "1289": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1747,
        1931
      ],
      "op": "POP",
      "path": "3"
    },
    "1290": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1941,
        1962
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x512"
    },
    "1293": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1950,
        1961
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1294": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1941,
        1949
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51C"
    },
    "1297": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1941,
        1962
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1298": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1941,
        1962
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1299": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1361,
        1969
      ],
      "op": "POP",
      "path": "3"
    },
    "1300": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1361,
        1969
      ],
      "op": "POP",
      "path": "3"
    },
    "1301": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "POP",
      "path": "3"
    },
    "1302": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "POP",
      "path": "3"
    },
    "1303": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "POP",
      "path": "3"
    },
    "1304": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "POP",
      "path": "3"
    },
    "1305": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "POP",
      "path": "3"
    },
    "1306": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        1222,
        1969
      ],
      "op": "POP",
      "path": "3"
    },
    "1307": {
      "fn": "MerkleVesting.initialize",
      "jump": "o",
      "offset": [
        1222,
        1969
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1308": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        1975,
        2944
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 7
    },
    "1318": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "AND",
      "path": "3"
    },
    "1319": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1321": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1322": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1323": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1324": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2052
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1326": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1328": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1329": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1331": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1332": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1333": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1334": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1336": {
      "branch": 17,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2041,
        2065
      ],
      "op": "AND",
      "path": "3"
    },
    "1337": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x594"
    },
    "1340": {
      "branch": 17,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1341": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1343": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1344": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1352": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1355": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1357": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1358": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "ADD",
      "path": "3"
    },
    "1359": {
      "op": "MSTORE"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1364": {
      "op": "DUP3"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "op": "MSTORE"
    },
    "1367": {
      "op": "PUSH32",
      "value": "0x596F75206D75737420696E697469616C697A6520796F7572206163636F756E74"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1402": {
      "op": "DUP3"
    },
    "1403": {
      "op": "ADD"
    },
    "1404": {
      "op": "MSTORE"
    },
    "1405": {
      "op": "PUSH7",
      "value": "0x103334B939BA17"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "1415": {
      "op": "SHL"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1418": {
      "op": "DUP3"
    },
    "1419": {
      "op": "ADD"
    },
    "1420": {
      "op": "MSTORE"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1423": {
      "op": "ADD"
    },
    "1424": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C"
    },
    "1427": {
      "op": "JUMP"
    },
    "1428": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2033,
        2109
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1435": {
      "op": "SHL"
    },
    "1436": {
      "op": "SUB"
    },
    "1437": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2166
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1438": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2166
      ],
      "op": "AND",
      "path": "3"
    },
    "1439": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2119,
        2142
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1441": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2166
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1442": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2166
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1443": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2166
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1444": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2153
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "1446": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2166
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1448": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2166
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1449": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2166
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1451": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2166
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1452": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2145,
        2166
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1453": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2184,
        2204
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x1"
    },
    "1455": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2184,
        2204
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1456": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2184,
        2204
      ],
      "op": "ADD",
      "path": "3"
    },
    "1457": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2184,
        2204
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1458": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5FD"
    },
    "1461": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1462": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1464": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1465": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1473": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1476": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1478": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1479": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "ADD",
      "path": "3"
    },
    "1480": {
      "op": "MSTORE"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "ADD"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH32",
      "value": "0x4E6F20636F696E73206C65667420746F20776974686472617700000000000000"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1523": {
      "op": "DUP3"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "op": "MSTORE"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1528": {
      "op": "ADD"
    },
    "1529": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C"
    },
    "1532": {
      "op": "JUMP"
    },
    "1533": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2176,
        2239
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1534": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2249,
        2271
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1536": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2380,
        2387
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1537": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2380,
        2395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1539": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2380,
        2395
      ],
      "op": "ADD",
      "path": "3"
    },
    "1540": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2380,
        2395
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1541": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2361,
        2376
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "1542": {
      "branch": 18,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2361,
        2395
      ],
      "op": "LT",
      "path": "3"
    },
    "1543": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2357,
        2626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x615"
    },
    "1546": {
      "branch": 18,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2357,
        2626
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1547": {
      "op": "POP"
    },
    "1548": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2431,
        2451
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x1"
    },
    "1550": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2431,
        2451
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1551": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2431,
        2451
      ],
      "op": "ADD",
      "path": "3"
    },
    "1552": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2431,
        2451
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1553": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2357,
        2626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x636"
    },
    "1556": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2357,
        2626
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1557": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2357,
        2626
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1558": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2593,
        2615
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x4"
    },
    "1560": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2593,
        2615
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1561": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2593,
        2615
      ],
      "op": "ADD",
      "path": "3"
    },
    "1562": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2593,
        2615
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1563": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2563,
        2589
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1565": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2563,
        2589
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1566": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2563,
        2589
      ],
      "op": "ADD",
      "path": "3"
    },
    "1567": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2563,
        2589
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1568": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2545,
        2589
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x629"
    },
    "1571": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2545,
        2589
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1572": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2545,
        2560
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "1573": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2545,
        2589
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x93A"
    },
    "1576": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2545,
        2589
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1577": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2545,
        2589
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1578": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2544,
        2615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x633"
    },
    "1581": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2544,
        2615
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1582": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2544,
        2615
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1583": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2544,
        2615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x973"
    },
    "1586": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2544,
        2615
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1587": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2544,
        2615
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1588": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2524,
        2615
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1589": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2524,
        2615
      ],
      "op": "POP",
      "path": "3"
    },
    "1590": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2357,
        2626
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1591": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2685,
        2702
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 11
    },
    "1592": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2668
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1593": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2681
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1595": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2681
      ],
      "op": "ADD",
      "path": "3"
    },
    "1596": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2681
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1598": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1599": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1600": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1601": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64A"
    },
    "1604": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1605": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1606": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x93A"
    },
    "1609": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2661,
        2702
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1610": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1611": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1612": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1613": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2661,
        2702
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1614": {
      "op": "POP"
    },
    "1615": {
      "op": "POP"
    },
    "1616": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2741,
        2756
      ],
      "op": "TIMESTAMP",
      "path": "3",
      "statement": 12
    },
    "1617": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2712,
        2738
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1619": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2712,
        2738
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1620": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2712,
        2738
      ],
      "op": "ADD",
      "path": "3"
    },
    "1621": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2712,
        2756
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1622": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2809
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 13,
      "value": "0x2"
    },
    "1624": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2809
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1625": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1627": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1628": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1637": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1644": {
      "op": "SHL"
    },
    "1645": {
      "op": "SUB"
    },
    "1646": {
      "op": "DUP6"
    },
    "1647": {
      "op": "DUP2"
    },
    "1648": {
      "op": "AND"
    },
    "1649": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1651": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1652": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "ADD",
      "path": "3"
    },
    "1653": {
      "op": "MSTORE"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1656": {
      "op": "DUP3"
    },
    "1657": {
      "op": "ADD"
    },
    "1658": {
      "op": "DUP5"
    },
    "1659": {
      "op": "SWAP1"
    },
    "1660": {
      "op": "MSTORE"
    },
    "1661": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2809
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1662": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2809
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1663": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2809
      ],
      "op": "AND",
      "path": "3"
    },
    "1664": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2809
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1665": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2818
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "1670": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2818
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1673": {
      "op": "ADD"
    },
    "1674": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1676": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1678": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1679": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1680": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1681": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "SUB",
      "path": "3"
    },
    "1682": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1683": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1685": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1686": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1687": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "1688": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1689": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1690": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1691": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A3"
    },
    "1694": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1695": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1697": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1698": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1699": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1700": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "POP",
      "path": "3"
    },
    "1701": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "GAS",
      "path": "3"
    },
    "1702": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "CALL",
      "path": "3"
    },
    "1703": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1704": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1705": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1706": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B7"
    },
    "1709": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1710": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1711": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1713": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1714": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1715": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1716": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1718": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1719": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1720": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "POP",
      "path": "3"
    },
    "1721": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "POP",
      "path": "3"
    },
    "1722": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "POP",
      "path": "3"
    },
    "1723": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "POP",
      "path": "3"
    },
    "1724": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1726": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1727": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1728": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1730": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "NOT",
      "path": "3"
    },
    "1731": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1733": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1734": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "ADD",
      "path": "3"
    },
    "1735": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "AND",
      "path": "3"
    },
    "1736": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1737": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "ADD",
      "path": "3"
    },
    "1738": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1739": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1741": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1742": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "POP",
      "path": "3"
    },
    "1743": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1744": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "ADD",
      "path": "3"
    },
    "1745": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1746": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DB"
    },
    "1749": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1750": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1751": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x918"
    },
    "1754": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2804,
        2850
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1755": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2804,
        2850
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1756": {
      "op": "POP"
    },
    "1757": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2916,
        2936
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x1"
    },
    "1759": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2916,
        2936
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1760": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2916,
        2936
      ],
      "op": "ADD",
      "path": "3"
    },
    "1761": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2916,
        2936
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1762": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1764": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1765": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1772": {
      "op": "SHL"
    },
    "1773": {
      "op": "SUB"
    },
    "1774": {
      "op": "DUP7"
    },
    "1775": {
      "op": "AND"
    },
    "1776": {
      "op": "DUP2"
    },
    "1777": {
      "op": "MSTORE"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1780": {
      "op": "DUP2"
    },
    "1781": {
      "op": "ADD"
    },
    "1782": {
      "op": "DUP5"
    },
    "1783": {
      "op": "SWAP1"
    },
    "1784": {
      "op": "MSTORE"
    },
    "1785": {
      "op": "DUP1"
    },
    "1786": {
      "op": "DUP3"
    },
    "1787": {
      "op": "ADD"
    },
    "1788": {
      "op": "SWAP3"
    },
    "1789": {
      "op": "SWAP1"
    },
    "1790": {
      "op": "SWAP3"
    },
    "1791": {
      "op": "MSTORE"
    },
    "1792": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1793": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x840B2E72AC87C36BE7E2E3F300D63BFE13603652DF8705EDBE38C23031353168"
    },
    "1826": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1827": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1828": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1829": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "SUB",
      "path": "3"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1832": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "ADD",
      "path": "3"
    },
    "1833": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1834": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2865,
        2937
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1835": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2023,
        2944
      ],
      "op": "POP",
      "path": "3"
    },
    "1836": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2023,
        2944
      ],
      "op": "POP",
      "path": "3"
    },
    "1837": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        1975,
        2944
      ],
      "op": "POP",
      "path": "3"
    },
    "1838": {
      "fn": "MerkleVesting.withdraw",
      "jump": "o",
      "offset": [
        1975,
        2944
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1839": {
      "op": "JUMPDEST"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1844": {
      "op": "DUP3"
    },
    "1845": {
      "op": "DUP5"
    },
    "1846": {
      "op": "SUB"
    },
    "1847": {
      "op": "SLT"
    },
    "1848": {
      "op": "ISZERO"
    },
    "1849": {
      "op": "PUSH2",
      "value": "0x741"
    },
    "1852": {
      "op": "JUMPI"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1855": {
      "op": "DUP1"
    },
    "1856": {
      "op": "REVERT"
    },
    "1857": {
      "op": "JUMPDEST"
    },
    "1858": {
      "op": "POP"
    },
    "1859": {
      "op": "CALLDATALOAD"
    },
    "1860": {
      "op": "SWAP2"
    },
    "1861": {
      "op": "SWAP1"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "jump": "o",
      "op": "JUMP"
    },
    "1864": {
      "op": "JUMPDEST"
    },
    "1865": {
      "op": "DUP1"
    },
    "1866": {
      "op": "CALLDATALOAD"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1873": {
      "op": "SHL"
    },
    "1874": {
      "op": "SUB"
    },
    "1875": {
      "op": "DUP2"
    },
    "1876": {
      "op": "AND"
    },
    "1877": {
      "op": "DUP2"
    },
    "1878": {
      "op": "EQ"
    },
    "1879": {
      "op": "PUSH2",
      "value": "0x75F"
    },
    "1882": {
      "op": "JUMPI"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1885": {
      "op": "DUP1"
    },
    "1886": {
      "op": "REVERT"
    },
    "1887": {
      "op": "JUMPDEST"
    },
    "1888": {
      "op": "SWAP2"
    },
    "1889": {
      "op": "SWAP1"
    },
    "1890": {
      "op": "POP"
    },
    "1891": {
      "jump": "o",
      "op": "JUMP"
    },
    "1892": {
      "op": "JUMPDEST"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1897": {
      "op": "DUP3"
    },
    "1898": {
      "op": "DUP5"
    },
    "1899": {
      "op": "SUB"
    },
    "1900": {
      "op": "SLT"
    },
    "1901": {
      "op": "ISZERO"
    },
    "1902": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "1905": {
      "op": "JUMPI"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1908": {
      "op": "DUP1"
    },
    "1909": {
      "op": "REVERT"
    },
    "1910": {
      "op": "JUMPDEST"
    },
    "1911": {
      "op": "PUSH2",
      "value": "0x77F"
    },
    "1914": {
      "op": "DUP3"
    },
    "1915": {
      "op": "PUSH2",
      "value": "0x748"
    },
    "1918": {
      "jump": "i",
      "op": "JUMP"
    },
    "1919": {
      "op": "JUMPDEST"
    },
    "1920": {
      "op": "SWAP4"
    },
    "1921": {
      "op": "SWAP3"
    },
    "1922": {
      "op": "POP"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "op": "POP"
    },
    "1925": {
      "jump": "o",
      "op": "JUMP"
    },
    "1926": {
      "op": "JUMPDEST"
    },
    "1927": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1934": {
      "op": "SHL"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1937": {
      "op": "MSTORE"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1942": {
      "op": "MSTORE"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1947": {
      "op": "REVERT"
    },
    "1948": {
      "op": "JUMPDEST"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1951": {
      "op": "DUP1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1954": {
      "op": "DUP1"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1957": {
      "op": "DUP1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1960": {
      "op": "DUP8"
    },
    "1961": {
      "op": "DUP10"
    },
    "1962": {
      "op": "SUB"
    },
    "1963": {
      "op": "SLT"
    },
    "1964": {
      "op": "ISZERO"
    },
    "1965": {
      "op": "PUSH2",
      "value": "0x7B5"
    },
    "1968": {
      "op": "JUMPI"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1971": {
      "op": "DUP1"
    },
    "1972": {
      "op": "REVERT"
    },
    "1973": {
      "op": "JUMPDEST"
    },
    "1974": {
      "op": "DUP7"
    },
    "1975": {
      "op": "CALLDATALOAD"
    },
    "1976": {
      "op": "SWAP6"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1980": {
      "op": "PUSH2",
      "value": "0x7C6"
    },
    "1983": {
      "op": "DUP2"
    },
    "1984": {
      "op": "DUP10"
    },
    "1985": {
      "op": "ADD"
    },
    "1986": {
      "op": "PUSH2",
      "value": "0x748"
    },
    "1989": {
      "jump": "i",
      "op": "JUMP"
    },
    "1990": {
      "op": "JUMPDEST"
    },
    "1991": {
      "op": "SWAP6"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1995": {
      "op": "DUP9"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "op": "CALLDATALOAD"
    },
    "1998": {
      "op": "SWAP5"
    },
    "1999": {
      "op": "POP"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2002": {
      "op": "DUP9"
    },
    "2003": {
      "op": "ADD"
    },
    "2004": {
      "op": "CALLDATALOAD"
    },
    "2005": {
      "op": "SWAP4"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2009": {
      "op": "DUP9"
    },
    "2010": {
      "op": "ADD"
    },
    "2011": {
      "op": "CALLDATALOAD"
    },
    "2012": {
      "op": "SWAP3"
    },
    "2013": {
      "op": "POP"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2016": {
      "op": "DUP9"
    },
    "2017": {
      "op": "ADD"
    },
    "2018": {
      "op": "CALLDATALOAD"
    },
    "2019": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2028": {
      "op": "DUP1"
    },
    "2029": {
      "op": "DUP3"
    },
    "2030": {
      "op": "GT"
    },
    "2031": {
      "op": "ISZERO"
    },
    "2032": {
      "op": "PUSH2",
      "value": "0x7F8"
    },
    "2035": {
      "op": "JUMPI"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2038": {
      "op": "DUP1"
    },
    "2039": {
      "op": "REVERT"
    },
    "2040": {
      "op": "JUMPDEST"
    },
    "2041": {
      "op": "DUP2"
    },
    "2042": {
      "op": "DUP11"
    },
    "2043": {
      "op": "ADD"
    },
    "2044": {
      "op": "SWAP2"
    },
    "2045": {
      "op": "POP"
    },
    "2046": {
      "op": "DUP11"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2049": {
      "op": "DUP4"
    },
    "2050": {
      "op": "ADD"
    },
    "2051": {
      "op": "SLT"
    },
    "2052": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2055": {
      "op": "JUMPI"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2058": {
      "op": "DUP1"
    },
    "2059": {
      "op": "REVERT"
    },
    "2060": {
      "op": "JUMPDEST"
    },
    "2061": {
      "op": "DUP2"
    },
    "2062": {
      "op": "CALLDATALOAD"
    },
    "2063": {
      "op": "DUP2"
    },
    "2064": {
      "op": "DUP2"
    },
    "2065": {
      "op": "GT"
    },
    "2066": {
      "op": "ISZERO"
    },
    "2067": {
      "op": "PUSH2",
      "value": "0x81E"
    },
    "2070": {
      "op": "JUMPI"
    },
    "2071": {
      "op": "PUSH2",
      "value": "0x81E"
    },
    "2074": {
      "op": "PUSH2",
      "value": "0x786"
    },
    "2077": {
      "jump": "i",
      "op": "JUMP"
    },
    "2078": {
      "op": "JUMPDEST"
    },
    "2079": {
      "op": "DUP1"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2082": {
      "op": "SHL"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2085": {
      "op": "MLOAD"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2088": {
      "op": "NOT"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2091": {
      "op": "DUP4"
    },
    "2092": {
      "op": "ADD"
    },
    "2093": {
      "op": "AND"
    },
    "2094": {
      "op": "DUP2"
    },
    "2095": {
      "op": "ADD"
    },
    "2096": {
      "op": "DUP2"
    },
    "2097": {
      "op": "DUP2"
    },
    "2098": {
      "op": "LT"
    },
    "2099": {
      "op": "DUP6"
    },
    "2100": {
      "op": "DUP3"
    },
    "2101": {
      "op": "GT"
    },
    "2102": {
      "op": "OR"
    },
    "2103": {
      "op": "ISZERO"
    },
    "2104": {
      "op": "PUSH2",
      "value": "0x843"
    },
    "2107": {
      "op": "JUMPI"
    },
    "2108": {
      "op": "PUSH2",
      "value": "0x843"
    },
    "2111": {
      "op": "PUSH2",
      "value": "0x786"
    },
    "2114": {
      "jump": "i",
      "op": "JUMP"
    },
    "2115": {
      "op": "JUMPDEST"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2118": {
      "op": "MSTORE"
    },
    "2119": {
      "op": "SWAP2"
    },
    "2120": {
      "op": "DUP3"
    },
    "2121": {
      "op": "MSTORE"
    },
    "2122": {
      "op": "DUP5"
    },
    "2123": {
      "op": "DUP3"
    },
    "2124": {
      "op": "ADD"
    },
    "2125": {
      "op": "SWAP3"
    },
    "2126": {
      "op": "POP"
    },
    "2127": {
      "op": "DUP4"
    },
    "2128": {
      "op": "DUP2"
    },
    "2129": {
      "op": "ADD"
    },
    "2130": {
      "op": "DUP6"
    },
    "2131": {
      "op": "ADD"
    },
    "2132": {
      "op": "SWAP2"
    },
    "2133": {
      "op": "DUP14"
    },
    "2134": {
      "op": "DUP4"
    },
    "2135": {
      "op": "GT"
    },
    "2136": {
      "op": "ISZERO"
    },
    "2137": {
      "op": "PUSH2",
      "value": "0x861"
    },
    "2140": {
      "op": "JUMPI"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2143": {
      "op": "DUP1"
    },
    "2144": {
      "op": "REVERT"
    },
    "2145": {
      "op": "JUMPDEST"
    },
    "2146": {
      "op": "SWAP4"
    },
    "2147": {
      "op": "DUP6"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "op": "SWAP4"
    },
    "2150": {
      "op": "JUMPDEST"
    },
    "2151": {
      "op": "DUP3"
    },
    "2152": {
      "op": "DUP6"
    },
    "2153": {
      "op": "LT"
    },
    "2154": {
      "op": "ISZERO"
    },
    "2155": {
      "op": "PUSH2",
      "value": "0x87F"
    },
    "2158": {
      "op": "JUMPI"
    },
    "2159": {
      "op": "DUP5"
    },
    "2160": {
      "op": "CALLDATALOAD"
    },
    "2161": {
      "op": "DUP5"
    },
    "2162": {
      "op": "MSTORE"
    },
    "2163": {
      "op": "SWAP4"
    },
    "2164": {
      "op": "DUP6"
    },
    "2165": {
      "op": "ADD"
    },
    "2166": {
      "op": "SWAP4"
    },
    "2167": {
      "op": "SWAP3"
    },
    "2168": {
      "op": "DUP6"
    },
    "2169": {
      "op": "ADD"
    },
    "2170": {
      "op": "SWAP3"
    },
    "2171": {
      "op": "PUSH2",
      "value": "0x866"
    },
    "2174": {
      "op": "JUMP"
    },
    "2175": {
      "op": "JUMPDEST"
    },
    "2176": {
      "op": "DUP1"
    },
    "2177": {
      "op": "SWAP7"
    },
    "2178": {
      "op": "POP"
    },
    "2179": {
      "op": "POP"
    },
    "2180": {
      "op": "POP"
    },
    "2181": {
      "op": "POP"
    },
    "2182": {
      "op": "POP"
    },
    "2183": {
      "op": "POP"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "op": "SWAP3"
    },
    "2186": {
      "op": "SWAP6"
    },
    "2187": {
      "op": "POP"
    },
    "2188": {
      "op": "SWAP3"
    },
    "2189": {
      "op": "SWAP6"
    },
    "2190": {
      "op": "POP"
    },
    "2191": {
      "op": "SWAP3"
    },
    "2192": {
      "op": "SWAP6"
    },
    "2193": {
      "jump": "o",
      "op": "JUMP"
    },
    "2194": {
      "op": "JUMPDEST"
    },
    "2195": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2202": {
      "op": "SHL"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2205": {
      "op": "MSTORE"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2210": {
      "op": "MSTORE"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2215": {
      "op": "REVERT"
    },
    "2216": {
      "op": "JUMPDEST"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2221": {
      "op": "NOT"
    },
    "2222": {
      "op": "DUP3"
    },
    "2223": {
      "op": "EQ"
    },
    "2224": {
      "op": "ISZERO"
    },
    "2225": {
      "op": "PUSH2",
      "value": "0x8BC"
    },
    "2228": {
      "op": "JUMPI"
    },
    "2229": {
      "op": "PUSH2",
      "value": "0x8BC"
    },
    "2232": {
      "op": "PUSH2",
      "value": "0x892"
    },
    "2235": {
      "jump": "i",
      "op": "JUMP"
    },
    "2236": {
      "op": "JUMPDEST"
    },
    "2237": {
      "op": "POP"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2240": {
      "op": "ADD"
    },
    "2241": {
      "op": "SWAP1"
    },
    "2242": {
      "jump": "o",
      "op": "JUMP"
    },
    "2243": {
      "op": "JUMPDEST"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2248": {
      "op": "DUP3"
    },
    "2249": {
      "op": "ADD"
    },
    "2250": {
      "op": "DUP6"
    },
    "2251": {
      "op": "DUP4"
    },
    "2252": {
      "op": "MSTORE"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2255": {
      "op": "DUP6"
    },
    "2256": {
      "op": "DUP2"
    },
    "2257": {
      "op": "DUP6"
    },
    "2258": {
      "op": "ADD"
    },
    "2259": {
      "op": "MSTORE"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2264": {
      "op": "DUP6"
    },
    "2265": {
      "op": "ADD"
    },
    "2266": {
      "op": "MSTORE"
    },
    "2267": {
      "op": "DUP2"
    },
    "2268": {
      "op": "DUP6"
    },
    "2269": {
      "op": "MLOAD"
    },
    "2270": {
      "op": "DUP1"
    },
    "2271": {
      "op": "DUP5"
    },
    "2272": {
      "op": "MSTORE"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2275": {
      "op": "DUP7"
    },
    "2276": {
      "op": "ADD"
    },
    "2277": {
      "op": "SWAP2"
    },
    "2278": {
      "op": "POP"
    },
    "2279": {
      "op": "DUP3"
    },
    "2280": {
      "op": "DUP8"
    },
    "2281": {
      "op": "ADD"
    },
    "2282": {
      "op": "SWAP4"
    },
    "2283": {
      "op": "POP"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2286": {
      "op": "JUMPDEST"
    },
    "2287": {
      "op": "DUP2"
    },
    "2288": {
      "op": "DUP2"
    },
    "2289": {
      "op": "LT"
    },
    "2290": {
      "op": "ISZERO"
    },
    "2291": {
      "op": "PUSH2",
      "value": "0x90A"
    },
    "2294": {
      "op": "JUMPI"
    },
    "2295": {
      "op": "DUP5"
    },
    "2296": {
      "op": "MLOAD"
    },
    "2297": {
      "op": "DUP4"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "SWAP4"
    },
    "2300": {
      "op": "DUP4"
    },
    "2301": {
      "op": "ADD"
    },
    "2302": {
      "op": "SWAP4"
    },
    "2303": {
      "op": "SWAP2"
    },
    "2304": {
      "op": "DUP4"
    },
    "2305": {
      "op": "ADD"
    },
    "2306": {
      "op": "SWAP2"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "ADD"
    },
    "2310": {
      "op": "PUSH2",
      "value": "0x8EE"
    },
    "2313": {
      "op": "JUMP"
    },
    "2314": {
      "op": "JUMPDEST"
    },
    "2315": {
      "op": "POP"
    },
    "2316": {
      "op": "SWAP1"
    },
    "2317": {
      "op": "SWAP9"
    },
    "2318": {
      "op": "SWAP8"
    },
    "2319": {
      "op": "POP"
    },
    "2320": {
      "op": "POP"
    },
    "2321": {
      "op": "POP"
    },
    "2322": {
      "op": "POP"
    },
    "2323": {
      "op": "POP"
    },
    "2324": {
      "op": "POP"
    },
    "2325": {
      "op": "POP"
    },
    "2326": {
      "op": "POP"
    },
    "2327": {
      "jump": "o",
      "op": "JUMP"
    },
    "2328": {
      "op": "JUMPDEST"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2333": {
      "op": "DUP3"
    },
    "2334": {
      "op": "DUP5"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "op": "SLT"
    },
    "2337": {
      "op": "ISZERO"
    },
    "2338": {
      "op": "PUSH2",
      "value": "0x92A"
    },
    "2341": {
      "op": "JUMPI"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2344": {
      "op": "DUP1"
    },
    "2345": {
      "op": "REVERT"
    },
    "2346": {
      "op": "JUMPDEST"
    },
    "2347": {
      "op": "DUP2"
    },
    "2348": {
      "op": "MLOAD"
    },
    "2349": {
      "op": "DUP1"
    },
    "2350": {
      "op": "ISZERO"
    },
    "2351": {
      "op": "ISZERO"
    },
    "2352": {
      "op": "DUP2"
    },
    "2353": {
      "op": "EQ"
    },
    "2354": {
      "op": "PUSH2",
      "value": "0x77F"
    },
    "2357": {
      "op": "JUMPI"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2360": {
      "op": "DUP1"
    },
    "2361": {
      "op": "REVERT"
    },
    "2362": {
      "op": "JUMPDEST"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2365": {
      "op": "DUP3"
    },
    "2366": {
      "op": "DUP3"
    },
    "2367": {
      "op": "LT"
    },
    "2368": {
      "op": "ISZERO"
    },
    "2369": {
      "op": "PUSH2",
      "value": "0x94C"
    },
    "2372": {
      "op": "JUMPI"
    },
    "2373": {
      "op": "PUSH2",
      "value": "0x94C"
    },
    "2376": {
      "op": "PUSH2",
      "value": "0x892"
    },
    "2379": {
      "jump": "i",
      "op": "JUMP"
    },
    "2380": {
      "op": "JUMPDEST"
    },
    "2381": {
      "op": "POP"
    },
    "2382": {
      "op": "SUB"
    },
    "2383": {
      "op": "SWAP1"
    },
    "2384": {
      "jump": "o",
      "op": "JUMP"
    },
    "2385": {
      "op": "JUMPDEST"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2388": {
      "op": "DUP3"
    },
    "2389": {
      "op": "PUSH2",
      "value": "0x96E"
    },
    "2392": {
      "op": "JUMPI"
    },
    "2393": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2403": {
      "op": "MSTORE"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2408": {
      "op": "MSTORE"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2413": {
      "op": "REVERT"
    },
    "2414": {
      "op": "JUMPDEST"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "op": "DIV"
    },
    "2417": {
      "op": "SWAP1"
    },
    "2418": {
      "jump": "o",
      "op": "JUMP"
    },
    "2419": {
      "op": "JUMPDEST"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2422": {
      "op": "DUP2"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2425": {
      "op": "NOT"
    },
    "2426": {
      "op": "DIV"
    },
    "2427": {
      "op": "DUP4"
    },
    "2428": {
      "op": "GT"
    },
    "2429": {
      "op": "DUP3"
    },
    "2430": {
      "op": "ISZERO"
    },
    "2431": {
      "op": "ISZERO"
    },
    "2432": {
      "op": "AND"
    },
    "2433": {
      "op": "ISZERO"
    },
    "2434": {
      "op": "PUSH2",
      "value": "0x98D"
    },
    "2437": {
      "op": "JUMPI"
    },
    "2438": {
      "op": "PUSH2",
      "value": "0x98D"
    },
    "2441": {
      "op": "PUSH2",
      "value": "0x892"
    },
    "2444": {
      "jump": "i",
      "op": "JUMP"
    },
    "2445": {
      "op": "JUMPDEST"
    },
    "2446": {
      "op": "POP"
    },
    "2447": {
      "op": "MUL"
    },
    "2448": {
      "op": "SWAP1"
    },
    "2449": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "51a6fa45abee96a7cb488e8886e98e73789479eb",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\n\npragma solidity 0.8.9;\n\nimport \"../interfaces/IERC20.sol\";\nimport \"./MerkleLib.sol\";\n\ncontract MerkleVesting {\n    using MerkleLib for bytes32;\n\n    mapping (uint => bytes32) public merkleRoots;\n    uint public numRoots;\n    IERC20 public token;\n\n    uint public initialBalance;\n    address public management;\n\n    struct Tranche {\n        uint totalCoins;\n        uint currentCoins;\n        uint startTime;\n        uint endTime;\n        uint coinsPerSecond;\n        uint lastWithdrawalTime;\n    }\n\n    mapping (address => bool) public initialized;\n    mapping (address => Tranche) public tranches;\n\n    event WithdrawalOccurred(address destination, uint numTokens, uint tokensLeft);\n    event MerkleRootAdded(uint indexed index, bytes32 newRoot);\n\n    modifier managementOnly() {\n        require (msg.sender == management, 'Only management may call this');\n        _;\n    }\n\n    constructor(IERC20 _token, bytes32 _root) {\n        token = _token;\n        merkleRoots[1] = _root;\n        numRoots = 1;\n    }\n\n    function addMerkleRoot(bytes32 newRoot) public managementOnly {\n        merkleRoots[++numRoots] = newRoot;\n        emit MerkleRootAdded(numRoots, newRoot);\n    }\n\n    function initialize(uint merkleIndex, address destination, uint totalCoins, uint startTime, uint endTime, bytes32[] memory proof) external {\n        require(!initialized[destination], \"Already initialized\");\n        bytes32 leaf = keccak256(abi.encodePacked(destination, totalCoins, startTime, endTime));\n\n        require(merkleRoots[merkleIndex].verifyProof(leaf, proof), \"The proof could not be verified.\");\n        initialized[destination] = true;\n        uint coinsPerSecond = totalCoins / (endTime - startTime);\n        tranches[destination] = Tranche(\n            totalCoins,\n            totalCoins,\n            startTime,\n            endTime,\n            coinsPerSecond,\n            startTime\n        );\n        withdraw(destination);\n    }\n\n    function withdraw(address destination) internal {\n        require(initialized[destination], \"You must initialize your account first.\");\n        Tranche storage tranche = tranches[destination];\n        require(tranche.currentCoins >  0, 'No coins left to withdraw');\n        uint currentWithdrawal = 0;\n\n        // if after vesting period ends, give them the remaining coins\n        if (block.timestamp >= tranche.endTime) {\n            currentWithdrawal = tranche.currentCoins;\n        } else {\n            // compute allowed withdrawal\n            currentWithdrawal = (block.timestamp - tranche.lastWithdrawalTime) * tranche.coinsPerSecond;\n        }\n\n        // update struct\n        tranche.currentCoins -= currentWithdrawal;\n        tranche.lastWithdrawalTime = block.timestamp;\n\n        // transfer the tokens, brah\n        token.transfer(destination, currentWithdrawal);\n        emit WithdrawalOccurred(destination, currentWithdrawal, tranche.currentCoins);\n    }\n\n}",
  "sourceMap": "128:2819:3:-:0;;;922:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;974:5;:14;;-1:-1:-1;;;;;;974:14:3;-1:-1:-1;;;;;974:14:3;;;;;;;;;;;-1:-1:-1;;998:14:3;;;;;;:22;;;;1030:12;;128:2819;;14:366:5;108:6;116;169:2;157:9;148:7;144:23;140:32;137:52;;;185:1;182;175:12;137:52;211:16;;-1:-1:-1;;;;;256:31:5;;246:42;;236:70;;302:1;299;292:12;236:70;370:2;355:18;;;;349:25;325:5;;349:25;;-1:-1:-1;;;14:366:5:o;:::-;128:2819:3;;;;;;",
  "sourcePath": "contracts/MerkleVesting.sol",
  "type": "contract"
}