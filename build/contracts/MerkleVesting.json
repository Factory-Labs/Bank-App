{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "trancheIndex",
          "type": "uint256"
        }
      ],
      "name": "AccountEmpty",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "trancheIndex",
          "type": "uint256"
        }
      ],
      "name": "AccountStillLocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "leaf",
          "type": "bytes32"
        }
      ],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "leaf",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "BadProof",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        }
      ],
      "name": "BadTreeIndex",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "trancheIndex",
          "type": "uint256"
        }
      ],
      "name": "UninitializedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        }
      ],
      "name": "MerkleRootAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "trancheIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "TrancheInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensLeft",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalOccurred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "name": "addMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "trancheIndex",
          "type": "uint256"
        }
      ],
      "name": "getTranche",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockPeriodEndTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "merkleTrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "rootHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numTranchesInitialized",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numTrees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "trancheIndex",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "4": "contracts/MerkleLib.sol",
    "6": "contracts/MerkleVesting.sol",
    "7": "interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/MerkleVesting.sol",
    "exportedSymbols": {
      "IERC20": [
        2837
      ],
      "MerkleLib": [
        1370
      ],
      "MerkleVesting": [
        2759
      ]
    },
    "id": 2760,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2152,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:6"
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 2153,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2760,
        "sourceUnit": 2838,
        "src": "67:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/MerkleLib.sol",
        "file": "./MerkleLib.sol",
        "id": 2154,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2760,
        "sourceUnit": 1371,
        "src": "102:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MerkleVesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2155,
          "nodeType": "StructuredDocumentation",
          "src": "129:429:6",
          "text": "@title A factory pattern for merkle-vesting, that is, a time release schedule for tokens, using merkle proofs to scale\n @author metapriest, adrian.wachel, marek.babiarz, radoslaw.gorecki\n @notice This contract is permissionless and public facing. Any fees must be included in the data of the merkle tree.\n @dev The contract cannot introspect into the contents of the merkle tree, except when provided a merkle proof"
        },
        "fullyImplemented": true,
        "id": 2759,
        "linearizedBaseContracts": [
          2759
        ],
        "name": "MerkleVesting",
        "nameLocation": "567:13:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2158,
            "libraryName": {
              "id": 2156,
              "name": "MerkleLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1370,
              "src": "593:9:6"
            },
            "nodeType": "UsingForDirective",
            "src": "587:28:6",
            "typeName": {
              "id": 2157,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "390b7c66",
            "id": 2160,
            "mutability": "mutable",
            "name": "numTrees",
            "nameLocation": "689:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 2759,
            "src": "677:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2159,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "677:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MerkleVesting.Tranche",
            "id": 2177,
            "members": [
              {
                "constant": false,
                "id": 2162,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "813:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 2177,
                "src": "805:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2161,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "805:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2164,
                "mutability": "mutable",
                "name": "totalCoins",
                "nameLocation": "837:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 2177,
                "src": "832:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2163,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "832:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2166,
                "mutability": "mutable",
                "name": "currentCoins",
                "nameLocation": "938:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 2177,
                "src": "933:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2165,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "933:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2168,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "1038:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 2177,
                "src": "1033:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2167,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1033:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2170,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "1129:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 2177,
                "src": "1124:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2169,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1124:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2172,
                "mutability": "mutable",
                "name": "coinsPerSecond",
                "nameLocation": "1210:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 2177,
                "src": "1205:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2171,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1205:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2174,
                "mutability": "mutable",
                "name": "lastWithdrawalTime",
                "nameLocation": "1329:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 2177,
                "src": "1324:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2173,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1324:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2176,
                "mutability": "mutable",
                "name": "lockPeriodEndTime",
                "nameLocation": "1433:17:6",
                "nodeType": "VariableDeclaration",
                "scope": 2177,
                "src": "1428:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2175,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1428:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Tranche",
            "nameLocation": "787:7:6",
            "nodeType": "StructDefinition",
            "scope": 2759,
            "src": "780:727:6",
            "visibility": "public"
          },
          {
            "canonicalName": "MerkleVesting.MerkleTree",
            "id": 2197,
            "members": [
              {
                "constant": false,
                "id": 2179,
                "mutability": "mutable",
                "name": "rootHash",
                "nameLocation": "1621:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 2197,
                "src": "1613:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2178,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1613:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2181,
                "mutability": "mutable",
                "name": "ipfsHash",
                "nameLocation": "1748:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 2197,
                "src": "1740:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2180,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1740:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2183,
                "mutability": "mutable",
                "name": "tokenAddress",
                "nameLocation": "1863:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 2197,
                "src": "1855:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2182,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1855:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2185,
                "mutability": "mutable",
                "name": "tokenBalance",
                "nameLocation": "1949:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 2197,
                "src": "1944:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2184,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1944:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2187,
                "mutability": "mutable",
                "name": "numTranchesInitialized",
                "nameLocation": "2071:22:6",
                "nodeType": "VariableDeclaration",
                "scope": 2197,
                "src": "2066:27:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2186,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2066:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2192,
                "mutability": "mutable",
                "name": "tranches",
                "nameLocation": "2129:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 2197,
                "src": "2103:34:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$2177_storage_$",
                  "typeString": "mapping(uint256 => struct MerkleVesting.Tranche)"
                },
                "typeName": {
                  "id": 2191,
                  "keyType": {
                    "id": 2188,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2103:25:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$2177_storage_$",
                    "typeString": "mapping(uint256 => struct MerkleVesting.Tranche)"
                  },
                  "valueType": {
                    "id": 2190,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2189,
                      "name": "Tranche",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2177,
                      "src": "2120:7:6"
                    },
                    "referencedDeclaration": 2177,
                    "src": "2120:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                      "typeString": "struct MerkleVesting.Tranche"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2196,
                "mutability": "mutable",
                "name": "initialized",
                "nameLocation": "2173:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 2197,
                "src": "2147:37:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "typeName": {
                  "id": 2195,
                  "keyType": {
                    "id": 2193,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2147:25:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "valueType": {
                    "id": 2194,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MerkleTree",
            "nameLocation": "1592:10:6",
            "nodeType": "StructDefinition",
            "scope": 2759,
            "src": "1585:606:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "85d88cb1",
            "id": 2202,
            "mutability": "mutable",
            "name": "merkleTrees",
            "nameLocation": "2296:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 2759,
            "src": "2260:47:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$2197_storage_$",
              "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree)"
            },
            "typeName": {
              "id": 2201,
              "keyType": {
                "id": 2198,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2269:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2260:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$2197_storage_$",
                "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree)"
              },
              "valueType": {
                "id": 2200,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2199,
                  "name": "MerkleTree",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2197,
                  "src": "2277:10:6"
                },
                "referencedDeclaration": 2197,
                "src": "2277:10:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                  "typeString": "struct MerkleVesting.MerkleTree"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2212,
            "name": "WithdrawalOccurred",
            "nameLocation": "2360:18:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2204,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2392:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2212,
                  "src": "2379:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2379:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2206,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "2419:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2212,
                  "src": "2403:27:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2208,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numTokens",
                  "nameLocation": "2437:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2212,
                  "src": "2432:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2207,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2432:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2210,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensLeft",
                  "nameLocation": "2453:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2212,
                  "src": "2448:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2209,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2448:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2378:86:6"
            },
            "src": "2354:111:6"
          },
          {
            "anonymous": false,
            "id": 2222,
            "name": "MerkleRootAdded",
            "nameLocation": "2511:15:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2214,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2540:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2222,
                  "src": "2527:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2213,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2216,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2567:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2222,
                  "src": "2551:28:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2218,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "2589:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2222,
                  "src": "2581:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2217,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2220,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "2606:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2222,
                  "src": "2598:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2526:89:6"
            },
            "src": "2505:111:6"
          },
          {
            "anonymous": false,
            "id": 2230,
            "name": "TokensDeposited",
            "nameLocation": "2666:15:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2224,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2695:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "2682:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2223,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2226,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2722:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "2706:28:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2706:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2228,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2741:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "2736:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2227,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2736:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2681:67:6"
            },
            "src": "2660:89:6"
          },
          {
            "anonymous": false,
            "id": 2238,
            "name": "TrancheInitialized",
            "nameLocation": "2761:18:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2232,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2793:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2238,
                  "src": "2780:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2780:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2234,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "trancheIndex",
                  "nameLocation": "2817:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2238,
                  "src": "2804:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2236,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2847:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2238,
                  "src": "2831:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2779:78:6"
            },
            "src": "2755:103:6"
          },
          {
            "id": 2242,
            "name": "BadTreeIndex",
            "nameLocation": "2870:12:6",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2240,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2888:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2242,
                  "src": "2883:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2239,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2883:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2882:16:6"
            },
            "src": "2864:35:6"
          },
          {
            "id": 2248,
            "name": "AlreadyInitialized",
            "nameLocation": "2910:18:6",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2244,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2934:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "2929:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2243,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2929:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2246,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "2953:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "2945:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2245,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2928:30:6"
            },
            "src": "2904:55:6"
          },
          {
            "id": 2257,
            "name": "BadProof",
            "nameLocation": "2970:8:6",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2250,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2984:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "2979:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2249,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2979:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2252,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "3003:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "2995:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2251,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2255,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "3019:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "3009:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2253,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3009:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2254,
                    "nodeType": "ArrayTypeName",
                    "src": "3009:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2978:47:6"
            },
            "src": "2964:62:6"
          },
          {
            "id": 2263,
            "name": "UninitializedAccount",
            "nameLocation": "3037:20:6",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2259,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "3063:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2263,
                  "src": "3058:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2258,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3058:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2261,
                  "mutability": "mutable",
                  "name": "trancheIndex",
                  "nameLocation": "3079:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2263,
                  "src": "3074:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2260,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3074:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3057:35:6"
            },
            "src": "3031:62:6"
          },
          {
            "id": 2269,
            "name": "AccountStillLocked",
            "nameLocation": "3104:18:6",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2265,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "3128:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2269,
                  "src": "3123:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3123:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2267,
                  "mutability": "mutable",
                  "name": "trancheIndex",
                  "nameLocation": "3144:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2269,
                  "src": "3139:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2266,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3122:35:6"
            },
            "src": "3098:60:6"
          },
          {
            "id": 2275,
            "name": "AccountEmpty",
            "nameLocation": "3169:12:6",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2271,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "3187:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "3182:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3182:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2273,
                  "mutability": "mutable",
                  "name": "trancheIndex",
                  "nameLocation": "3203:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2275,
                  "src": "3198:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2272,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3198:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3181:35:6"
            },
            "src": "3163:54:6"
          },
          {
            "body": {
              "id": 2325,
              "nodeType": "Block",
              "src": "4068:381:6",
              "statements": [
                {
                  "assignments": [
                    2289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2289,
                      "mutability": "mutable",
                      "name": "tree",
                      "nameLocation": "4153:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2325,
                      "src": "4134:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree"
                      },
                      "typeName": {
                        "id": 2288,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2287,
                          "name": "MerkleTree",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2197,
                          "src": "4134:10:6"
                        },
                        "referencedDeclaration": 2197,
                        "src": "4134:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2294,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2290,
                      "name": "merkleTrees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2202,
                      "src": "4160:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$2197_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                      }
                    },
                    "id": 2293,
                    "indexExpression": {
                      "id": 2292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "4172:10:6",
                      "subExpression": {
                        "id": 2291,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2160,
                        "src": "4174:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4160:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$2197_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4134:49:6"
                },
                {
                  "expression": {
                    "id": 2299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2295,
                        "name": "tree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2289,
                        "src": "4193:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 2297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rootHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2179,
                      "src": "4193:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2298,
                      "name": "newRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2278,
                      "src": "4209:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4193:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2300,
                  "nodeType": "ExpressionStatement",
                  "src": "4193:23:6"
                },
                {
                  "expression": {
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2301,
                        "name": "tree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2289,
                        "src": "4226:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 2303,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ipfsHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2181,
                      "src": "4226:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2304,
                      "name": "ipfsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2280,
                      "src": "4242:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4226:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2306,
                  "nodeType": "ExpressionStatement",
                  "src": "4226:24:6"
                },
                {
                  "expression": {
                    "id": 2311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2307,
                        "name": "tree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2289,
                        "src": "4260:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 2309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2183,
                      "src": "4260:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2310,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2282,
                      "src": "4280:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4260:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2312,
                  "nodeType": "ExpressionStatement",
                  "src": "4260:32:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2314,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2160,
                        "src": "4346:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2315,
                        "name": "tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2284,
                        "src": "4356:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2313,
                      "name": "depositTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2414,
                      "src": "4332:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4332:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "4332:37:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2319,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2160,
                        "src": "4400:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2320,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "4410:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2321,
                        "name": "newRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2278,
                        "src": "4424:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2322,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2280,
                        "src": "4433:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2318,
                      "name": "MerkleRootAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2222,
                      "src": "4384:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,bytes32,bytes32)"
                      }
                    },
                    "id": 2323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4384:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2324,
                  "nodeType": "EmitStatement",
                  "src": "4379:63:6"
                }
              ]
            },
            "documentation": {
              "id": 2276,
              "nodeType": "StructuredDocumentation",
              "src": "3223:734:6",
              "text": "@notice Add a new merkle tree to the contract, creating a new merkle-vesting-schedule\n @dev Anyone may call this function, therefore we must make sure trees cannot affect each other\n @dev Root hash should be built from (destination, totalCoins, startTime, endTime, lockPeriodEndTime)\n @param newRoot root hash of merkle tree representing vesting schedules\n @param ipfsHash the ipfs hash of the entire dataset, used for redundance so that creator can ensure merkleproof are always computable\n @param tokenAddress the address of the token contract that is being distributed\n @param tokenBalance the amount of tokens user wishes to use to fund the airdrop, note trees can be under/overfunded"
            },
            "functionSelector": "9e18a054",
            "id": 2326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMerkleRoot",
            "nameLocation": "3971:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2278,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "3993:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2326,
                  "src": "3985:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2277,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3985:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2280,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "4010:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2326,
                  "src": "4002:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2279,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4002:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2282,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "4028:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2326,
                  "src": "4020:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4020:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2284,
                  "mutability": "mutable",
                  "name": "tokenBalance",
                  "nameLocation": "4047:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2326,
                  "src": "4042:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2283,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4042:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3984:76:6"
            },
            "returnParameters": {
              "id": 2286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4068:0:6"
            },
            "scope": 2759,
            "src": "3962:487:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2413,
              "nodeType": "Block",
              "src": "5003:1133:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2334,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2329,
                        "src": "5017:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5030:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5017:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2337,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2329,
                        "src": "5035:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 2338,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2160,
                        "src": "5047:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5035:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5017:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2346,
                  "nodeType": "IfStatement",
                  "src": "5013:99:6",
                  "trueBody": {
                    "id": 2345,
                    "nodeType": "Block",
                    "src": "5057:55:6",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 2342,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2329,
                              "src": "5091:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2341,
                            "name": "BadTreeIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2242,
                            "src": "5078:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 2343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5078:23:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2344,
                        "nodeType": "RevertStatement",
                        "src": "5071:30:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2349,
                      "mutability": "mutable",
                      "name": "merkleTree",
                      "nameLocation": "5181:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2413,
                      "src": "5162:29:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree"
                      },
                      "typeName": {
                        "id": 2348,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2347,
                          "name": "MerkleTree",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2197,
                          "src": "5162:10:6"
                        },
                        "referencedDeclaration": 2197,
                        "src": "5162:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2353,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2350,
                      "name": "merkleTrees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2202,
                      "src": "5194:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$2197_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                      }
                    },
                    "id": 2352,
                    "indexExpression": {
                      "id": 2351,
                      "name": "treeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2329,
                      "src": "5206:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5194:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$2197_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5162:54:6"
                },
                {
                  "assignments": [
                    2356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2356,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "5234:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2413,
                      "src": "5227:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2837",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2355,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2354,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2837,
                          "src": "5227:6:6"
                        },
                        "referencedDeclaration": 2837,
                        "src": "5227:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2837",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2361,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2358,
                          "name": "merkleTree",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2349,
                          "src": "5249:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                            "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                          }
                        },
                        "id": 2359,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2183,
                        "src": "5249:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2357,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2837,
                      "src": "5242:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2837_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5242:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2837",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5227:46:6"
                },
                {
                  "assignments": [
                    2363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2363,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "5288:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2413,
                      "src": "5283:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2362,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5283:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2371,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2368,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5328:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleVesting_$2759",
                              "typeString": "contract MerkleVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleVesting_$2759",
                              "typeString": "contract MerkleVesting"
                            }
                          ],
                          "id": 2367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5320:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2366,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5320:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5320:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2364,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2356,
                        "src": "5304:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2837",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2776,
                      "src": "5304:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5304:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5283:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2375,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5708:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5708:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2379,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5728:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleVesting_$2759",
                              "typeString": "contract MerkleVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleVesting_$2759",
                              "typeString": "contract MerkleVesting"
                            }
                          ],
                          "id": 2378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5720:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2377,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5720:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5720:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2381,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2331,
                        "src": "5735:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2372,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2356,
                        "src": "5689:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2837",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2818,
                      "src": "5689:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5689:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2383,
                  "nodeType": "ExpressionStatement",
                  "src": "5689:52:6"
                },
                {
                  "assignments": [
                    2385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2385,
                      "mutability": "mutable",
                      "name": "balanceAfter",
                      "nameLocation": "5757:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2413,
                      "src": "5752:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2384,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5752:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2393,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2390,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5796:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleVesting_$2759",
                              "typeString": "contract MerkleVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleVesting_$2759",
                              "typeString": "contract MerkleVesting"
                            }
                          ],
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5788:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5788:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5788:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2386,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2356,
                        "src": "5772:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2837",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2776,
                      "src": "5772:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5772:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5752:50:6"
                },
                {
                  "assignments": [
                    2395
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2395,
                      "mutability": "mutable",
                      "name": "diff",
                      "nameLocation": "5919:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2413,
                      "src": "5914:9:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2394,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5914:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2399,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2396,
                      "name": "balanceAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2385,
                      "src": "5926:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2397,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2363,
                      "src": "5941:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5926:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5914:40:6"
                },
                {
                  "expression": {
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2400,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2349,
                        "src": "6026:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 2402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2185,
                      "src": "6026:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2403,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2395,
                      "src": "6053:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6026:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2405,
                  "nodeType": "ExpressionStatement",
                  "src": "6026:31:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2407,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2329,
                        "src": "6088:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2408,
                          "name": "merkleTree",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2349,
                          "src": "6099:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                            "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                          }
                        },
                        "id": 2409,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2183,
                        "src": "6099:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2410,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2395,
                        "src": "6124:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2406,
                      "name": "TokensDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2230,
                      "src": "6072:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 2411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6072:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2412,
                  "nodeType": "EmitStatement",
                  "src": "6067:62:6"
                }
              ]
            },
            "documentation": {
              "id": 2327,
              "nodeType": "StructuredDocumentation",
              "src": "4455:485:6",
              "text": "@notice Add funds to an existing merkle-vesting-schedule\n @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs\n @param treeIndex index into array-like map of merkleTrees\n @param value the amount of tokens user wishes to use to fund the airdrop, note trees can be underfunded"
            },
            "functionSelector": "f16ad51e",
            "id": 2414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokens",
            "nameLocation": "4954:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2329,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "4973:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "4968:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4968:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2331,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4989:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "4984:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2330,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4984:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4967:28:6"
            },
            "returnParameters": {
              "id": 2333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5003:0:6"
            },
            "scope": 2759,
            "src": "4945:1191:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2553,
              "nodeType": "Block",
              "src": "7426:1983:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2435,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "7440:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7453:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7440:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2438,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "7458:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 2439,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2160,
                        "src": "7470:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7458:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7440:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2447,
                  "nodeType": "IfStatement",
                  "src": "7436:99:6",
                  "trueBody": {
                    "id": 2446,
                    "nodeType": "Block",
                    "src": "7480:55:6",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 2443,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2417,
                              "src": "7514:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2442,
                            "name": "BadTreeIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2242,
                            "src": "7501:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 2444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7501:23:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2445,
                        "nodeType": "RevertStatement",
                        "src": "7494:30:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2449,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "7728:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2553,
                      "src": "7720:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2448,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7720:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2460,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2453,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2419,
                            "src": "7756:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2454,
                            "name": "totalCoins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2421,
                            "src": "7769:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2455,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2423,
                            "src": "7781:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2456,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2425,
                            "src": "7792:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2457,
                            "name": "lockPeriodEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2427,
                            "src": "7801:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2451,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7745:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7745:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7745:74:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2450,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7735:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7735:85:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7720:100:6"
                },
                {
                  "assignments": [
                    2463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2463,
                      "mutability": "mutable",
                      "name": "tree",
                      "nameLocation": "7930:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2553,
                      "src": "7911:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree"
                      },
                      "typeName": {
                        "id": 2462,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2461,
                          "name": "MerkleTree",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2197,
                          "src": "7911:10:6"
                        },
                        "referencedDeclaration": 2197,
                        "src": "7911:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2467,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2464,
                      "name": "merkleTrees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2202,
                      "src": "7937:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$2197_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                      }
                    },
                    "id": 2466,
                    "indexExpression": {
                      "id": 2465,
                      "name": "treeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2417,
                      "src": "7949:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7937:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$2197_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7911:48:6"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "expression": {
                        "id": 2468,
                        "name": "tree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2463,
                        "src": "8020:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 2469,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2196,
                      "src": "8020:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 2471,
                    "indexExpression": {
                      "id": 2470,
                      "name": "leaf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2449,
                      "src": "8037:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8020:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2478,
                  "nodeType": "IfStatement",
                  "src": "8016:95:6",
                  "trueBody": {
                    "id": 2477,
                    "nodeType": "Block",
                    "src": "8044:67:6",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 2473,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2417,
                              "src": "8084:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2474,
                              "name": "leaf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2449,
                              "src": "8095:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2472,
                            "name": "AlreadyInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2248,
                            "src": "8065:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32) pure"
                            }
                          },
                          "id": 2475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8065:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2476,
                        "nodeType": "RevertStatement",
                        "src": "8058:42:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 2482,
                          "name": "leaf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2449,
                          "src": "8222:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 2483,
                          "name": "proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2430,
                          "src": "8228:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 2479,
                            "name": "tree",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2463,
                            "src": "8196:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                              "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                            }
                          },
                          "id": 2480,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rootHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2179,
                          "src": "8196:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "verifyProof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1342,
                        "src": "8196:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_bytes32_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32,bytes32[] memory) pure returns (bool)"
                        }
                      },
                      "id": 2484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8196:38:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 2485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8238:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8196:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2494,
                  "nodeType": "IfStatement",
                  "src": "8192:117:6",
                  "trueBody": {
                    "id": 2493,
                    "nodeType": "Block",
                    "src": "8245:64:6",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 2488,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2417,
                              "src": "8275:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2489,
                              "name": "leaf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2449,
                              "src": "8286:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2490,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2430,
                              "src": "8292:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            ],
                            "id": 2487,
                            "name": "BadProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2257,
                            "src": "8266:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,bytes32,bytes32[] memory) pure"
                            }
                          },
                          "id": 2491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8266:32:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2492,
                        "nodeType": "RevertStatement",
                        "src": "8259:39:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 2495,
                          "name": "tree",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2463,
                          "src": "8380:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                            "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                          }
                        },
                        "id": 2498,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2196,
                        "src": "8380:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2499,
                      "indexExpression": {
                        "id": 2497,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2449,
                        "src": "8397:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8380:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8405:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8380:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2502,
                  "nodeType": "ExpressionStatement",
                  "src": "8380:29:6"
                },
                {
                  "assignments": [
                    2504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2504,
                      "mutability": "mutable",
                      "name": "coinsPerSecond",
                      "nameLocation": "8582:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2553,
                      "src": "8577:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2503,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8577:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2511,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2505,
                      "name": "totalCoins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2421,
                      "src": "8599:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2506,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2425,
                            "src": "8613:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2507,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2423,
                            "src": "8623:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8613:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2509,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8612:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8599:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8577:56:6"
                },
                {
                  "expression": {
                    "id": 2529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 2512,
                          "name": "tree",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2463,
                          "src": "8695:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                            "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                          }
                        },
                        "id": 2517,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tranches",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2192,
                        "src": "8695:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$2177_storage_$",
                          "typeString": "mapping(uint256 => struct MerkleVesting.Tranche storage ref)"
                        }
                      },
                      "id": 2518,
                      "indexExpression": {
                        "id": 2516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "8709:29:6",
                        "subExpression": {
                          "expression": {
                            "id": 2514,
                            "name": "tree",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2463,
                            "src": "8711:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                              "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                            }
                          },
                          "id": 2515,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "numTranchesInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2187,
                          "src": "8711:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8695:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$2177_storage",
                        "typeString": "struct MerkleVesting.Tranche storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2520,
                          "name": "destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2419,
                          "src": "8763:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2521,
                          "name": "totalCoins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2421,
                          "src": "8788:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2522,
                          "name": "totalCoins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2421,
                          "src": "8843:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2523,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2423,
                          "src": "8905:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2524,
                          "name": "endTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2425,
                          "src": "8928:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2525,
                          "name": "coinsPerSecond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2504,
                          "src": "8949:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2526,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2423,
                          "src": "8977:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2527,
                          "name": "lockPeriodEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2427,
                          "src": "9041:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2519,
                        "name": "Tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2177,
                        "src": "8742:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Tranche_$2177_storage_ptr_$",
                          "typeString": "type(struct MerkleVesting.Tranche storage pointer)"
                        }
                      },
                      "id": 2528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8742:326:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$2177_memory_ptr",
                        "typeString": "struct MerkleVesting.Tranche memory"
                      }
                    },
                    "src": "8695:373:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$2177_storage",
                      "typeString": "struct MerkleVesting.Tranche storage ref"
                    }
                  },
                  "id": 2530,
                  "nodeType": "ExpressionStatement",
                  "src": "8695:373:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2532,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "9103:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2533,
                          "name": "tree",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2463,
                          "src": "9114:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                            "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                          }
                        },
                        "id": 2534,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numTranchesInitialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2187,
                        "src": "9114:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2535,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2419,
                        "src": "9143:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2531,
                      "name": "TrancheInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2238,
                      "src": "9084:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 2536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9084:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2537,
                  "nodeType": "EmitStatement",
                  "src": "9079:76:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2538,
                      "name": "lockPeriodEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2427,
                      "src": "9249:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2539,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9269:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9269:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9249:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2549,
                  "nodeType": "IfStatement",
                  "src": "9245:114:6",
                  "trueBody": {
                    "id": 2548,
                    "nodeType": "Block",
                    "src": "9286:73:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2543,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2417,
                              "src": "9309:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2544,
                                "name": "tree",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2463,
                                "src": "9320:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                                  "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                                }
                              },
                              "id": 2545,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "numTranchesInitialized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2187,
                              "src": "9320:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2542,
                            "name": "withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2710,
                            "src": "9300:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 2546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9300:48:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2547,
                        "nodeType": "ExpressionStatement",
                        "src": "9300:48:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "id": 2550,
                      "name": "tree",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2463,
                      "src": "9375:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                      }
                    },
                    "id": 2551,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "numTranchesInitialized",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2187,
                    "src": "9375:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2434,
                  "id": 2552,
                  "nodeType": "Return",
                  "src": "9368:34:6"
                }
              ]
            },
            "documentation": {
              "id": 2415,
              "nodeType": "StructuredDocumentation",
              "src": "6142:1046:6",
              "text": "@notice Called once per recipient of a vesting schedule to initialize the vesting schedule\n @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs of global tree stats\n @dev The contract has no knowledge of the vesting schedules until this function is called\n @param treeIndex index into array-like map of merkleTrees\n @param destination address that will receive tokens\n @param totalCoins amount of tokens to be released after vesting completes\n @param startTime time that vesting schedule starts, can be past or future\n @param endTime time vesting schedule completes, can be past or future\n @param lockPeriodEndTime time that coins become unlocked, can be after endTime\n @param proof array of hashes linking leaf hash of (destination, totalCoins, startTime, endTime, lockPeriodEndTime) to root"
            },
            "functionSelector": "a8efa9ba",
            "id": 2554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "7202:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2417,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "7227:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "7222:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2416,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7222:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2419,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "7254:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "7246:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7246:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2421,
                  "mutability": "mutable",
                  "name": "totalCoins",
                  "nameLocation": "7280:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "7275:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2420,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7275:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2423,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "7305:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "7300:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2422,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7300:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2425,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "7329:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "7324:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2424,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7324:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2427,
                  "mutability": "mutable",
                  "name": "lockPeriodEndTime",
                  "nameLocation": "7351:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "7346:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2426,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7346:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2430,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "7395:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "7378:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2428,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7378:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2429,
                    "nodeType": "ArrayTypeName",
                    "src": "7378:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7212:189:6"
            },
            "returnParameters": {
              "id": 2434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2433,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "7420:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2432,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7420:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7419:6:6"
            },
            "scope": 2759,
            "src": "7193:2216:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2709,
              "nodeType": "Block",
              "src": "9907:2248:6",
              "statements": [
                {
                  "assignments": [
                    2564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2564,
                      "mutability": "mutable",
                      "name": "tree",
                      "nameLocation": "9937:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2709,
                      "src": "9918:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree"
                      },
                      "typeName": {
                        "id": 2563,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2562,
                          "name": "MerkleTree",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2197,
                          "src": "9918:10:6"
                        },
                        "referencedDeclaration": 2197,
                        "src": "9918:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2568,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2565,
                      "name": "merkleTrees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2202,
                      "src": "9944:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$2197_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                      }
                    },
                    "id": 2567,
                    "indexExpression": {
                      "id": 2566,
                      "name": "treeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2557,
                      "src": "9956:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9944:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$2197_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9918:48:6"
                },
                {
                  "assignments": [
                    2571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2571,
                      "mutability": "mutable",
                      "name": "tranche",
                      "nameLocation": "9992:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2709,
                      "src": "9976:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                        "typeString": "struct MerkleVesting.Tranche"
                      },
                      "typeName": {
                        "id": 2570,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2569,
                          "name": "Tranche",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2177,
                          "src": "9976:7:6"
                        },
                        "referencedDeclaration": 2177,
                        "src": "9976:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2576,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 2572,
                        "name": "tree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "10002:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 2573,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tranches",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2192,
                      "src": "10002:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$2177_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.Tranche storage ref)"
                      }
                    },
                    "id": 2575,
                    "indexExpression": {
                      "id": 2574,
                      "name": "trancheIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2559,
                      "src": "10016:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10002:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$2177_storage",
                      "typeString": "struct MerkleVesting.Tranche storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9976:53:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2577,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2571,
                        "src": "10113:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 2578,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalCoins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2164,
                      "src": "10113:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10135:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10113:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2587,
                  "nodeType": "IfStatement",
                  "src": "10109:106:6",
                  "trueBody": {
                    "id": 2586,
                    "nodeType": "Block",
                    "src": "10138:77:6",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 2582,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2557,
                              "src": "10180:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2583,
                              "name": "trancheIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2559,
                              "src": "10191:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2581,
                            "name": "UninitializedAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "10159:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 2584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10159:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2585,
                        "nodeType": "RevertStatement",
                        "src": "10152:52:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2588,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10277:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10277:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2590,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2571,
                        "src": "10295:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 2591,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lockPeriodEndTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2176,
                      "src": "10295:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10277:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2599,
                  "nodeType": "IfStatement",
                  "src": "10273:124:6",
                  "trueBody": {
                    "id": 2598,
                    "nodeType": "Block",
                    "src": "10322:75:6",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 2594,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2557,
                              "src": "10362:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2595,
                              "name": "trancheIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2559,
                              "src": "10373:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2593,
                            "name": "AccountStillLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2269,
                            "src": "10343:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 2596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10343:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2597,
                        "nodeType": "RevertStatement",
                        "src": "10336:50:6"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2600,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2571,
                        "src": "10453:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 2601,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currentCoins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2166,
                      "src": "10453:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10477:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10453:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2610,
                  "nodeType": "IfStatement",
                  "src": "10449:100:6",
                  "trueBody": {
                    "id": 2609,
                    "nodeType": "Block",
                    "src": "10480:69:6",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 2605,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2557,
                              "src": "10514:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2606,
                              "name": "trancheIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2559,
                              "src": "10525:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2604,
                            "name": "AccountEmpty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2275,
                            "src": "10501:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10501:37:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2608,
                        "nodeType": "RevertStatement",
                        "src": "10494:44:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2612,
                      "mutability": "mutable",
                      "name": "currentWithdrawal",
                      "nameLocation": "10611:17:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2709,
                      "src": "10606:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2611,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10606:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2613,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10606:22:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2614,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10714:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10714:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 2616,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2571,
                        "src": "10733:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 2617,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2170,
                      "src": "10733:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10714:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2637,
                    "nodeType": "Block",
                    "src": "10821:158:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 2635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2625,
                            "name": "currentWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2612,
                            "src": "10877:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2626,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "10898:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2627,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "10898:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 2628,
                                      "name": "tranche",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2571,
                                      "src": "10916:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                                        "typeString": "struct MerkleVesting.Tranche storage pointer"
                                      }
                                    },
                                    "id": 2629,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastWithdrawalTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2174,
                                    "src": "10916:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10898:44:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2631,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10897:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 2632,
                                "name": "tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2571,
                                "src": "10946:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                                  "typeString": "struct MerkleVesting.Tranche storage pointer"
                                }
                              },
                              "id": 2633,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "coinsPerSecond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2172,
                              "src": "10946:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10897:71:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10877:91:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2636,
                        "nodeType": "ExpressionStatement",
                        "src": "10877:91:6"
                      }
                    ]
                  },
                  "id": 2638,
                  "nodeType": "IfStatement",
                  "src": "10710:269:6",
                  "trueBody": {
                    "id": 2624,
                    "nodeType": "Block",
                    "src": "10750:65:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 2622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2619,
                            "name": "currentWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2612,
                            "src": "10764:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2620,
                              "name": "tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2571,
                              "src": "10784:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                                "typeString": "struct MerkleVesting.Tranche storage pointer"
                              }
                            },
                            "id": 2621,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentCoins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2166,
                            "src": "10784:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10764:40:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2623,
                        "nodeType": "ExpressionStatement",
                        "src": "10764:40:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2639,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2571,
                        "src": "11074:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 2641,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastWithdrawalTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2174,
                      "src": "11074:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2642,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11103:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11103:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11074:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2645,
                  "nodeType": "ExpressionStatement",
                  "src": "11074:44:6"
                },
                {
                  "assignments": [
                    2648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2648,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "11136:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2709,
                      "src": "11129:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2837",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2647,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2646,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2837,
                          "src": "11129:6:6"
                        },
                        "referencedDeclaration": 2837,
                        "src": "11129:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2837",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2653,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2650,
                          "name": "tree",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2564,
                          "src": "11151:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                            "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                          }
                        },
                        "id": 2651,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2183,
                        "src": "11151:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2649,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2837,
                      "src": "11144:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2837_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11144:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2837",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11129:40:6"
                },
                {
                  "assignments": [
                    2655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2655,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "11184:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2709,
                      "src": "11179:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2654,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11179:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2663,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2660,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11224:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleVesting_$2759",
                              "typeString": "contract MerkleVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleVesting_$2759",
                              "typeString": "contract MerkleVesting"
                            }
                          ],
                          "id": 2659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11216:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2658,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11216:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11216:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2656,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2648,
                        "src": "11200:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2837",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2776,
                      "src": "11200:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11200:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11179:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2667,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2571,
                          "src": "11627:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2668,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2162,
                        "src": "11627:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2669,
                        "name": "currentWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2612,
                        "src": "11646:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2664,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2648,
                        "src": "11612:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2837",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2786,
                      "src": "11612:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11612:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2671,
                  "nodeType": "ExpressionStatement",
                  "src": "11612:52:6"
                },
                {
                  "assignments": [
                    2673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2673,
                      "mutability": "mutable",
                      "name": "balanceAfter",
                      "nameLocation": "11771:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2709,
                      "src": "11766:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2672,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11766:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2681,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2678,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11810:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleVesting_$2759",
                              "typeString": "contract MerkleVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleVesting_$2759",
                              "typeString": "contract MerkleVesting"
                            }
                          ],
                          "id": 2677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11802:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2676,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11802:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11802:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2674,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2648,
                        "src": "11786:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2837",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2776,
                      "src": "11786:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11786:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11766:50:6"
                },
                {
                  "assignments": [
                    2683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2683,
                      "mutability": "mutable",
                      "name": "diff",
                      "nameLocation": "11831:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2709,
                      "src": "11826:9:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2682,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11826:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2687,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2684,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2655,
                      "src": "11838:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2685,
                      "name": "balanceAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2673,
                      "src": "11854:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11838:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11826:40:6"
                },
                {
                  "expression": {
                    "id": 2692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2688,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2571,
                        "src": "11917:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 2690,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentCoins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2166,
                      "src": "11917:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2691,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2683,
                      "src": "11941:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11917:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2693,
                  "nodeType": "ExpressionStatement",
                  "src": "11917:28:6"
                },
                {
                  "expression": {
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2694,
                        "name": "tree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "12031:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 2696,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2185,
                      "src": "12031:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2697,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2683,
                      "src": "12052:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12031:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2699,
                  "nodeType": "ExpressionStatement",
                  "src": "12031:25:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2701,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2557,
                        "src": "12091:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2702,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2571,
                          "src": "12102:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2162,
                        "src": "12102:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2704,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2683,
                        "src": "12121:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2705,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2571,
                          "src": "12127:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2706,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currentCoins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2166,
                        "src": "12127:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2700,
                      "name": "WithdrawalOccurred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2212,
                      "src": "12072:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 2707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12072:76:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2708,
                  "nodeType": "EmitStatement",
                  "src": "12067:81:6"
                }
              ]
            },
            "documentation": {
              "id": 2555,
              "nodeType": "StructuredDocumentation",
              "src": "9415:427:6",
              "text": "@notice Claim funds as a recipient in the merkle-drop\n @dev Anyone may call this function for anyone else, funds go to destination regardless, it's just a question of\n @dev who provides the proof and pays the gas, msg.sender is not used in this function\n @param treeIndex index into array-like map of merkleTrees, which tree should we apply the proof to?\n @param trancheIndex recipient of tokens"
            },
            "functionSelector": "441a3e70",
            "id": 2710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "9856:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2557,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "9870:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2710,
                  "src": "9865:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2556,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9865:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2559,
                  "mutability": "mutable",
                  "name": "trancheIndex",
                  "nameLocation": "9886:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2710,
                  "src": "9881:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2558,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9881:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9864:35:6"
            },
            "returnParameters": {
              "id": 2561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9907:0:6"
            },
            "scope": 2759,
            "src": "9847:2308:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2757,
              "nodeType": "Block",
              "src": "12284:254:6",
              "statements": [
                {
                  "assignments": [
                    2733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2733,
                      "mutability": "mutable",
                      "name": "tranche",
                      "nameLocation": "12310:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 2757,
                      "src": "12294:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                        "typeString": "struct MerkleVesting.Tranche"
                      },
                      "typeName": {
                        "id": 2732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2731,
                          "name": "Tranche",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2177,
                          "src": "12294:7:6"
                        },
                        "referencedDeclaration": 2177,
                        "src": "12294:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2740,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2734,
                          "name": "merkleTrees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2202,
                          "src": "12320:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$2197_storage_$",
                            "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                          }
                        },
                        "id": 2736,
                        "indexExpression": {
                          "id": 2735,
                          "name": "treeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2712,
                          "src": "12332:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12320:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$2197_storage",
                          "typeString": "struct MerkleVesting.MerkleTree storage ref"
                        }
                      },
                      "id": 2737,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tranches",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2192,
                      "src": "12320:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$2177_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.Tranche storage ref)"
                      }
                    },
                    "id": 2739,
                    "indexExpression": {
                      "id": 2738,
                      "name": "trancheIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2714,
                      "src": "12352:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12320:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$2177_storage",
                      "typeString": "struct MerkleVesting.Tranche storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12294:71:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 2741,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2733,
                          "src": "12383:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2742,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2162,
                        "src": "12383:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2743,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2733,
                          "src": "12402:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2744,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalCoins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2164,
                        "src": "12402:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2745,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2733,
                          "src": "12422:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2746,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currentCoins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2166,
                        "src": "12422:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2747,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2733,
                          "src": "12444:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2748,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2168,
                        "src": "12444:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2749,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2733,
                          "src": "12463:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2750,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "endTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2170,
                        "src": "12463:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2751,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2733,
                          "src": "12480:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2752,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "coinsPerSecond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2172,
                        "src": "12480:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2753,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2733,
                          "src": "12504:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$2177_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 2754,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastWithdrawalTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2174,
                        "src": "12504:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2755,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12382:149:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address,uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 2730,
                  "id": 2756,
                  "nodeType": "Return",
                  "src": "12375:156:6"
                }
              ]
            },
            "functionSelector": "0b42abf2",
            "id": 2758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTranche",
            "nameLocation": "12170:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2712,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "12186:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "12181:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2711,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12181:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2714,
                  "mutability": "mutable",
                  "name": "trancheIndex",
                  "nameLocation": "12202:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "12197:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2713,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12197:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12180:35:6"
            },
            "returnParameters": {
              "id": 2730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2717,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "12239:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12239:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2719,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "12248:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2718,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12248:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2721,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "12254:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2720,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12254:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2723,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "12260:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12260:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "12266:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2724,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12266:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2727,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "12272:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2726,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12272:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2729,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2758,
                  "src": "12278:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2728,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12278:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12238:45:6"
            },
            "scope": 2759,
            "src": "12161:377:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2760,
        "src": "558:11983:6",
        "usedErrors": [
          2242,
          2248,
          2257,
          2263,
          2269,
          2275
        ]
      }
    ],
    "src": "42:12499:6"
  },
  "bytecode": "608060405234801561001057600080fd5b50610d92806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806385d88cb11161005b57806385d88cb1146101575780639e18a054146101d3578063a8efa9ba146101e6578063f16ad51e146101f957600080fd5b80630b42abf214610082578063390b7c661461012b578063441a3e7014610142575b600080fd5b6100e7610090366004610a79565b60009182526001602081815260408085209385526005938401909152909220805492810154600282015460038301546004840154948401546006909401546001600160a01b03909616969295919490939092909190565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0015b60405180910390f35b61013460005481565b604051908152602001610122565b610155610150366004610a79565b61020c565b005b61019d610165366004610a9b565b60016020819052600091825260409091208054918101546002820154600383015460049093015491926001600160a01b039091169185565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a001610122565b6101556101e1366004610ad0565b6104f1565b6101346101f4366004610b23565b6105a1565b610155610207366004610a79565b61086b565b6000828152600160208181526040808420858552600581019092529092209081015461025a5760405163c085915360e01b815260048101859052602481018490526044015b60405180910390fd5b806007015442101561028c576040516001624be61f60e11b031981526004810185905260248101849052604401610251565b60028101546102b8576040516318c0dc6760e21b81526004810185905260248101849052604401610251565b6000816004015442106102d0575060028101546102f1565b600582015460068301546102e49042610c3a565b6102ee9190610c51565b90505b42600683015560028301546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610c70565b845460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810186905291925083169063a9059cbb906044016020604051808303816000875af11580156103be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e29190610c89565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e9190610c70565b9050600061045c8284610c3a565b9050808660020160008282546104729190610c3a565b925050819055508087600301600082825461048d9190610c3a565b9091555050855460028701546040516001600160a01b03909216918b917f1680e4cfe90468085407ef2b599dbe94b0aa30ff9f180f0e41d22eb71c872872916104de91868252602082015260400190565b60405180910390a3505050505050505050565b600060016000806000815461050590610cb2565b9182905550815260208101919091526040016000908120868155600181018690556002810180546001600160a01b0319166001600160a01b0387161790559054909150610552908361086b565b60005460408051878152602081018790526001600160a01b03861692917fb72ea3ed46a7513251023946d5d35916f3e1d76d748bb144e641d1162dee222f910160405180910390a35050505050565b60008715806105b1575060005488115b156105d25760405163190a97ad60e01b815260048101899052602401610251565b604080516001600160a01b0389166020820152908101879052606081018690526080810185905260a0810184905260009060c00160408051601f19818403018152918152815160209283012060008c81526001845282812082825260068101909452919091205490925060ff16156106675760405163a0b0703160e01b8152600481018b905260248101839052604401610251565b8054604051632769cd1f60e21b815273__MerkleLib_____________________________91639da7347c916106a3919086908990600401610ccd565b602060405180830381865af41580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e49190610c89565b61070757898285604051630da5a8fd60e41b815260040161025193929190610ccd565b60008281526006820160205260408120805460ff1916600117905561072c8888610c3a565b610736908a610d22565b90506040518061010001604052808b6001600160a01b031681526020018a81526020018a815260200189815260200188815260200182815260200189815260200187815250826005016000846004016000815461079290610cb2565b9182905550815260208082019290925260409081016000908120845181546001600160a01b0319166001600160a01b0391821617825593850151600182015584830151600282015560608501516003820155608085015160048083019190915560a0860151600583015560c0860151600683015560e090950151600790910155928501549051918d169290918e917f8d1a99fb79ba81aa040238d9df7033b8a8a3048d382036a272839a9c2a2616b591a442861015610859576108598b836004015461020c565b50600401549998505050505050505050565b811580610879575060005482115b1561089a5760405163190a97ad60e01b815260048101839052602401610251565b600082815260016020526040808220600281015491516370a0823160e01b815230600482015290926001600160a01b03909216919082906370a0823190602401602060405180830381865afa1580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b9190610c70565b6040516323b872dd60e01b8152336004820152306024820152604481018690529091506001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190610c89565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a019190610c70565b90506000610a0f8383610c3a565b905080856003016000828254610a259190610d44565b909155505060028501546040518281526001600160a01b039091169088907fb162210da7d23d82c18cff5af46d3562661d26b42a6848fa28d64a6bdc70386a9060200160405180910390a350505050505050565b60008060408385031215610a8c57600080fd5b50508035926020909101359150565b600060208284031215610aad57600080fd5b5035919050565b80356001600160a01b0381168114610acb57600080fd5b919050565b60008060008060808587031215610ae657600080fd5b8435935060208501359250610afd60408601610ab4565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610b3e57600080fd5b873596506020610b4f818a01610ab4565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff80821115610b8857600080fd5b818b0191508b601f830112610b9c57600080fd5b813581811115610bae57610bae610b0d565b8060051b604051601f19603f83011681018181108582111715610bd357610bd3610b0d565b60405291825284820192508381018501918e831115610bf157600080fd5b938501935b82851015610c0f57843584529385019392850192610bf6565b80965050505050505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b600082821015610c4c57610c4c610c24565b500390565b6000816000190483118215151615610c6b57610c6b610c24565b500290565b600060208284031215610c8257600080fd5b5051919050565b600060208284031215610c9b57600080fd5b81518015158114610cab57600080fd5b9392505050565b6000600019821415610cc657610cc6610c24565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015610d1457845183529383019391830191600101610cf8565b509098975050505050505050565b600082610d3f57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610d5757610d57610c24565b50019056fea2646970667358221220827bf1099f2835af2102d2f1fc5e724e3db355971f3ae6a385c51a217844876d64736f6c634300080c0033",
  "bytecodeSha1": "f1a2b480a8f54d20809783d4bc0d3780fade4a7d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "MerkleVesting",
  "coverageMap": {
    "branches": {
      "4": {},
      "6": {
        "MerkleVesting.depositTokens": {
          "34": [
            5017,
            5031,
            true
          ],
          "35": [
            5035,
            5055,
            false
          ]
        },
        "MerkleVesting.initialize": {
          "30": [
            7440,
            7454,
            true
          ],
          "31": [
            7458,
            7478,
            false
          ],
          "32": [
            8020,
            8042,
            false
          ],
          "33": [
            9249,
            9284,
            false
          ]
        },
        "MerkleVesting.withdraw": {
          "28": [
            10277,
            10320,
            false
          ],
          "29": [
            10714,
            10748,
            false
          ]
        }
      },
      "7": {}
    },
    "statements": {
      "4": {},
      "6": {
        "MerkleVesting.addMerkleRoot": {
          "11": [
            4193,
            4216
          ],
          "12": [
            4226,
            4250
          ],
          "13": [
            4260,
            4292
          ],
          "14": [
            4332,
            4369
          ],
          "15": [
            4379,
            4442
          ]
        },
        "MerkleVesting.depositTokens": {
          "24": [
            5013,
            5112
          ],
          "25": [
            5689,
            5741
          ],
          "26": [
            6026,
            6057
          ],
          "27": [
            6067,
            6129
          ]
        },
        "MerkleVesting.getTranche": {
          "0": [
            12375,
            12531
          ]
        },
        "MerkleVesting.initialize": {
          "16": [
            7436,
            7535
          ],
          "17": [
            8016,
            8111
          ],
          "18": [
            8192,
            8309
          ],
          "19": [
            8380,
            8409
          ],
          "20": [
            8695,
            9068
          ],
          "21": [
            9079,
            9155
          ],
          "22": [
            9300,
            9348
          ],
          "23": [
            9368,
            9402
          ]
        },
        "MerkleVesting.withdraw": {
          "1": [
            10109,
            10215
          ],
          "2": [
            10273,
            10397
          ],
          "3": [
            10449,
            10549
          ],
          "4": [
            10764,
            10804
          ],
          "5": [
            10877,
            10968
          ],
          "6": [
            11074,
            11118
          ],
          "7": [
            11612,
            11664
          ],
          "8": [
            11917,
            11945
          ],
          "9": [
            12031,
            12056
          ],
          "10": [
            12067,
            12148
          ]
        }
      },
      "7": {}
    }
  },
  "dependencies": [
    "IERC20",
    "MerkleLib"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806385d88cb11161005b57806385d88cb1146101575780639e18a054146101d3578063a8efa9ba146101e6578063f16ad51e146101f957600080fd5b80630b42abf214610082578063390b7c661461012b578063441a3e7014610142575b600080fd5b6100e7610090366004610a79565b60009182526001602081815260408085209385526005938401909152909220805492810154600282015460038301546004840154948401546006909401546001600160a01b03909616969295919490939092909190565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0015b60405180910390f35b61013460005481565b604051908152602001610122565b610155610150366004610a79565b61020c565b005b61019d610165366004610a9b565b60016020819052600091825260409091208054918101546002820154600383015460049093015491926001600160a01b039091169185565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a001610122565b6101556101e1366004610ad0565b6104f1565b6101346101f4366004610b23565b6105a1565b610155610207366004610a79565b61086b565b6000828152600160208181526040808420858552600581019092529092209081015461025a5760405163c085915360e01b815260048101859052602481018490526044015b60405180910390fd5b806007015442101561028c576040516001624be61f60e11b031981526004810185905260248101849052604401610251565b60028101546102b8576040516318c0dc6760e21b81526004810185905260248101849052604401610251565b6000816004015442106102d0575060028101546102f1565b600582015460068301546102e49042610c3a565b6102ee9190610c51565b90505b42600683015560028301546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610c70565b845460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810186905291925083169063a9059cbb906044016020604051808303816000875af11580156103be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e29190610c89565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e9190610c70565b9050600061045c8284610c3a565b9050808660020160008282546104729190610c3a565b925050819055508087600301600082825461048d9190610c3a565b9091555050855460028701546040516001600160a01b03909216918b917f1680e4cfe90468085407ef2b599dbe94b0aa30ff9f180f0e41d22eb71c872872916104de91868252602082015260400190565b60405180910390a3505050505050505050565b600060016000806000815461050590610cb2565b9182905550815260208101919091526040016000908120868155600181018690556002810180546001600160a01b0319166001600160a01b0387161790559054909150610552908361086b565b60005460408051878152602081018790526001600160a01b03861692917fb72ea3ed46a7513251023946d5d35916f3e1d76d748bb144e641d1162dee222f910160405180910390a35050505050565b60008715806105b1575060005488115b156105d25760405163190a97ad60e01b815260048101899052602401610251565b604080516001600160a01b0389166020820152908101879052606081018690526080810185905260a0810184905260009060c00160408051601f19818403018152918152815160209283012060008c81526001845282812082825260068101909452919091205490925060ff16156106675760405163a0b0703160e01b8152600481018b905260248101839052604401610251565b8054604051632769cd1f60e21b815273__$61dd25696c02d5bd2863c8d2c1a2324a87$__91639da7347c916106a3919086908990600401610ccd565b602060405180830381865af41580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e49190610c89565b61070757898285604051630da5a8fd60e41b815260040161025193929190610ccd565b60008281526006820160205260408120805460ff1916600117905561072c8888610c3a565b610736908a610d22565b90506040518061010001604052808b6001600160a01b031681526020018a81526020018a815260200189815260200188815260200182815260200189815260200187815250826005016000846004016000815461079290610cb2565b9182905550815260208082019290925260409081016000908120845181546001600160a01b0319166001600160a01b0391821617825593850151600182015584830151600282015560608501516003820155608085015160048083019190915560a0860151600583015560c0860151600683015560e090950151600790910155928501549051918d169290918e917f8d1a99fb79ba81aa040238d9df7033b8a8a3048d382036a272839a9c2a2616b591a442861015610859576108598b836004015461020c565b50600401549998505050505050505050565b811580610879575060005482115b1561089a5760405163190a97ad60e01b815260048101839052602401610251565b600082815260016020526040808220600281015491516370a0823160e01b815230600482015290926001600160a01b03909216919082906370a0823190602401602060405180830381865afa1580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b9190610c70565b6040516323b872dd60e01b8152336004820152306024820152604481018690529091506001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190610c89565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a019190610c70565b90506000610a0f8383610c3a565b905080856003016000828254610a259190610d44565b909155505060028501546040518281526001600160a01b039091169088907fb162210da7d23d82c18cff5af46d3562661d26b42a6848fa28d64a6bdc70386a9060200160405180910390a350505050505050565b60008060408385031215610a8c57600080fd5b50508035926020909101359150565b600060208284031215610aad57600080fd5b5035919050565b80356001600160a01b0381168114610acb57600080fd5b919050565b60008060008060808587031215610ae657600080fd5b8435935060208501359250610afd60408601610ab4565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610b3e57600080fd5b873596506020610b4f818a01610ab4565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff80821115610b8857600080fd5b818b0191508b601f830112610b9c57600080fd5b813581811115610bae57610bae610b0d565b8060051b604051601f19603f83011681018181108582111715610bd357610bd3610b0d565b60405291825284820192508381018501918e831115610bf157600080fd5b938501935b82851015610c0f57843584529385019392850192610bf6565b80965050505050505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b600082821015610c4c57610c4c610c24565b500390565b6000816000190483118215151615610c6b57610c6b610c24565b500290565b600060208284031215610c8257600080fd5b5051919050565b600060208284031215610c9b57600080fd5b81518015158114610cab57600080fd5b9392505050565b6000600019821415610cc657610cc6610c24565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015610d1457845183529383019391830191600101610cf8565b509098975050505050505050565b600082610d3f57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610d5757610d57610c24565b50019056fea2646970667358221220827bf1099f2835af2102d2f1fc5e724e3db355971f3ae6a385c51a217844876d64736f6c634300080c0033",
  "deployedSourceMap": "558:11983:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12161:377;;;;;;:::i;:::-;12239:7;12320:22;;;:11;:22;;;;;;;;:45;;;:31;;;;:45;;;;;;12383:17;;12402:18;;;;12422:20;;;;12444:17;;;;12463:15;;;;12480:22;;;;12504:26;;;;;-1:-1:-1;;;;;12383:17:6;;;;12402:18;;12422:20;;12444:17;;12463:15;;12480:22;;12504:26;12161:377;;;;;-1:-1:-1;;;;;600:32:8;;;582:51;;664:2;649:18;;642:34;;;;692:18;;;685:34;;;;750:2;735:18;;728:34;;;;793:3;778:19;;771:35;620:3;822:19;;815:35;881:3;866:19;;859:35;569:3;554:19;12161:377:6;;;;;;;;677:20;;;;;;;;;1051:25:8;;;1039:2;1024:18;677:20:6;905:177:8;9847:2308:6;;;;;;:::i;:::-;;:::i;:::-;;2260:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2260:47:6;;;;;;;;;;1531:25:8;;;1587:2;1572:18;;1565:34;;;;-1:-1:-1;;;;;1635:32:8;;;1615:18;;;1608:60;;;;1699:2;1684:18;;1677:34;;;;1742:3;1727:19;;1720:35;1518:3;1503:19;2260:47:6;1272:489:8;3962:487:6;;;;;;:::i;:::-;;:::i;7193:2216::-;;;;;;:::i;:::-;;:::i;4945:1191::-;;;;;;:::i;:::-;;:::i;9847:2308::-;9918:23;9944:22;;;:11;:22;;;;;;;;10002:27;;;:13;;;:27;;;;;;10113:18;;;;10109:106;;10159:45;;-1:-1:-1;;;10159:45:6;;;;;4184:25:8;;;4225:18;;;4218:34;;;4157:18;;10159:45:6;;;;;;;;10109:106;10295:7;:25;;;10277:15;:43;10273:124;;;10343:43;;-1:-1:-1;;;;;;10343:43:6;;;;;4184:25:8;;;4225:18;;;4218:34;;;4157:18;;10343:43:6;4010:248:8;10273:124:6;10453:20;;;;10449:100;;10501:37;;-1:-1:-1;;;10501:37:6;;;;;4184:25:8;;;4225:18;;;4218:34;;;4157:18;;10501:37:6;4010:248:8;10449:100:6;10606:22;10733:7;:15;;;10714;:34;10710:269;;-1:-1:-1;10784:20:6;;;;10710:269;;;10946:22;;;;10916:26;;;;10898:44;;:15;:44;:::i;:::-;10897:71;;;;:::i;:::-;10877:91;;10710:269;11103:15;11074:26;;;:44;11151:17;;;;11200:30;;-1:-1:-1;;;11200:30:6;;11224:4;11200:30;;;4844:51:8;-1:-1:-1;;;;;11151:17:6;;;;11129:12;;11151:17;;11200:15;;4817:18:8;;11200:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11627:17;;11612:52;;-1:-1:-1;;;11612:52:6;;-1:-1:-1;;;;;11627:17:6;;;11612:52;;;5269:51:8;5336:18;;;5329:34;;;11179:51:6;;-1:-1:-1;11612:14:6;;;;;5242:18:8;;11612:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11786:30:6;;-1:-1:-1;;;11786:30:6;;11810:4;11786:30;;;4844:51:8;11766:17:6;;-1:-1:-1;;;;;11786:15:6;;;;;4817:18:8;;11786:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11766:50;-1:-1:-1;11826:9:6;11838:28;11766:50;11838:13;:28;:::i;:::-;11826:40;;11941:4;11917:7;:20;;;:28;;;;;;;:::i;:::-;;;;;;;;12052:4;12031;:17;;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;12102:17:6;;12127:20;;;;12072:76;;-1:-1:-1;;;;;12102:17:6;;;;12091:9;;12072:76;;;;12121:4;4184:25:8;;4240:2;4225:18;;4218:34;4172:2;4157:18;;4010:248;12072:76:6;;;;;;;;9907:2248;;;;;;;9847:2308;;:::o;3962:487::-;4134:23;4160:11;:23;4174:8;;4172:10;;;;;:::i;:::-;;;;;-1:-1:-1;4160:23:6;;;;;;;;;;;-1:-1:-1;4160:23:6;;;4193;;;4226:13;;;:24;;;4260:17;;;:32;;-1:-1:-1;;;;;;4260:32:6;-1:-1:-1;;;;;4260:32:6;;;;;4346:8;;4160:23;;-1:-1:-1;4332:37:6;;4356:12;4332:13;:37::i;:::-;4400:8;;4384:58;;;4184:25:8;;;4240:2;4225:18;;4218:34;;;-1:-1:-1;;;;;4384:58:6;;;4400:8;4384:58;;4157:18:8;4384:58:6;;;;;;;4068:381;3962:487;;;;:::o;7193:2216::-;7420:4;7440:14;;;:38;;;7470:8;;7458:9;:20;7440:38;7436:99;;;7501:23;;-1:-1:-1;;;7501:23:6;;;;;1051:25:8;;;1024:18;;7501:23:6;905:177:8;7436:99:6;7745:74;;;-1:-1:-1;;;;;6326:32:8;;7745:74:6;;;6308:51:8;6375:18;;;6368:34;;;6418:18;;;6411:34;;;6461:18;;;6454:34;;;6504:19;;;6497:35;;;7720:12:6;;6280:19:8;;7745:74:6;;;-1:-1:-1;;7745:74:6;;;;;;;;;7735:85;;7745:74;7735:85;;;;7911:23;7937:22;;;:11;:22;;;;;8020;;;:16;;;:22;;;;;;;;7735:85;;-1:-1:-1;8020:22:6;;8016:95;;;8065:35;;-1:-1:-1;;;8065:35:6;;;;;4184:25:8;;;4225:18;;;4218:34;;;4157:18;;8065:35:6;4010:248:8;8016:95:6;8196:13;;:38;;-1:-1:-1;;;8196:38:6;;:25;;;;:38;;:13;8222:4;;8228:5;;8196:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8192:117;;8275:9;8286:4;8292:5;8266:32;;-1:-1:-1;;;8266:32:6;;;;;;;;;;:::i;8192:117::-;8380:22;;;;:16;;;:22;;;;;:29;;-1:-1:-1;;8380:29:6;8405:4;8380:29;;;8613:19;8623:9;8613:7;:19;:::i;:::-;8599:34;;:10;:34;:::i;:::-;8577:56;;8742:326;;;;;;;;8763:11;-1:-1:-1;;;;;8742:326:6;;;;;8788:10;8742:326;;;;8843:10;8742:326;;;;8905:9;8742:326;;;;8928:7;8742:326;;;;8949:14;8742:326;;;;8977:9;8742:326;;;;9041:17;8742:326;;;8695:4;:13;;:44;8711:4;:27;;;8709:29;;;;;:::i;:::-;;;;;-1:-1:-1;8695:44:6;;;;;;;;;;;;;;-1:-1:-1;8695:44:6;;;:373;;;;-1:-1:-1;;;;;;8695:373:6;-1:-1:-1;;;;;8695:373:6;;;;;;;;;;-1:-1:-1;8695:373:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9114:27;;;;9084:71;;;;;;9114:27;;9103:9;;9084:71;;;9269:15;9249:17;:35;9245:114;;;9300:48;9309:9;9320:4;:27;;;9300:8;:48::i;:::-;-1:-1:-1;9375:27:6;;;;7193:2216;-1:-1:-1;;;;;;;;;7193:2216:6:o;4945:1191::-;5017:14;;;:38;;;5047:8;;5035:9;:20;5017:38;5013:99;;;5078:23;;-1:-1:-1;;;5078:23:6;;;;;1051:25:8;;;1024:18;;5078:23:6;905:177:8;5013:99:6;5162:29;5194:22;;;:11;:22;;;;;;5249:23;;;;5304:30;;-1:-1:-1;;;5304:30:6;;5328:4;5304:30;;;4844:51:8;5194:22:6;;-1:-1:-1;;;;;5249:23:6;;;;5162:29;5249:23;;5304:15;;4817:18:8;;5304:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5689:52;;-1:-1:-1;;;5689:52:6;;5708:10;5689:52;;;8826:34:8;5728:4:6;8876:18:8;;;8869:43;8928:18;;;8921:34;;;5283:51:6;;-1:-1:-1;;;;;;5689:18:6;;;;;8761::8;;5689:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5772:30:6;;-1:-1:-1;;;5772:30:6;;5796:4;5772:30;;;4844:51:8;5752:17:6;;-1:-1:-1;;;;;5772:15:6;;;;;4817:18:8;;5772:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5752:50;-1:-1:-1;5914:9:6;5926:28;5941:13;5752:50;5926:28;:::i;:::-;5914:40;;6053:4;6026:10;:23;;;:31;;;;;;;:::i;:::-;;;;-1:-1:-1;;6099:23:6;;;;6072:57;;1051:25:8;;;-1:-1:-1;;;;;6099:23:6;;;;6088:9;;6072:57;;1039:2:8;1024:18;6072:57:6;;;;;;;5003:1133;;;;;4945:1191;;:::o;14:248:8:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:8;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:8:o;1087:180::-;1146:6;1199:2;1187:9;1178:7;1174:23;1170:32;1167:52;;;1215:1;1212;1205:12;1167:52;-1:-1:-1;1238:23:8;;1087:180;-1:-1:-1;1087:180:8:o;1766:173::-;1834:20;;-1:-1:-1;;;;;1883:31:8;;1873:42;;1863:70;;1929:1;1926;1919:12;1863:70;1766:173;;;:::o;1944:391::-;2030:6;2038;2046;2054;2107:3;2095:9;2086:7;2082:23;2078:33;2075:53;;;2124:1;2121;2114:12;2075:53;2160:9;2147:23;2137:33;;2217:2;2206:9;2202:18;2189:32;2179:42;;2240:38;2274:2;2263:9;2259:18;2240:38;:::i;:::-;1944:391;;;;-1:-1:-1;2230:48:8;;2325:2;2310:18;2297:32;;-1:-1:-1;;1944:391:8:o;2340:127::-;2401:10;2396:3;2392:20;2389:1;2382:31;2432:4;2429:1;2422:15;2456:4;2453:1;2446:15;2472:1533;2610:6;2618;2626;2634;2642;2650;2658;2711:3;2699:9;2690:7;2686:23;2682:33;2679:53;;;2728:1;2725;2718:12;2679:53;2764:9;2751:23;2741:33;;2793:2;2814:38;2848:2;2837:9;2833:18;2814:38;:::i;:::-;2804:48;;2899:2;2888:9;2884:18;2871:32;2861:42;;2950:2;2939:9;2935:18;2922:32;2912:42;;3001:3;2990:9;2986:19;2973:33;2963:43;;3053:3;3042:9;3038:19;3025:33;3015:43;;3109:3;3098:9;3094:19;3081:33;3133:18;3174:2;3166:6;3163:14;3160:34;;;3190:1;3187;3180:12;3160:34;3228:6;3217:9;3213:22;3203:32;;3273:7;3266:4;3262:2;3258:13;3254:27;3244:55;;3295:1;3292;3285:12;3244:55;3331:2;3318:16;3353:2;3349;3346:10;3343:36;;;3359:18;;:::i;:::-;3405:2;3402:1;3398:10;3437:2;3431:9;3500:2;3496:7;3491:2;3487;3483:11;3479:25;3471:6;3467:38;3555:6;3543:10;3540:22;3535:2;3523:10;3520:18;3517:46;3514:72;;;3566:18;;:::i;:::-;3602:2;3595:22;3652:18;;;3686:15;;;;-1:-1:-1;3728:11:8;;;3724:20;;;3756:19;;;3753:39;;;3788:1;3785;3778:12;3753:39;3812:11;;;;3832:142;3848:6;3843:3;3840:15;3832:142;;;3914:17;;3902:30;;3865:12;;;;3952;;;;3832:142;;;3993:6;3983:16;;;;;;;;2472:1533;;;;;;;;;;:::o;4263:127::-;4324:10;4319:3;4315:20;4312:1;4305:31;4355:4;4352:1;4345:15;4379:4;4376:1;4369:15;4395:125;4435:4;4463:1;4460;4457:8;4454:34;;;4468:18;;:::i;:::-;-1:-1:-1;4505:9:8;;4395:125::o;4525:168::-;4565:7;4631:1;4627;4623:6;4619:14;4616:1;4613:21;4608:1;4601:9;4594:17;4590:45;4587:71;;;4638:18;;:::i;:::-;-1:-1:-1;4678:9:8;;4525:168::o;4906:184::-;4976:6;5029:2;5017:9;5008:7;5004:23;5000:32;4997:52;;;5045:1;5042;5035:12;4997:52;-1:-1:-1;5068:16:8;;4906:184;-1:-1:-1;4906:184:8:o;5374:277::-;5441:6;5494:2;5482:9;5473:7;5469:23;5465:32;5462:52;;;5510:1;5507;5500:12;5462:52;5542:9;5536:16;5595:5;5588:13;5581:21;5574:5;5571:32;5561:60;;5617:1;5614;5607:12;5561:60;5640:5;5374:277;-1:-1:-1;;;5374:277:8:o;5656:135::-;5695:3;-1:-1:-1;;5716:17:8;;5713:43;;;5736:18;;:::i;:::-;-1:-1:-1;5783:1:8;5772:13;;5656:135::o;6796:783::-;7002:4;7050:2;7039:9;7035:18;7080:6;7069:9;7062:25;7106:2;7144:6;7139:2;7128:9;7124:18;7117:34;7187:2;7182;7171:9;7167:18;7160:30;7210:6;7245;7239:13;7276:6;7268;7261:22;7314:3;7303:9;7299:19;7292:26;;7353:2;7345:6;7341:15;7327:29;;7374:1;7384:169;7398:6;7395:1;7392:13;7384:169;;;7459:13;;7447:26;;7528:15;;;;7493:12;;;;7420:1;7413:9;7384:169;;;-1:-1:-1;7570:3:8;;6796:783;-1:-1:-1;;;;;;;;6796:783:8:o;8364:217::-;8404:1;8430;8420:132;;8474:10;8469:3;8465:20;8462:1;8455:31;8509:4;8506:1;8499:15;8537:4;8534:1;8527:15;8420:132;-1:-1:-1;8566:9:8;;8364:217::o;8966:128::-;9006:3;9037:1;9033:6;9030:1;9027:13;9024:39;;;9043:18;;:::i;:::-;-1:-1:-1;9079:9:8;;8966:128::o",
  "language": "Solidity",
  "natspec": {
    "author": "metapriest, adrian.wachel, marek.babiarz, radoslaw.gorecki",
    "details": "The contract cannot introspect into the contents of the merkle tree, except when provided a merkle proof",
    "kind": "dev",
    "methods": {
      "addMerkleRoot(bytes32,bytes32,address,uint256)": {
        "details": "Anyone may call this function, therefore we must make sure trees cannot affect each otherRoot hash should be built from (destination, totalCoins, startTime, endTime, lockPeriodEndTime)",
        "notice": "Add a new merkle tree to the contract, creating a new merkle-vesting-schedule",
        "params": {
          "ipfsHash": "the ipfs hash of the entire dataset, used for redundance so that creator can ensure merkleproof are always computable",
          "newRoot": "root hash of merkle tree representing vesting schedules",
          "tokenAddress": "the address of the token contract that is being distributed",
          "tokenBalance": "the amount of tokens user wishes to use to fund the airdrop, note trees can be under/overfunded"
        }
      },
      "depositTokens(uint256,uint256)": {
        "details": "Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree maliciousIf the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs",
        "notice": "Add funds to an existing merkle-vesting-schedule",
        "params": {
          "treeIndex": "index into array-like map of merkleTrees",
          "value": "the amount of tokens user wishes to use to fund the airdrop, note trees can be underfunded"
        }
      },
      "initialize(uint256,address,uint256,uint256,uint256,uint256,bytes32[])": {
        "details": "Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree maliciousIf the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs of global tree statsThe contract has no knowledge of the vesting schedules until this function is called",
        "notice": "Called once per recipient of a vesting schedule to initialize the vesting schedule",
        "params": {
          "destination": "address that will receive tokens",
          "endTime": "time vesting schedule completes, can be past or future",
          "lockPeriodEndTime": "time that coins become unlocked, can be after endTime",
          "proof": "array of hashes linking leaf hash of (destination, totalCoins, startTime, endTime, lockPeriodEndTime) to root",
          "startTime": "time that vesting schedule starts, can be past or future",
          "totalCoins": "amount of tokens to be released after vesting completes",
          "treeIndex": "index into array-like map of merkleTrees"
        }
      },
      "withdraw(uint256,uint256)": {
        "details": "Anyone may call this function for anyone else, funds go to destination regardless, it's just a question ofwho provides the proof and pays the gas, msg.sender is not used in this function",
        "notice": "Claim funds as a recipient in the merkle-drop",
        "params": {
          "trancheIndex": "recipient of tokens",
          "treeIndex": "index into array-like map of merkleTrees, which tree should we apply the proof to?"
        }
      }
    },
    "notice": "This contract is permissionless and public facing. Any fees must be included in the data of the merkle tree.",
    "title": "A factory pattern for merkle-vesting, that is, a time release schedule for tokens, using merkle proofs to scale",
    "version": 1
  },
  "offset": [
    558,
    12541
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85D88CB1 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x85D88CB1 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x9E18A054 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA8EFA9BA EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xF16AD51E EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB42ABF2 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x390B7C66 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP6 MSTORE PUSH1 0x5 SWAP4 DUP5 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP3 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD SWAP5 DUP5 ADD SLOAD PUSH1 0x6 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19D PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP6 DUP6 MSTORE PUSH1 0x5 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH4 0xC0859153 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH3 0x4BE61F PUSH1 0xE1 SHL SUB NOT DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x18C0DC67 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0x2D0 JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD PUSH2 0x2E4 SWAP1 TIMESTAMP PUSH2 0xC3A JUMP JUMPDEST PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST SWAP1 POP JUMPDEST TIMESTAMP PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0xC89 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x42A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x45C DUP3 DUP5 PUSH2 0xC3A JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0xC3A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP8 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0xC3A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP6 SLOAD PUSH1 0x2 DUP8 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP12 SWAP2 PUSH32 0x1680E4CFE90468085407EF2B599DBE94B0AA30FF9F180F0E41D22EB71C872872 SWAP2 PUSH2 0x4DE SWAP2 DUP7 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD PUSH2 0x505 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE SWAP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x552 SWAP1 DUP4 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 SWAP2 PUSH32 0xB72EA3ED46A7513251023946D5D35916F3E1D76D748BB144E641D1162DEE222F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP8 ISZERO DUP1 PUSH2 0x5B1 JUMPI POP PUSH1 0x0 SLOAD DUP9 GT JUMPDEST ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x190A97AD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x6 DUP2 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH1 0xFF AND ISZERO PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA0B07031 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x251 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2769CD1F PUSH1 0xE2 SHL DUP2 MSTORE PUSH20 0x0 SWAP2 PUSH4 0x9DA7347C SWAP2 PUSH2 0x6A3 SWAP2 SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x6C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x707 JUMPI DUP10 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH4 0xDA5A8FD PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x72C DUP9 DUP9 PUSH2 0xC3A JUMP JUMPDEST PUSH2 0x736 SWAP1 DUP11 PUSH2 0xD22 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE POP DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP5 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD PUSH2 0x792 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP5 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND OR DUP3 SSTORE SWAP4 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE DUP5 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 SWAP1 SWAP6 ADD MLOAD PUSH1 0x7 SWAP1 SWAP2 ADD SSTORE SWAP3 DUP6 ADD SLOAD SWAP1 MLOAD SWAP2 DUP14 AND SWAP3 SWAP1 SWAP2 DUP15 SWAP2 PUSH32 0x8D1A99FB79BA81AA040238D9DF7033B8A8A3048D382036A272839A9C2A2616B5 SWAP2 LOG4 TIMESTAMP DUP7 LT ISZERO PUSH2 0x859 JUMPI PUSH2 0x859 DUP12 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x20C JUMP JUMPDEST POP PUSH1 0x4 ADD SLOAD SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x879 JUMPI POP PUSH1 0x0 SLOAD DUP3 GT JUMPDEST ISZERO PUSH2 0x89A JUMPI PUSH1 0x40 MLOAD PUSH4 0x190A97AD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91B SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x971 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x995 SWAP2 SWAP1 PUSH2 0xC89 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA01 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA0F DUP4 DUP4 PUSH2 0xC3A JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0xD44 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xB162210DA7D23D82C18CFF5AF46D3562661D26B42A6848FA28D64A6BDC70386A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0xAFD PUSH1 0x40 DUP7 ADD PUSH2 0xAB4 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xB3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 PUSH2 0xB4F DUP2 DUP11 ADD PUSH2 0xAB4 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xBAE JUMPI PUSH2 0xBAE PUSH2 0xB0D JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD3 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP15 DUP4 GT ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xC0F JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xBF6 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC4C JUMPI PUSH2 0xC4C PUSH2 0xC24 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC6B PUSH2 0xC24 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xCC6 JUMPI PUSH2 0xCC6 PUSH2 0xC24 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 DUP6 DUP2 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD14 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xCF8 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD3F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD57 JUMPI PUSH2 0xD57 PUSH2 0xC24 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH28 0xF1099F2835AF2102D2F1FC5E724E3DB355971F3AE6A385C51A217844 DUP8 PUSH14 0x64736F6C634300080C0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        558,
        12541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x85D88CB1"
    },
    "38": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x85D88CB1"
    },
    "49": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x157"
    },
    "53": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9E18A054"
    },
    "60": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D3"
    },
    "64": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA8EFA9BA"
    },
    "71": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E6"
    },
    "75": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF16AD51E"
    },
    "82": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F9"
    },
    "86": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "90": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "REVERT",
      "path": "6"
    },
    "91": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "92": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "93": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xB42ABF2"
    },
    "98": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "EQ",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x390B7C66"
    },
    "109": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B"
    },
    "113": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x441A3E70"
    },
    "120": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x142"
    },
    "124": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        558,
        12541
      ],
      "op": "REVERT",
      "path": "6"
    },
    "130": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "131": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE7"
    },
    "134": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x90"
    },
    "137": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "138": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "140": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA79"
    },
    "143": {
      "fn": "MerkleVesting.getTranche",
      "jump": "i",
      "offset": [
        12161,
        12538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "144": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "145": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12239,
        12246
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "147": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "148": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "DUP3",
      "path": "6"
    },
    "149": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "150": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12331
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "152": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "154": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "DUP2",
      "path": "6"
    },
    "155": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "DUP2",
      "path": "6"
    },
    "156": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "157": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "159": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "DUP1",
      "path": "6"
    },
    "160": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "DUP6",
      "path": "6"
    },
    "161": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12342
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "162": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12365
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "163": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12365
      ],
      "op": "DUP6",
      "path": "6"
    },
    "164": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12365
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "165": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12351
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "167": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12351
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "168": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12351
      ],
      "op": "DUP5",
      "path": "6"
    },
    "169": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12351
      ],
      "op": "ADD",
      "path": "6"
    },
    "170": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12365
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "171": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12365
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "172": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12365
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "173": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12365
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "174": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12365
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "175": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12320,
        12365
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "176": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12383,
        12400
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 0
    },
    "177": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12383,
        12400
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "178": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12402,
        12420
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "179": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12402,
        12420
      ],
      "op": "DUP2",
      "path": "6"
    },
    "180": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12402,
        12420
      ],
      "op": "ADD",
      "path": "6"
    },
    "181": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12402,
        12420
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "182": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12422,
        12442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "184": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12422,
        12442
      ],
      "op": "DUP3",
      "path": "6"
    },
    "185": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12422,
        12442
      ],
      "op": "ADD",
      "path": "6"
    },
    "186": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12422,
        12442
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "187": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12444,
        12461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "189": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12444,
        12461
      ],
      "op": "DUP4",
      "path": "6"
    },
    "190": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12444,
        12461
      ],
      "op": "ADD",
      "path": "6"
    },
    "191": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12444,
        12461
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "192": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12463,
        12478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "194": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12463,
        12478
      ],
      "op": "DUP5",
      "path": "6"
    },
    "195": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12463,
        12478
      ],
      "op": "ADD",
      "path": "6"
    },
    "196": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12463,
        12478
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "197": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12480,
        12502
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "198": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12480,
        12502
      ],
      "op": "DUP5",
      "path": "6"
    },
    "199": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12480,
        12502
      ],
      "op": "ADD",
      "path": "6"
    },
    "200": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12480,
        12502
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "201": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12504,
        12530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "203": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12504,
        12530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "204": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12504,
        12530
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "205": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12504,
        12530
      ],
      "op": "ADD",
      "path": "6"
    },
    "206": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12504,
        12530
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "213": {
      "op": "SHL"
    },
    "214": {
      "op": "SUB"
    },
    "215": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12383,
        12400
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "216": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12383,
        12400
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "217": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12383,
        12400
      ],
      "op": "AND",
      "path": "6"
    },
    "218": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12383,
        12400
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "219": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12402,
        12420
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "220": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12402,
        12420
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "221": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12422,
        12442
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "222": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12422,
        12442
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "223": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12444,
        12461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "224": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12444,
        12461
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "225": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12463,
        12478
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "226": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12463,
        12478
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "227": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12480,
        12502
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "228": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12480,
        12502
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "229": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12504,
        12530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "230": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "JUMP",
      "path": "6"
    },
    "231": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "232": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "234": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "235": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "242": {
      "op": "SHL"
    },
    "243": {
      "op": "SUB"
    },
    "244": {
      "op": "SWAP1"
    },
    "245": {
      "op": "SWAP9"
    },
    "246": {
      "op": "AND"
    },
    "247": {
      "op": "DUP9"
    },
    "248": {
      "op": "MSTORE"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "251": {
      "op": "DUP9"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "op": "SWAP7"
    },
    "254": {
      "op": "SWAP1"
    },
    "255": {
      "op": "SWAP7"
    },
    "256": {
      "op": "MSTORE"
    },
    "257": {
      "op": "SWAP5"
    },
    "258": {
      "op": "DUP7"
    },
    "259": {
      "op": "ADD"
    },
    "260": {
      "op": "SWAP4"
    },
    "261": {
      "op": "SWAP1"
    },
    "262": {
      "op": "SWAP4"
    },
    "263": {
      "op": "MSTORE"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "266": {
      "op": "DUP6"
    },
    "267": {
      "op": "ADD"
    },
    "268": {
      "op": "SWAP2"
    },
    "269": {
      "op": "SWAP1"
    },
    "270": {
      "op": "SWAP2"
    },
    "271": {
      "op": "MSTORE"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "274": {
      "op": "DUP5"
    },
    "275": {
      "op": "ADD"
    },
    "276": {
      "op": "MSTORE"
    },
    "277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "279": {
      "op": "DUP4"
    },
    "280": {
      "op": "ADD"
    },
    "281": {
      "op": "MSTORE"
    },
    "282": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "284": {
      "op": "DUP3"
    },
    "285": {
      "op": "ADD"
    },
    "286": {
      "op": "MSTORE"
    },
    "287": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "289": {
      "op": "ADD"
    },
    "290": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "291": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "293": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "294": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "DUP1",
      "path": "6"
    },
    "295": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "296": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "SUB",
      "path": "6"
    },
    "297": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "298": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        12161,
        12538
      ],
      "op": "RETURN",
      "path": "6"
    },
    "299": {
      "offset": [
        677,
        697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "300": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        677,
        697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "303": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        677,
        697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "305": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        677,
        697
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "306": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        677,
        697
      ],
      "op": "DUP2",
      "path": "6"
    },
    "307": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        677,
        697
      ],
      "op": "JUMP",
      "path": "6"
    },
    "308": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        677,
        697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "309": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        677,
        697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "311": {
      "fn": "MerkleVesting.getTranche",
      "offset": [
        677,
        697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "312": {
      "op": "SWAP1"
    },
    "313": {
      "op": "DUP2"
    },
    "314": {
      "op": "MSTORE"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "317": {
      "op": "ADD"
    },
    "318": {
      "offset": [
        677,
        697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x122"
    },
    "321": {
      "op": "JUMP"
    },
    "322": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "323": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "326": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x150"
    },
    "329": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "330": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "332": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA79"
    },
    "335": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        9847,
        12155
      ],
      "op": "JUMP",
      "path": "6"
    },
    "336": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "337": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20C"
    },
    "340": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        9847,
        12155
      ],
      "op": "JUMP",
      "path": "6"
    },
    "341": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "342": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "STOP",
      "path": "6"
    },
    "343": {
      "offset": [
        2260,
        2307
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "344": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19D"
    },
    "347": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "350": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "351": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "353": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9B"
    },
    "356": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2260,
        2307
      ],
      "op": "JUMP",
      "path": "6"
    },
    "357": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "358": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "360": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "362": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "DUP2",
      "path": "6"
    },
    "363": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "364": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "365": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "367": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "368": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "DUP3",
      "path": "6"
    },
    "369": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "370": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "372": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "373": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "374": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "375": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "DUP1",
      "path": "6"
    },
    "376": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "377": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "378": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "DUP2",
      "path": "6"
    },
    "379": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "ADD",
      "path": "6"
    },
    "380": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "381": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "383": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "DUP3",
      "path": "6"
    },
    "384": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "ADD",
      "path": "6"
    },
    "385": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "386": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "388": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "DUP4",
      "path": "6"
    },
    "389": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "ADD",
      "path": "6"
    },
    "390": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "391": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "393": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "394": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "395": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "ADD",
      "path": "6"
    },
    "396": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "397": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "398": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "408": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "409": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "AND",
      "path": "6"
    },
    "410": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "411": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "DUP6",
      "path": "6"
    },
    "412": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "JUMP",
      "path": "6"
    },
    "413": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "414": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "416": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "DUP1",
      "path": "6"
    },
    "417": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2260,
        2307
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "418": {
      "op": "SWAP6"
    },
    "419": {
      "op": "DUP7"
    },
    "420": {
      "op": "MSTORE"
    },
    "421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "423": {
      "op": "DUP7"
    },
    "424": {
      "op": "ADD"
    },
    "425": {
      "op": "SWAP5"
    },
    "426": {
      "op": "SWAP1"
    },
    "427": {
      "op": "SWAP5"
    },
    "428": {
      "op": "MSTORE"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "435": {
      "op": "SHL"
    },
    "436": {
      "op": "SUB"
    },
    "437": {
      "op": "SWAP1"
    },
    "438": {
      "op": "SWAP3"
    },
    "439": {
      "op": "AND"
    },
    "440": {
      "op": "SWAP3"
    },
    "441": {
      "op": "DUP5"
    },
    "442": {
      "op": "ADD"
    },
    "443": {
      "op": "SWAP3"
    },
    "444": {
      "op": "SWAP1"
    },
    "445": {
      "op": "SWAP3"
    },
    "446": {
      "op": "MSTORE"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "449": {
      "op": "DUP4"
    },
    "450": {
      "op": "ADD"
    },
    "451": {
      "op": "SWAP2"
    },
    "452": {
      "op": "SWAP1"
    },
    "453": {
      "op": "SWAP2"
    },
    "454": {
      "op": "MSTORE"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "457": {
      "op": "DUP3"
    },
    "458": {
      "op": "ADD"
    },
    "459": {
      "op": "MSTORE"
    },
    "460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "462": {
      "op": "ADD"
    },
    "463": {
      "offset": [
        2260,
        2307
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x122"
    },
    "466": {
      "op": "JUMP"
    },
    "467": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "468": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "471": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E1"
    },
    "474": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "475": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "477": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD0"
    },
    "480": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        3962,
        4449
      ],
      "op": "JUMP",
      "path": "6"
    },
    "481": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "482": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F1"
    },
    "485": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        3962,
        4449
      ],
      "op": "JUMP",
      "path": "6"
    },
    "486": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7193,
        9409
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "487": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7193,
        9409
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "490": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7193,
        9409
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F4"
    },
    "493": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7193,
        9409
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "494": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7193,
        9409
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "496": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7193,
        9409
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB23"
    },
    "499": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        7193,
        9409
      ],
      "op": "JUMP",
      "path": "6"
    },
    "500": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7193,
        9409
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "501": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7193,
        9409
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A1"
    },
    "504": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        7193,
        9409
      ],
      "op": "JUMP",
      "path": "6"
    },
    "505": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "506": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "509": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x207"
    },
    "512": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "513": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "515": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA79"
    },
    "518": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        4945,
        6136
      ],
      "op": "JUMP",
      "path": "6"
    },
    "519": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "520": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x86B"
    },
    "523": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        4945,
        6136
      ],
      "op": "JUMP",
      "path": "6"
    },
    "524": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "525": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9918,
        9941
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "527": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "DUP3",
      "path": "6"
    },
    "528": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "529": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "530": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "532": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "534": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "535": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "DUP2",
      "path": "6"
    },
    "536": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "537": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "539": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "DUP1",
      "path": "6"
    },
    "540": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "DUP5",
      "path": "6"
    },
    "541": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9944,
        9966
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "542": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10029
      ],
      "op": "DUP6",
      "path": "6"
    },
    "543": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10029
      ],
      "op": "DUP6",
      "path": "6"
    },
    "544": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10029
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "545": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10015
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "547": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10015
      ],
      "op": "DUP2",
      "path": "6"
    },
    "548": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10015
      ],
      "op": "ADD",
      "path": "6"
    },
    "549": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10029
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "550": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10029
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "551": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10029
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "552": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10029
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "553": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10029
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "554": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10002,
        10029
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "555": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10113,
        10131
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 1
    },
    "556": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10113,
        10131
      ],
      "op": "DUP2",
      "path": "6"
    },
    "557": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10113,
        10131
      ],
      "op": "ADD",
      "path": "6"
    },
    "558": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10113,
        10131
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "559": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10109,
        10215
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25A"
    },
    "562": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10109,
        10215
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "563": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "565": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "566": {
      "op": "PUSH4",
      "value": "0xC0859153"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "DUP2",
      "path": "6"
    },
    "575": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "576": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "578": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "DUP2",
      "path": "6"
    },
    "579": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "ADD",
      "path": "6"
    },
    "580": {
      "op": "DUP6"
    },
    "581": {
      "op": "SWAP1"
    },
    "582": {
      "op": "MSTORE"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "585": {
      "op": "DUP2"
    },
    "586": {
      "op": "ADD"
    },
    "587": {
      "op": "DUP5"
    },
    "588": {
      "op": "SWAP1"
    },
    "589": {
      "op": "MSTORE"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "592": {
      "op": "ADD"
    },
    "593": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "594": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "596": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "597": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "DUP1",
      "path": "6"
    },
    "598": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "599": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "SUB",
      "path": "6"
    },
    "600": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "601": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10159,
        10204
      ],
      "op": "REVERT",
      "path": "6"
    },
    "602": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10109,
        10215
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "603": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10295,
        10302
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 2
    },
    "604": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10295,
        10320
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "606": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10295,
        10320
      ],
      "op": "ADD",
      "path": "6"
    },
    "607": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10295,
        10320
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "608": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10277,
        10292
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "609": {
      "branch": 28,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10277,
        10320
      ],
      "op": "LT",
      "path": "6"
    },
    "610": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10273,
        10397
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "611": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10273,
        10397
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28C"
    },
    "614": {
      "branch": 28,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10273,
        10397
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "615": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10343,
        10386
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "617": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10343,
        10386
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH3",
      "value": "0x4BE61F"
    },
    "624": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "626": {
      "op": "SHL"
    },
    "627": {
      "op": "SUB"
    },
    "628": {
      "op": "NOT"
    },
    "629": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10343,
        10386
      ],
      "op": "DUP2",
      "path": "6"
    },
    "630": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10343,
        10386
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "631": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10343,
        10386
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "633": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10343,
        10386
      ],
      "op": "DUP2",
      "path": "6"
    },
    "634": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10343,
        10386
      ],
      "op": "ADD",
      "path": "6"
    },
    "635": {
      "op": "DUP6"
    },
    "636": {
      "op": "SWAP1"
    },
    "637": {
      "op": "MSTORE"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "640": {
      "op": "DUP2"
    },
    "641": {
      "op": "ADD"
    },
    "642": {
      "op": "DUP5"
    },
    "643": {
      "op": "SWAP1"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10343,
        10386
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x251"
    },
    "651": {
      "op": "JUMP"
    },
    "652": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10273,
        10397
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "653": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10453,
        10473
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x2"
    },
    "655": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10453,
        10473
      ],
      "op": "DUP2",
      "path": "6"
    },
    "656": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10453,
        10473
      ],
      "op": "ADD",
      "path": "6"
    },
    "657": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10453,
        10473
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "658": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10449,
        10549
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "661": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10449,
        10549
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "662": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10501,
        10538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "664": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10501,
        10538
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "665": {
      "op": "PUSH4",
      "value": "0x18C0DC67"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10501,
        10538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "674": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10501,
        10538
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "675": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10501,
        10538
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "677": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10501,
        10538
      ],
      "op": "DUP2",
      "path": "6"
    },
    "678": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10501,
        10538
      ],
      "op": "ADD",
      "path": "6"
    },
    "679": {
      "op": "DUP6"
    },
    "680": {
      "op": "SWAP1"
    },
    "681": {
      "op": "MSTORE"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "684": {
      "op": "DUP2"
    },
    "685": {
      "op": "ADD"
    },
    "686": {
      "op": "DUP5"
    },
    "687": {
      "op": "SWAP1"
    },
    "688": {
      "op": "MSTORE"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "691": {
      "op": "ADD"
    },
    "692": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10501,
        10538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x251"
    },
    "695": {
      "op": "JUMP"
    },
    "696": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10449,
        10549
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "697": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10606,
        10628
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "699": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10733,
        10740
      ],
      "op": "DUP2",
      "path": "6"
    },
    "700": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10733,
        10748
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "702": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10733,
        10748
      ],
      "op": "ADD",
      "path": "6"
    },
    "703": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10733,
        10748
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "704": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10714,
        10729
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "705": {
      "branch": 29,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10714,
        10748
      ],
      "op": "LT",
      "path": "6"
    },
    "706": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10710,
        10979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D0"
    },
    "709": {
      "branch": 29,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10710,
        10979
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "710": {
      "op": "POP"
    },
    "711": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10784,
        10804
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x2"
    },
    "713": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10784,
        10804
      ],
      "op": "DUP2",
      "path": "6"
    },
    "714": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10784,
        10804
      ],
      "op": "ADD",
      "path": "6"
    },
    "715": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10784,
        10804
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "716": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10710,
        10979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F1"
    },
    "719": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10710,
        10979
      ],
      "op": "JUMP",
      "path": "6"
    },
    "720": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10710,
        10979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "721": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10946,
        10968
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x5"
    },
    "723": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10946,
        10968
      ],
      "op": "DUP3",
      "path": "6"
    },
    "724": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10946,
        10968
      ],
      "op": "ADD",
      "path": "6"
    },
    "725": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10946,
        10968
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "726": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10916,
        10942
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "728": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10916,
        10942
      ],
      "op": "DUP4",
      "path": "6"
    },
    "729": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10916,
        10942
      ],
      "op": "ADD",
      "path": "6"
    },
    "730": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10916,
        10942
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "731": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10898,
        10942
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E4"
    },
    "734": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10898,
        10942
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "735": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10898,
        10913
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "736": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10898,
        10942
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3A"
    },
    "739": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        10898,
        10942
      ],
      "op": "JUMP",
      "path": "6"
    },
    "740": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10898,
        10942
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "741": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10897,
        10968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EE"
    },
    "744": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10897,
        10968
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "745": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10897,
        10968
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "746": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10897,
        10968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC51"
    },
    "749": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        10897,
        10968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "750": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10897,
        10968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "751": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10877,
        10968
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "752": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10877,
        10968
      ],
      "op": "POP",
      "path": "6"
    },
    "753": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10710,
        10979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "754": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11103,
        11118
      ],
      "op": "TIMESTAMP",
      "path": "6",
      "statement": 6
    },
    "755": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11074,
        11100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "757": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11074,
        11100
      ],
      "op": "DUP4",
      "path": "6"
    },
    "758": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11074,
        11100
      ],
      "op": "ADD",
      "path": "6"
    },
    "759": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11074,
        11118
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "760": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11151,
        11168
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "762": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11151,
        11168
      ],
      "op": "DUP4",
      "path": "6"
    },
    "763": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11151,
        11168
      ],
      "op": "ADD",
      "path": "6"
    },
    "764": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11151,
        11168
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "765": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "767": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "768": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP2",
      "path": "6"
    },
    "777": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "778": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11224,
        11228
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "779": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "781": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP3",
      "path": "6"
    },
    "782": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "ADD",
      "path": "6"
    },
    "783": {
      "op": "MSTORE"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "790": {
      "op": "SHL"
    },
    "791": {
      "op": "SUB"
    },
    "792": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11151,
        11168
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "793": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11151,
        11168
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "794": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11151,
        11168
      ],
      "op": "AND",
      "path": "6"
    },
    "795": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11151,
        11168
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "796": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11129,
        11141
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "798": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11129,
        11141
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "799": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11151,
        11168
      ],
      "op": "DUP3",
      "path": "6"
    },
    "800": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11151,
        11168
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "801": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11215
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "806": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11215
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "809": {
      "op": "ADD"
    },
    "810": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "812": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "814": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "815": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP1",
      "path": "6"
    },
    "816": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP4",
      "path": "6"
    },
    "817": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "SUB",
      "path": "6"
    },
    "818": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP2",
      "path": "6"
    },
    "819": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP7",
      "path": "6"
    },
    "820": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "GAS",
      "path": "6"
    },
    "821": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "822": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "823": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP1",
      "path": "6"
    },
    "824": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "825": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x346"
    },
    "828": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "829": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "830": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "832": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP1",
      "path": "6"
    },
    "833": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "834": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "835": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "837": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "REVERT",
      "path": "6"
    },
    "838": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "839": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "POP",
      "path": "6"
    },
    "840": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "POP",
      "path": "6"
    },
    "841": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "POP",
      "path": "6"
    },
    "842": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "POP",
      "path": "6"
    },
    "843": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "845": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "846": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "847": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "849": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "NOT",
      "path": "6"
    },
    "850": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "852": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP3",
      "path": "6"
    },
    "853": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "ADD",
      "path": "6"
    },
    "854": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "AND",
      "path": "6"
    },
    "855": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP3",
      "path": "6"
    },
    "856": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "ADD",
      "path": "6"
    },
    "857": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP1",
      "path": "6"
    },
    "858": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "860": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "861": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "POP",
      "path": "6"
    },
    "862": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "DUP2",
      "path": "6"
    },
    "863": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "ADD",
      "path": "6"
    },
    "864": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "865": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36A"
    },
    "868": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "869": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "870": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC70"
    },
    "873": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11200,
        11230
      ],
      "op": "JUMP",
      "path": "6"
    },
    "874": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11200,
        11230
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "875": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11627,
        11644
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 7
    },
    "876": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11627,
        11644
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "877": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "879": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "880": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "885": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "887": {
      "op": "SHL"
    },
    "888": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP2",
      "path": "6"
    },
    "889": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "896": {
      "op": "SHL"
    },
    "897": {
      "op": "SUB"
    },
    "898": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11627,
        11644
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "899": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11627,
        11644
      ],
      "op": "DUP3",
      "path": "6"
    },
    "900": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11627,
        11644
      ],
      "op": "AND",
      "path": "6"
    },
    "901": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "903": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP3",
      "path": "6"
    },
    "904": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "ADD",
      "path": "6"
    },
    "905": {
      "op": "MSTORE"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "908": {
      "op": "DUP2"
    },
    "909": {
      "op": "ADD"
    },
    "910": {
      "op": "DUP7"
    },
    "911": {
      "op": "SWAP1"
    },
    "912": {
      "op": "MSTORE"
    },
    "913": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11179,
        11230
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "914": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11179,
        11230
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11626
      ],
      "op": "DUP4",
      "path": "6"
    },
    "917": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11626
      ],
      "op": "AND",
      "path": "6"
    },
    "918": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11626
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "919": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11626
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "924": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11626
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "927": {
      "op": "ADD"
    },
    "928": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "930": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "932": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "933": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP1",
      "path": "6"
    },
    "934": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP4",
      "path": "6"
    },
    "935": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "SUB",
      "path": "6"
    },
    "936": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP2",
      "path": "6"
    },
    "937": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "939": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP8",
      "path": "6"
    },
    "940": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "GAS",
      "path": "6"
    },
    "941": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "CALL",
      "path": "6"
    },
    "942": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "943": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP1",
      "path": "6"
    },
    "944": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "945": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3BE"
    },
    "948": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "949": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "950": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "952": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP1",
      "path": "6"
    },
    "953": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "954": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "955": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "957": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "REVERT",
      "path": "6"
    },
    "958": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "959": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "POP",
      "path": "6"
    },
    "960": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "POP",
      "path": "6"
    },
    "961": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "POP",
      "path": "6"
    },
    "962": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "POP",
      "path": "6"
    },
    "963": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "965": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "966": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "967": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "969": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "NOT",
      "path": "6"
    },
    "970": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "972": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP3",
      "path": "6"
    },
    "973": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "ADD",
      "path": "6"
    },
    "974": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "AND",
      "path": "6"
    },
    "975": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP3",
      "path": "6"
    },
    "976": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "ADD",
      "path": "6"
    },
    "977": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP1",
      "path": "6"
    },
    "978": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "980": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "981": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "POP",
      "path": "6"
    },
    "982": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "DUP2",
      "path": "6"
    },
    "983": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "ADD",
      "path": "6"
    },
    "984": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "985": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E2"
    },
    "988": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "989": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "990": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC89"
    },
    "993": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11612,
        11664
      ],
      "op": "JUMP",
      "path": "6"
    },
    "994": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11612,
        11664
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "995": {
      "op": "POP"
    },
    "996": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "998": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "999": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1006": {
      "op": "SHL"
    },
    "1007": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1008": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1009": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11810,
        11814
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "1010": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1012": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1013": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "ADD",
      "path": "6"
    },
    "1014": {
      "op": "MSTORE"
    },
    "1015": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11766,
        11783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1017": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11766,
        11783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1024": {
      "op": "SHL"
    },
    "1025": {
      "op": "SUB"
    },
    "1026": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11801
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1027": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11801
      ],
      "op": "AND",
      "path": "6"
    },
    "1028": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1029": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11801
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "1034": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1037": {
      "op": "ADD"
    },
    "1038": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1040": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1042": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1043": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1044": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1045": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "SUB",
      "path": "6"
    },
    "1046": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1047": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1048": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "GAS",
      "path": "6"
    },
    "1049": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1050": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1051": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1052": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1053": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42A"
    },
    "1056": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1057": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1058": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1060": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1061": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1062": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1063": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1065": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1066": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1067": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "POP",
      "path": "6"
    },
    "1068": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "POP",
      "path": "6"
    },
    "1069": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "POP",
      "path": "6"
    },
    "1070": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "POP",
      "path": "6"
    },
    "1071": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1073": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1074": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1075": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1077": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "NOT",
      "path": "6"
    },
    "1078": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1080": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1081": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "ADD",
      "path": "6"
    },
    "1082": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "AND",
      "path": "6"
    },
    "1083": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1084": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "ADD",
      "path": "6"
    },
    "1085": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1086": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1088": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1089": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "POP",
      "path": "6"
    },
    "1090": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1091": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "ADD",
      "path": "6"
    },
    "1092": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1093": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x44E"
    },
    "1096": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1097": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1098": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC70"
    },
    "1101": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11786,
        11816
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1102": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11786,
        11816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1103": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11766,
        11816
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11826,
        11835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1107": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11838,
        11866
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45C"
    },
    "1110": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11766,
        11816
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1111": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11838,
        11851
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1112": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11838,
        11866
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3A"
    },
    "1115": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11838,
        11866
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1116": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11838,
        11866
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1117": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11826,
        11866
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1118": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11826,
        11866
      ],
      "op": "POP",
      "path": "6"
    },
    "1119": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11941,
        11945
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 8
    },
    "1120": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11924
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1121": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1123": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11937
      ],
      "op": "ADD",
      "path": "6"
    },
    "1124": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11937
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1126": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1127": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1128": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1129": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x472"
    },
    "1132": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1133": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1134": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3A"
    },
    "1137": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11917,
        11945
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1138": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1139": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1140": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "POP",
      "path": "6"
    },
    "1141": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "POP",
      "path": "6"
    },
    "1142": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1143": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1144": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1145": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11917,
        11945
      ],
      "op": "POP",
      "path": "6"
    },
    "1146": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12052,
        12056
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 9
    },
    "1147": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12035
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1148": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12048
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1150": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12048
      ],
      "op": "ADD",
      "path": "6"
    },
    "1151": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12048
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1153": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1154": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1155": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1156": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x48D"
    },
    "1159": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1160": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1161": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3A"
    },
    "1164": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        12031,
        12056
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1165": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1166": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1167": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1168": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12031,
        12056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12102,
        12119
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 10
    },
    "1172": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12102,
        12119
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1173": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12127,
        12147
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1175": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12127,
        12147
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1176": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12127,
        12147
      ],
      "op": "ADD",
      "path": "6"
    },
    "1177": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12127,
        12147
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1178": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1180": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1187": {
      "op": "SHL"
    },
    "1188": {
      "op": "SUB"
    },
    "1189": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12102,
        12119
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1190": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12102,
        12119
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1191": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12102,
        12119
      ],
      "op": "AND",
      "path": "6"
    },
    "1192": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12102,
        12119
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1193": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12091,
        12100
      ],
      "op": "DUP12",
      "path": "6"
    },
    "1194": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12091,
        12100
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1195": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x1680E4CFE90468085407EF2B599DBE94B0AA30FF9F180F0E41D22EB71C872872"
    },
    "1228": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1229": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DE"
    },
    "1232": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1233": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12121,
        12125
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1234": {
      "op": "DUP3"
    },
    "1235": {
      "op": "MSTORE"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1238": {
      "op": "DUP3"
    },
    "1239": {
      "op": "ADD"
    },
    "1240": {
      "op": "MSTORE"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1243": {
      "op": "ADD"
    },
    "1244": {
      "op": "SWAP1"
    },
    "1245": {
      "op": "JUMP"
    },
    "1246": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1247": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1249": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1250": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1251": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1252": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "SUB",
      "path": "6"
    },
    "1253": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1254": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        12072,
        12148
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1255": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9907,
        12155
      ],
      "op": "POP",
      "path": "6"
    },
    "1256": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9907,
        12155
      ],
      "op": "POP",
      "path": "6"
    },
    "1257": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9907,
        12155
      ],
      "op": "POP",
      "path": "6"
    },
    "1258": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9907,
        12155
      ],
      "op": "POP",
      "path": "6"
    },
    "1259": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9907,
        12155
      ],
      "op": "POP",
      "path": "6"
    },
    "1260": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9907,
        12155
      ],
      "op": "POP",
      "path": "6"
    },
    "1261": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9907,
        12155
      ],
      "op": "POP",
      "path": "6"
    },
    "1262": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "POP",
      "path": "6"
    },
    "1263": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9847,
        12155
      ],
      "op": "POP",
      "path": "6"
    },
    "1264": {
      "fn": "MerkleVesting.withdraw",
      "jump": "o",
      "offset": [
        9847,
        12155
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1265": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1266": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4134,
        4157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1268": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4171
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1270": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1272": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4174,
        4182
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1273": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4174,
        4182
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1275": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4172,
        4182
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1276": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4172,
        4182
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1277": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4172,
        4182
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x505"
    },
    "1280": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4172,
        4182
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1281": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4172,
        4182
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB2"
    },
    "1284": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        4172,
        4182
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1285": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4172,
        4182
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1286": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4172,
        4182
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1287": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4172,
        4182
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1288": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4172,
        4182
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1289": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4172,
        4182
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1290": {
      "op": "POP"
    },
    "1291": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1292": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1293": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1295": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1296": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "ADD",
      "path": "6"
    },
    "1297": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1298": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1299": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1300": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1301": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1303": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "ADD",
      "path": "6"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1306": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1307": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1308": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1309": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4193,
        4216
      ],
      "op": "DUP7",
      "path": "6",
      "statement": 11
    },
    "1310": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4193,
        4216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1311": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4193,
        4216
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1312": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4226,
        4239
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x1"
    },
    "1314": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4226,
        4239
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1315": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4226,
        4239
      ],
      "op": "ADD",
      "path": "6"
    },
    "1316": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4226,
        4250
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1317": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4226,
        4250
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1318": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4226,
        4250
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1319": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4277
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x2"
    },
    "1321": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4277
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1322": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4277
      ],
      "op": "ADD",
      "path": "6"
    },
    "1323": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4292
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1324": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4292
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1331": {
      "op": "SHL"
    },
    "1332": {
      "op": "SUB"
    },
    "1333": {
      "op": "NOT"
    },
    "1334": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4292
      ],
      "op": "AND",
      "path": "6"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "SUB"
    },
    "1343": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4292
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1344": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4292
      ],
      "op": "AND",
      "path": "6"
    },
    "1345": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4292
      ],
      "op": "OR",
      "path": "6"
    },
    "1346": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4292
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1347": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4292
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1348": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4346,
        4354
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 14
    },
    "1349": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4346,
        4354
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1350": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1351": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4160,
        4183
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1352": {
      "op": "POP"
    },
    "1353": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4332,
        4369
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x552"
    },
    "1356": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4332,
        4369
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1357": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4356,
        4368
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1358": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4332,
        4345
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x86B"
    },
    "1361": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        4332,
        4369
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1362": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4332,
        4369
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1363": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4400,
        4408
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 15,
      "value": "0x0"
    },
    "1365": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4400,
        4408
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1366": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1368": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1369": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1370": {
      "op": "DUP8"
    },
    "1371": {
      "op": "DUP2"
    },
    "1372": {
      "op": "MSTORE"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1375": {
      "op": "DUP2"
    },
    "1376": {
      "op": "ADD"
    },
    "1377": {
      "op": "DUP8"
    },
    "1378": {
      "op": "SWAP1"
    },
    "1379": {
      "op": "MSTORE"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1386": {
      "op": "SHL"
    },
    "1387": {
      "op": "SUB"
    },
    "1388": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1389": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "AND",
      "path": "6"
    },
    "1390": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1391": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4400,
        4408
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1392": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xB72EA3ED46A7513251023946D5D35916F3E1D76D748BB144E641D1162DEE222F"
    },
    "1425": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1429": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1430": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1431": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1432": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "SUB",
      "path": "6"
    },
    "1433": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1434": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4384,
        4442
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1435": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4068,
        4449
      ],
      "op": "POP",
      "path": "6"
    },
    "1436": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "POP",
      "path": "6"
    },
    "1437": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "POP",
      "path": "6"
    },
    "1438": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "POP",
      "path": "6"
    },
    "1439": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3962,
        4449
      ],
      "op": "POP",
      "path": "6"
    },
    "1440": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "o",
      "offset": [
        3962,
        4449
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1441": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7193,
        9409
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1442": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7420,
        7424
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1444": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7440,
        7454
      ],
      "op": "DUP8",
      "path": "6",
      "statement": 16
    },
    "1445": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7440,
        7454
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1446": {
      "branch": 30,
      "fn": "MerkleVesting.initialize",
      "offset": [
        7440,
        7454
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1447": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7440,
        7478
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B1"
    },
    "1450": {
      "branch": 30,
      "fn": "MerkleVesting.initialize",
      "offset": [
        7440,
        7478
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1451": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7440,
        7478
      ],
      "op": "POP",
      "path": "6"
    },
    "1452": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7470,
        7478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1454": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7470,
        7478
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1455": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7458,
        7467
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1456": {
      "branch": 31,
      "fn": "MerkleVesting.initialize",
      "offset": [
        7458,
        7478
      ],
      "op": "GT",
      "path": "6"
    },
    "1457": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7440,
        7478
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1458": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7436,
        7535
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1459": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7436,
        7535
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D2"
    },
    "1462": {
      "branch": 31,
      "fn": "MerkleVesting.initialize",
      "offset": [
        7436,
        7535
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1463": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7501,
        7524
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1465": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7501,
        7524
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1466": {
      "op": "PUSH4",
      "value": "0x190A97AD"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7501,
        7524
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1475": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7501,
        7524
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1476": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7501,
        7524
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1478": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7501,
        7524
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1479": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7501,
        7524
      ],
      "op": "ADD",
      "path": "6"
    },
    "1480": {
      "op": "DUP10"
    },
    "1481": {
      "op": "SWAP1"
    },
    "1482": {
      "op": "MSTORE"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7501,
        7524
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x251"
    },
    "1489": {
      "op": "JUMP"
    },
    "1490": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7436,
        7535
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1491": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1493": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1494": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "SUB"
    },
    "1503": {
      "op": "DUP10"
    },
    "1504": {
      "op": "AND"
    },
    "1505": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1507": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1508": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "ADD",
      "path": "6"
    },
    "1509": {
      "op": "MSTORE"
    },
    "1510": {
      "op": "SWAP1"
    },
    "1511": {
      "op": "DUP2"
    },
    "1512": {
      "op": "ADD"
    },
    "1513": {
      "op": "DUP8"
    },
    "1514": {
      "op": "SWAP1"
    },
    "1515": {
      "op": "MSTORE"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1518": {
      "op": "DUP2"
    },
    "1519": {
      "op": "ADD"
    },
    "1520": {
      "op": "DUP7"
    },
    "1521": {
      "op": "SWAP1"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1525": {
      "op": "DUP2"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "DUP6"
    },
    "1528": {
      "op": "SWAP1"
    },
    "1529": {
      "op": "MSTORE"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1532": {
      "op": "DUP2"
    },
    "1533": {
      "op": "ADD"
    },
    "1534": {
      "op": "DUP5"
    },
    "1535": {
      "op": "SWAP1"
    },
    "1536": {
      "op": "MSTORE"
    },
    "1537": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7720,
        7732
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1539": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7720,
        7732
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1542": {
      "op": "ADD"
    },
    "1543": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1545": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1546": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1549": {
      "op": "NOT"
    },
    "1550": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1551": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1552": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "SUB",
      "path": "6"
    },
    "1553": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "ADD",
      "path": "6"
    },
    "1554": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1555": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1556": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1557": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1558": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1559": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7735,
        7820
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1560": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7735,
        7820
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1561": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7745,
        7819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1563": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7735,
        7820
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1564": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7735,
        7820
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1565": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7735,
        7820
      ],
      "op": "ADD",
      "path": "6"
    },
    "1566": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7735,
        7820
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1567": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7911,
        7934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1569": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7937,
        7959
      ],
      "op": "DUP13",
      "path": "6"
    },
    "1570": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7937,
        7959
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1571": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7937,
        7959
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1572": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7937,
        7948
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1574": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7937,
        7959
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1575": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7937,
        7959
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1576": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7937,
        7959
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1577": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7937,
        7959
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1578": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7937,
        7959
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1579": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 17
    },
    "1580": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1581": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1582": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "1584": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8036
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1585": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8036
      ],
      "op": "ADD",
      "path": "6"
    },
    "1586": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1587": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1588": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1589": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1590": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1591": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1592": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1593": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1594": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7735,
        7820
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1595": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7735,
        7820
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1599": {
      "branch": 32,
      "fn": "MerkleVesting.initialize",
      "offset": [
        8020,
        8042
      ],
      "op": "AND",
      "path": "6"
    },
    "1600": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8016,
        8111
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1601": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8016,
        8111
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x667"
    },
    "1604": {
      "branch": 32,
      "fn": "MerkleVesting.initialize",
      "offset": [
        8016,
        8111
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1605": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8065,
        8100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1607": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8065,
        8100
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1608": {
      "op": "PUSH4",
      "value": "0xA0B07031"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8065,
        8100
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1617": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8065,
        8100
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1618": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8065,
        8100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1620": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8065,
        8100
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1621": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8065,
        8100
      ],
      "op": "ADD",
      "path": "6"
    },
    "1622": {
      "op": "DUP12"
    },
    "1623": {
      "op": "SWAP1"
    },
    "1624": {
      "op": "MSTORE"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1627": {
      "op": "DUP2"
    },
    "1628": {
      "op": "ADD"
    },
    "1629": {
      "op": "DUP4"
    },
    "1630": {
      "op": "SWAP1"
    },
    "1631": {
      "op": "MSTORE"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1634": {
      "op": "ADD"
    },
    "1635": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8065,
        8100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x251"
    },
    "1638": {
      "op": "JUMP"
    },
    "1639": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8016,
        8111
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1640": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8209
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 18
    },
    "1641": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8209
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1642": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1644": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1645": {
      "op": "PUSH4",
      "value": "0x2769CD1F"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1654": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1655": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8221
      ],
      "op": "PUSH20",
      "path": "6",
      "value": "0x0"
    },
    "1676": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8221
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1677": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8221
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x9DA7347C"
    },
    "1682": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8221
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1683": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A3"
    },
    "1686": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1687": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8209
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1688": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8222,
        8226
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1689": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8222,
        8226
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1690": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8228,
        8233
      ],
      "op": "DUP10",
      "path": "6"
    },
    "1691": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8228,
        8233
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1692": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1694": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "ADD",
      "path": "6"
    },
    "1695": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCCD"
    },
    "1698": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8196,
        8234
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1699": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1700": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1702": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1704": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1705": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1706": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1707": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "SUB",
      "path": "6"
    },
    "1708": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1709": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1710": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "GAS",
      "path": "6"
    },
    "1711": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DELEGATECALL",
      "path": "6"
    },
    "1712": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1713": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1714": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1715": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C0"
    },
    "1718": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1719": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1720": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1722": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1723": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1724": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1725": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1727": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1728": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1729": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "POP",
      "path": "6"
    },
    "1730": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "POP",
      "path": "6"
    },
    "1731": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "POP",
      "path": "6"
    },
    "1732": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "POP",
      "path": "6"
    },
    "1733": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1735": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1736": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1737": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1739": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "NOT",
      "path": "6"
    },
    "1740": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1742": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1743": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "ADD",
      "path": "6"
    },
    "1744": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "AND",
      "path": "6"
    },
    "1745": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1746": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "ADD",
      "path": "6"
    },
    "1747": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1748": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1750": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1751": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "POP",
      "path": "6"
    },
    "1752": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1753": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "ADD",
      "path": "6"
    },
    "1754": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1755": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6E4"
    },
    "1758": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1759": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1760": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC89"
    },
    "1763": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8196,
        8234
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1764": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8196,
        8234
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1765": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8192,
        8309
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x707"
    },
    "1768": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8192,
        8309
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1769": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8275,
        8284
      ],
      "op": "DUP10",
      "path": "6"
    },
    "1770": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8286,
        8290
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1771": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8292,
        8297
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1772": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1774": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1775": {
      "op": "PUSH4",
      "value": "0xDA5A8FD"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1782": {
      "op": "SHL"
    },
    "1783": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1784": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1785": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1787": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "ADD",
      "path": "6"
    },
    "1788": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x251"
    },
    "1791": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1792": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1793": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1794": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1795": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8266,
        8298
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCCD"
    },
    "1798": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8266,
        8298
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1799": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8192,
        8309
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1800": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8402
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 19,
      "value": "0x0"
    },
    "1802": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8402
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1803": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8402
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1804": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8402
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1805": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8396
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "1807": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8396
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1808": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8396
      ],
      "op": "ADD",
      "path": "6"
    },
    "1809": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8402
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1811": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8402
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1812": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8402
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1814": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8402
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1815": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8402
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1816": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8409
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1817": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8409
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1820": {
      "op": "NOT"
    },
    "1821": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8409
      ],
      "op": "AND",
      "path": "6"
    },
    "1822": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8405,
        8409
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1824": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8409
      ],
      "op": "OR",
      "path": "6"
    },
    "1825": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8409
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1826": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8409
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1827": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8613,
        8632
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x72C"
    },
    "1830": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8623,
        8632
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1831": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8613,
        8620
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1832": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8613,
        8632
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3A"
    },
    "1835": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8613,
        8632
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1836": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8613,
        8632
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1837": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8599,
        8633
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x736"
    },
    "1840": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8599,
        8633
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1841": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8599,
        8609
      ],
      "op": "DUP11",
      "path": "6"
    },
    "1842": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8599,
        8633
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD22"
    },
    "1845": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8599,
        8633
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1846": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8599,
        8633
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1847": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8577,
        8633
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1848": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8577,
        8633
      ],
      "op": "POP",
      "path": "6"
    },
    "1849": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 20,
      "value": "0x40"
    },
    "1851": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1852": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1853": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1856": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "1857": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1859": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1860": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1861": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8763,
        8774
      ],
      "op": "DUP12",
      "path": "6"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "op": "SUB"
    },
    "1870": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "AND",
      "path": "6"
    },
    "1871": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1872": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1873": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1875": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "1876": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8788,
        8798
      ],
      "op": "DUP11",
      "path": "6"
    },
    "1877": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1878": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1879": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1881": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "1882": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8843,
        8853
      ],
      "op": "DUP11",
      "path": "6"
    },
    "1883": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1884": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1885": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1887": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "1888": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8905,
        8914
      ],
      "op": "DUP10",
      "path": "6"
    },
    "1889": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1890": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1891": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1893": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "1894": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8928,
        8935
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1895": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1896": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1897": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1899": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "1900": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8949,
        8963
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1901": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1902": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1903": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1905": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "1906": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8977,
        8986
      ],
      "op": "DUP10",
      "path": "6"
    },
    "1907": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1908": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1909": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1911": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "1912": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9041,
        9058
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1913": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1914": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1915": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8742,
        9068
      ],
      "op": "POP",
      "path": "6"
    },
    "1916": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8699
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1917": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8708
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1919": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8708
      ],
      "op": "ADD",
      "path": "6"
    },
    "1920": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1922": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8711,
        8715
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1923": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8711,
        8738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1925": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8711,
        8738
      ],
      "op": "ADD",
      "path": "6"
    },
    "1926": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8711,
        8738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1928": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8709,
        8738
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1929": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8709,
        8738
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1930": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8709,
        8738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x792"
    },
    "1933": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8709,
        8738
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1934": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8709,
        8738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB2"
    },
    "1937": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8709,
        8738
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1938": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8709,
        8738
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1939": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8709,
        8738
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1940": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8709,
        8738
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1941": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8709,
        8738
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1942": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8709,
        8738
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1943": {
      "op": "POP"
    },
    "1944": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1945": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1946": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1948": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1949": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1950": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "ADD",
      "path": "6"
    },
    "1951": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1952": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1953": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1954": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1955": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1957": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1958": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1959": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "ADD",
      "path": "6"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1962": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1963": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1964": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        8739
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1965": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1966": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1967": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1968": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1975": {
      "op": "SHL"
    },
    "1976": {
      "op": "SUB"
    },
    "1977": {
      "op": "NOT"
    },
    "1978": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "AND",
      "path": "6"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1985": {
      "op": "SHL"
    },
    "1986": {
      "op": "SUB"
    },
    "1987": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1988": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1989": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "AND",
      "path": "6"
    },
    "1990": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "OR",
      "path": "6"
    },
    "1991": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1992": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1993": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1994": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1995": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "1996": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2000": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2001": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2002": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2003": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2004": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2005": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2006": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2008": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2009": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2010": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2011": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2013": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2014": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2015": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2016": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2018": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2019": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2020": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2021": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2023": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2024": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2025": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2026": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2028": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2029": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2030": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2031": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2032": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2033": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2034": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2035": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "2037": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2038": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2039": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2040": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "2042": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2043": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2044": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2045": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC0"
    },
    "2047": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2048": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2049": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2050": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "2052": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2053": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2054": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2055": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2057": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2058": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "2059": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2060": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2061": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "2063": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2064": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2065": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "ADD",
      "path": "6"
    },
    "2066": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8695,
        9068
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2067": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9114,
        9141
      ],
      "op": "SWAP3",
      "path": "6",
      "statement": 21
    },
    "2068": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9114,
        9141
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2069": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9114,
        9141
      ],
      "op": "ADD",
      "path": "6"
    },
    "2070": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9114,
        9141
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2071": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9084,
        9155
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2072": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9084,
        9155
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2073": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9084,
        9155
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2074": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9084,
        9155
      ],
      "op": "DUP14",
      "path": "6"
    },
    "2075": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9084,
        9155
      ],
      "op": "AND",
      "path": "6"
    },
    "2076": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9084,
        9155
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2077": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9114,
        9141
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2078": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9114,
        9141
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2079": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9103,
        9112
      ],
      "op": "DUP15",
      "path": "6"
    },
    "2080": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9103,
        9112
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2081": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9084,
        9155
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8D1A99FB79BA81AA040238D9DF7033B8A8A3048D382036A272839A9C2A2616B5"
    },
    "2114": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9084,
        9155
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2115": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9084,
        9155
      ],
      "op": "LOG4",
      "path": "6"
    },
    "2116": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9269,
        9284
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "2117": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9249,
        9266
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2118": {
      "branch": 33,
      "fn": "MerkleVesting.initialize",
      "offset": [
        9249,
        9284
      ],
      "op": "LT",
      "path": "6"
    },
    "2119": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9245,
        9359
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2120": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9245,
        9359
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x859"
    },
    "2123": {
      "branch": 33,
      "fn": "MerkleVesting.initialize",
      "offset": [
        9245,
        9359
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2124": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9300,
        9348
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 22,
      "value": "0x859"
    },
    "2127": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9309,
        9318
      ],
      "op": "DUP12",
      "path": "6"
    },
    "2128": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9320,
        9324
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2129": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9320,
        9347
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2131": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9320,
        9347
      ],
      "op": "ADD",
      "path": "6"
    },
    "2132": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9320,
        9347
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2133": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9300,
        9308
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20C"
    },
    "2136": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        9300,
        9348
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2137": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9300,
        9348
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9375,
        9402
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 23,
      "value": "0x4"
    },
    "2141": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9375,
        9402
      ],
      "op": "ADD",
      "path": "6"
    },
    "2142": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9375,
        9402
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2143": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9375,
        9402
      ],
      "op": "SWAP10",
      "path": "6"
    },
    "2144": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7193,
        9409
      ],
      "op": "SWAP9",
      "path": "6"
    },
    "2145": {
      "op": "POP"
    },
    "2146": {
      "op": "POP"
    },
    "2147": {
      "op": "POP"
    },
    "2148": {
      "op": "POP"
    },
    "2149": {
      "op": "POP"
    },
    "2150": {
      "op": "POP"
    },
    "2151": {
      "op": "POP"
    },
    "2152": {
      "op": "POP"
    },
    "2153": {
      "op": "POP"
    },
    "2154": {
      "fn": "MerkleVesting.initialize",
      "jump": "o",
      "offset": [
        7193,
        9409
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2155": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2156": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5017,
        5031
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 24
    },
    "2157": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5017,
        5031
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2158": {
      "branch": 34,
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5017,
        5031
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2159": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5017,
        5055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x879"
    },
    "2162": {
      "branch": 34,
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5017,
        5055
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2163": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5017,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "2164": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5047,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2166": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5047,
        5055
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2167": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5035,
        5044
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2168": {
      "branch": 35,
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5035,
        5055
      ],
      "op": "GT",
      "path": "6"
    },
    "2169": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5017,
        5055
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2170": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5013,
        5112
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2171": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5013,
        5112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x89A"
    },
    "2174": {
      "branch": 35,
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5013,
        5112
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2175": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5078,
        5101
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2177": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5078,
        5101
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2178": {
      "op": "PUSH4",
      "value": "0x190A97AD"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2185": {
      "op": "SHL"
    },
    "2186": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5078,
        5101
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2187": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5078,
        5101
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2188": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5078,
        5101
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2190": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5078,
        5101
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2191": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5078,
        5101
      ],
      "op": "ADD",
      "path": "6"
    },
    "2192": {
      "op": "DUP4"
    },
    "2193": {
      "op": "SWAP1"
    },
    "2194": {
      "op": "MSTORE"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2197": {
      "op": "ADD"
    },
    "2198": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5078,
        5101
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x251"
    },
    "2201": {
      "op": "JUMP"
    },
    "2202": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5013,
        5112
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2203": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5162,
        5191
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2205": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2206": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2207": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2208": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5205
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2210": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2212": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2213": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2215": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2216": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2217": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2218": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5249,
        5272
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2220": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5249,
        5272
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2221": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5249,
        5272
      ],
      "op": "ADD",
      "path": "6"
    },
    "2222": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5249,
        5272
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2223": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2224": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2225": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2232": {
      "op": "SHL"
    },
    "2233": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2234": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2235": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5328,
        5332
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2236": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2238": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2239": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "ADD",
      "path": "6"
    },
    "2240": {
      "op": "MSTORE"
    },
    "2241": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2242": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5194,
        5216
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2249": {
      "op": "SHL"
    },
    "2250": {
      "op": "SUB"
    },
    "2251": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5249,
        5272
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2252": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5249,
        5272
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2253": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5249,
        5272
      ],
      "op": "AND",
      "path": "6"
    },
    "2254": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5249,
        5272
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2255": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5162,
        5191
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2256": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5249,
        5272
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2257": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5249,
        5272
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2258": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5319
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "2263": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5319
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2266": {
      "op": "ADD"
    },
    "2267": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2269": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2271": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2272": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2273": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2274": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "SUB",
      "path": "6"
    },
    "2275": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2276": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2277": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "GAS",
      "path": "6"
    },
    "2278": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2279": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2280": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2281": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2282": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F7"
    },
    "2285": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2286": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2287": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2289": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2290": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2291": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2292": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2294": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2295": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2296": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "POP",
      "path": "6"
    },
    "2297": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "POP",
      "path": "6"
    },
    "2298": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "POP",
      "path": "6"
    },
    "2299": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "POP",
      "path": "6"
    },
    "2300": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2302": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2303": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2304": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2306": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "NOT",
      "path": "6"
    },
    "2307": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2309": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2310": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "ADD",
      "path": "6"
    },
    "2311": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "AND",
      "path": "6"
    },
    "2312": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2313": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "ADD",
      "path": "6"
    },
    "2314": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2315": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2317": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2318": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "POP",
      "path": "6"
    },
    "2319": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2320": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "ADD",
      "path": "6"
    },
    "2321": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2322": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91B"
    },
    "2325": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2326": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2327": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC70"
    },
    "2330": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        5304,
        5334
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2331": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5304,
        5334
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2332": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 25,
      "value": "0x40"
    },
    "2334": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2335": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2342": {
      "op": "SHL"
    },
    "2343": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2344": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2345": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5708,
        5718
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2346": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2348": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2349": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "ADD",
      "path": "6"
    },
    "2350": {
      "op": "MSTORE"
    },
    "2351": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5728,
        5732
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2354": {
      "op": "DUP3"
    },
    "2355": {
      "op": "ADD"
    },
    "2356": {
      "op": "MSTORE"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2359": {
      "op": "DUP2"
    },
    "2360": {
      "op": "ADD"
    },
    "2361": {
      "op": "DUP7"
    },
    "2362": {
      "op": "SWAP1"
    },
    "2363": {
      "op": "MSTORE"
    },
    "2364": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5283,
        5334
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2365": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5283,
        5334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2366": {
      "op": "POP"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2373": {
      "op": "SHL"
    },
    "2374": {
      "op": "SUB"
    },
    "2375": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5707
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2376": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5707
      ],
      "op": "AND",
      "path": "6"
    },
    "2377": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5707
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2378": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5707
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "2383": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5707
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2386": {
      "op": "ADD"
    },
    "2387": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2389": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2391": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2392": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2393": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2394": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "SUB",
      "path": "6"
    },
    "2395": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2396": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2398": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2399": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "GAS",
      "path": "6"
    },
    "2400": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "CALL",
      "path": "6"
    },
    "2401": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2402": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2403": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2404": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x971"
    },
    "2407": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2408": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2409": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2411": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2412": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2413": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2414": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2416": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2417": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2418": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "POP",
      "path": "6"
    },
    "2419": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "POP",
      "path": "6"
    },
    "2420": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "POP",
      "path": "6"
    },
    "2421": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "POP",
      "path": "6"
    },
    "2422": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2424": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2425": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2426": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2428": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "NOT",
      "path": "6"
    },
    "2429": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2431": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2432": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "ADD",
      "path": "6"
    },
    "2433": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "AND",
      "path": "6"
    },
    "2434": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2435": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "ADD",
      "path": "6"
    },
    "2436": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2437": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2439": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2440": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "POP",
      "path": "6"
    },
    "2441": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2442": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "ADD",
      "path": "6"
    },
    "2443": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2444": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x995"
    },
    "2447": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2448": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2449": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC89"
    },
    "2452": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        5689,
        5741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2453": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5689,
        5741
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2454": {
      "op": "POP"
    },
    "2455": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2457": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2458": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2467": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2468": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5796,
        5800
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2469": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2471": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2472": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "ADD",
      "path": "6"
    },
    "2473": {
      "op": "MSTORE"
    },
    "2474": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5752,
        5769
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2476": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5752,
        5769
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2483": {
      "op": "SHL"
    },
    "2484": {
      "op": "SUB"
    },
    "2485": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5787
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2486": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5787
      ],
      "op": "AND",
      "path": "6"
    },
    "2487": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5787
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2488": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5787
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "2493": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5787
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2496": {
      "op": "ADD"
    },
    "2497": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2499": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2501": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2502": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2503": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2504": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "SUB",
      "path": "6"
    },
    "2505": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2506": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2507": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "GAS",
      "path": "6"
    },
    "2508": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2509": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2510": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2511": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2512": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9DD"
    },
    "2515": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2516": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2517": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2519": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2520": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2521": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2522": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2524": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2525": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2526": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "POP",
      "path": "6"
    },
    "2527": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "POP",
      "path": "6"
    },
    "2528": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "POP",
      "path": "6"
    },
    "2529": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "POP",
      "path": "6"
    },
    "2530": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2532": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2533": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2534": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2536": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "NOT",
      "path": "6"
    },
    "2537": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2539": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2540": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "ADD",
      "path": "6"
    },
    "2541": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "AND",
      "path": "6"
    },
    "2542": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2543": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "ADD",
      "path": "6"
    },
    "2544": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2545": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2547": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2548": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "POP",
      "path": "6"
    },
    "2549": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2550": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "ADD",
      "path": "6"
    },
    "2551": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2552": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA01"
    },
    "2555": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2556": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2557": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC70"
    },
    "2560": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        5772,
        5802
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2561": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5772,
        5802
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2562": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5752,
        5802
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5914,
        5923
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2566": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5926,
        5954
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA0F"
    },
    "2569": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5941,
        5954
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2570": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5752,
        5802
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2571": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5926,
        5954
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3A"
    },
    "2574": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        5926,
        5954
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2575": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5926,
        5954
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2576": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5914,
        5954
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2577": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5914,
        5954
      ],
      "op": "POP",
      "path": "6"
    },
    "2578": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6053,
        6057
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 26
    },
    "2579": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6036
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2580": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2582": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6049
      ],
      "op": "ADD",
      "path": "6"
    },
    "2583": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2585": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2586": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2587": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2588": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA25"
    },
    "2591": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2592": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2593": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD44"
    },
    "2596": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        6026,
        6057
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2597": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2598": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2599": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2600": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6026,
        6057
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "op": "POP"
    },
    "2603": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6099,
        6122
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 27,
      "value": "0x2"
    },
    "2605": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6099,
        6122
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2606": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6099,
        6122
      ],
      "op": "ADD",
      "path": "6"
    },
    "2607": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6099,
        6122
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2608": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2610": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2611": {
      "op": "DUP3"
    },
    "2612": {
      "op": "DUP2"
    },
    "2613": {
      "op": "MSTORE"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "op": "SUB"
    },
    "2622": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6099,
        6122
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2623": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6099,
        6122
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2624": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6099,
        6122
      ],
      "op": "AND",
      "path": "6"
    },
    "2625": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6099,
        6122
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2626": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6088,
        6097
      ],
      "op": "DUP9",
      "path": "6"
    },
    "2627": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6088,
        6097
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2628": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xB162210DA7D23D82C18CFF5AF46D3562661D26B42A6848FA28D64A6BDC70386A"
    },
    "2661": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2664": {
      "op": "ADD"
    },
    "2665": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2667": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2668": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2669": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2670": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "SUB",
      "path": "6"
    },
    "2671": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2672": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6072,
        6129
      ],
      "op": "LOG3",
      "path": "6"
    },
    "2673": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5003,
        6136
      ],
      "op": "POP",
      "path": "6"
    },
    "2674": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5003,
        6136
      ],
      "op": "POP",
      "path": "6"
    },
    "2675": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5003,
        6136
      ],
      "op": "POP",
      "path": "6"
    },
    "2676": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5003,
        6136
      ],
      "op": "POP",
      "path": "6"
    },
    "2677": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5003,
        6136
      ],
      "op": "POP",
      "path": "6"
    },
    "2678": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "POP",
      "path": "6"
    },
    "2679": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4945,
        6136
      ],
      "op": "POP",
      "path": "6"
    },
    "2680": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "o",
      "offset": [
        4945,
        6136
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2681": {
      "op": "JUMPDEST"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2684": {
      "op": "DUP1"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2687": {
      "op": "DUP4"
    },
    "2688": {
      "op": "DUP6"
    },
    "2689": {
      "op": "SUB"
    },
    "2690": {
      "op": "SLT"
    },
    "2691": {
      "op": "ISZERO"
    },
    "2692": {
      "op": "PUSH2",
      "value": "0xA8C"
    },
    "2695": {
      "op": "JUMPI"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2698": {
      "op": "DUP1"
    },
    "2699": {
      "op": "REVERT"
    },
    "2700": {
      "op": "JUMPDEST"
    },
    "2701": {
      "op": "POP"
    },
    "2702": {
      "op": "POP"
    },
    "2703": {
      "op": "DUP1"
    },
    "2704": {
      "op": "CALLDATALOAD"
    },
    "2705": {
      "op": "SWAP3"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2708": {
      "op": "SWAP1"
    },
    "2709": {
      "op": "SWAP2"
    },
    "2710": {
      "op": "ADD"
    },
    "2711": {
      "op": "CALLDATALOAD"
    },
    "2712": {
      "op": "SWAP2"
    },
    "2713": {
      "op": "POP"
    },
    "2714": {
      "jump": "o",
      "op": "JUMP"
    },
    "2715": {
      "op": "JUMPDEST"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2720": {
      "op": "DUP3"
    },
    "2721": {
      "op": "DUP5"
    },
    "2722": {
      "op": "SUB"
    },
    "2723": {
      "op": "SLT"
    },
    "2724": {
      "op": "ISZERO"
    },
    "2725": {
      "op": "PUSH2",
      "value": "0xAAD"
    },
    "2728": {
      "op": "JUMPI"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2731": {
      "op": "DUP1"
    },
    "2732": {
      "op": "REVERT"
    },
    "2733": {
      "op": "JUMPDEST"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "CALLDATALOAD"
    },
    "2736": {
      "op": "SWAP2"
    },
    "2737": {
      "op": "SWAP1"
    },
    "2738": {
      "op": "POP"
    },
    "2739": {
      "jump": "o",
      "op": "JUMP"
    },
    "2740": {
      "op": "JUMPDEST"
    },
    "2741": {
      "op": "DUP1"
    },
    "2742": {
      "op": "CALLDATALOAD"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2749": {
      "op": "SHL"
    },
    "2750": {
      "op": "SUB"
    },
    "2751": {
      "op": "DUP2"
    },
    "2752": {
      "op": "AND"
    },
    "2753": {
      "op": "DUP2"
    },
    "2754": {
      "op": "EQ"
    },
    "2755": {
      "op": "PUSH2",
      "value": "0xACB"
    },
    "2758": {
      "op": "JUMPI"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2761": {
      "op": "DUP1"
    },
    "2762": {
      "op": "REVERT"
    },
    "2763": {
      "op": "JUMPDEST"
    },
    "2764": {
      "op": "SWAP2"
    },
    "2765": {
      "op": "SWAP1"
    },
    "2766": {
      "op": "POP"
    },
    "2767": {
      "jump": "o",
      "op": "JUMP"
    },
    "2768": {
      "op": "JUMPDEST"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2771": {
      "op": "DUP1"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2774": {
      "op": "DUP1"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2777": {
      "op": "DUP6"
    },
    "2778": {
      "op": "DUP8"
    },
    "2779": {
      "op": "SUB"
    },
    "2780": {
      "op": "SLT"
    },
    "2781": {
      "op": "ISZERO"
    },
    "2782": {
      "op": "PUSH2",
      "value": "0xAE6"
    },
    "2785": {
      "op": "JUMPI"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2788": {
      "op": "DUP1"
    },
    "2789": {
      "op": "REVERT"
    },
    "2790": {
      "op": "JUMPDEST"
    },
    "2791": {
      "op": "DUP5"
    },
    "2792": {
      "op": "CALLDATALOAD"
    },
    "2793": {
      "op": "SWAP4"
    },
    "2794": {
      "op": "POP"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2797": {
      "op": "DUP6"
    },
    "2798": {
      "op": "ADD"
    },
    "2799": {
      "op": "CALLDATALOAD"
    },
    "2800": {
      "op": "SWAP3"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "op": "PUSH2",
      "value": "0xAFD"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2807": {
      "op": "DUP7"
    },
    "2808": {
      "op": "ADD"
    },
    "2809": {
      "op": "PUSH2",
      "value": "0xAB4"
    },
    "2812": {
      "jump": "i",
      "op": "JUMP"
    },
    "2813": {
      "op": "JUMPDEST"
    },
    "2814": {
      "op": "SWAP4"
    },
    "2815": {
      "op": "SWAP7"
    },
    "2816": {
      "op": "SWAP3"
    },
    "2817": {
      "op": "SWAP6"
    },
    "2818": {
      "op": "POP"
    },
    "2819": {
      "op": "SWAP3"
    },
    "2820": {
      "op": "SWAP4"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2823": {
      "op": "ADD"
    },
    "2824": {
      "op": "CALLDATALOAD"
    },
    "2825": {
      "op": "SWAP3"
    },
    "2826": {
      "op": "POP"
    },
    "2827": {
      "op": "POP"
    },
    "2828": {
      "jump": "o",
      "op": "JUMP"
    },
    "2829": {
      "op": "JUMPDEST"
    },
    "2830": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2837": {
      "op": "SHL"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2840": {
      "op": "MSTORE"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2845": {
      "op": "MSTORE"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2850": {
      "op": "REVERT"
    },
    "2851": {
      "op": "JUMPDEST"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2854": {
      "op": "DUP1"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2857": {
      "op": "DUP1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2860": {
      "op": "DUP1"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2865": {
      "op": "DUP9"
    },
    "2866": {
      "op": "DUP11"
    },
    "2867": {
      "op": "SUB"
    },
    "2868": {
      "op": "SLT"
    },
    "2869": {
      "op": "ISZERO"
    },
    "2870": {
      "op": "PUSH2",
      "value": "0xB3E"
    },
    "2873": {
      "op": "JUMPI"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2876": {
      "op": "DUP1"
    },
    "2877": {
      "op": "REVERT"
    },
    "2878": {
      "op": "JUMPDEST"
    },
    "2879": {
      "op": "DUP8"
    },
    "2880": {
      "op": "CALLDATALOAD"
    },
    "2881": {
      "op": "SWAP7"
    },
    "2882": {
      "op": "POP"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2885": {
      "op": "PUSH2",
      "value": "0xB4F"
    },
    "2888": {
      "op": "DUP2"
    },
    "2889": {
      "op": "DUP11"
    },
    "2890": {
      "op": "ADD"
    },
    "2891": {
      "op": "PUSH2",
      "value": "0xAB4"
    },
    "2894": {
      "jump": "i",
      "op": "JUMP"
    },
    "2895": {
      "op": "JUMPDEST"
    },
    "2896": {
      "op": "SWAP7"
    },
    "2897": {
      "op": "POP"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2900": {
      "op": "DUP10"
    },
    "2901": {
      "op": "ADD"
    },
    "2902": {
      "op": "CALLDATALOAD"
    },
    "2903": {
      "op": "SWAP6"
    },
    "2904": {
      "op": "POP"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2907": {
      "op": "DUP10"
    },
    "2908": {
      "op": "ADD"
    },
    "2909": {
      "op": "CALLDATALOAD"
    },
    "2910": {
      "op": "SWAP5"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2914": {
      "op": "DUP10"
    },
    "2915": {
      "op": "ADD"
    },
    "2916": {
      "op": "CALLDATALOAD"
    },
    "2917": {
      "op": "SWAP4"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2921": {
      "op": "DUP10"
    },
    "2922": {
      "op": "ADD"
    },
    "2923": {
      "op": "CALLDATALOAD"
    },
    "2924": {
      "op": "SWAP3"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2928": {
      "op": "DUP10"
    },
    "2929": {
      "op": "ADD"
    },
    "2930": {
      "op": "CALLDATALOAD"
    },
    "2931": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2940": {
      "op": "DUP1"
    },
    "2941": {
      "op": "DUP3"
    },
    "2942": {
      "op": "GT"
    },
    "2943": {
      "op": "ISZERO"
    },
    "2944": {
      "op": "PUSH2",
      "value": "0xB88"
    },
    "2947": {
      "op": "JUMPI"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2950": {
      "op": "DUP1"
    },
    "2951": {
      "op": "REVERT"
    },
    "2952": {
      "op": "JUMPDEST"
    },
    "2953": {
      "op": "DUP2"
    },
    "2954": {
      "op": "DUP12"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "op": "SWAP2"
    },
    "2957": {
      "op": "POP"
    },
    "2958": {
      "op": "DUP12"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2961": {
      "op": "DUP4"
    },
    "2962": {
      "op": "ADD"
    },
    "2963": {
      "op": "SLT"
    },
    "2964": {
      "op": "PUSH2",
      "value": "0xB9C"
    },
    "2967": {
      "op": "JUMPI"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2970": {
      "op": "DUP1"
    },
    "2971": {
      "op": "REVERT"
    },
    "2972": {
      "op": "JUMPDEST"
    },
    "2973": {
      "op": "DUP2"
    },
    "2974": {
      "op": "CALLDATALOAD"
    },
    "2975": {
      "op": "DUP2"
    },
    "2976": {
      "op": "DUP2"
    },
    "2977": {
      "op": "GT"
    },
    "2978": {
      "op": "ISZERO"
    },
    "2979": {
      "op": "PUSH2",
      "value": "0xBAE"
    },
    "2982": {
      "op": "JUMPI"
    },
    "2983": {
      "op": "PUSH2",
      "value": "0xBAE"
    },
    "2986": {
      "op": "PUSH2",
      "value": "0xB0D"
    },
    "2989": {
      "jump": "i",
      "op": "JUMP"
    },
    "2990": {
      "op": "JUMPDEST"
    },
    "2991": {
      "op": "DUP1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2994": {
      "op": "SHL"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2997": {
      "op": "MLOAD"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3000": {
      "op": "NOT"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3003": {
      "op": "DUP4"
    },
    "3004": {
      "op": "ADD"
    },
    "3005": {
      "op": "AND"
    },
    "3006": {
      "op": "DUP2"
    },
    "3007": {
      "op": "ADD"
    },
    "3008": {
      "op": "DUP2"
    },
    "3009": {
      "op": "DUP2"
    },
    "3010": {
      "op": "LT"
    },
    "3011": {
      "op": "DUP6"
    },
    "3012": {
      "op": "DUP3"
    },
    "3013": {
      "op": "GT"
    },
    "3014": {
      "op": "OR"
    },
    "3015": {
      "op": "ISZERO"
    },
    "3016": {
      "op": "PUSH2",
      "value": "0xBD3"
    },
    "3019": {
      "op": "JUMPI"
    },
    "3020": {
      "op": "PUSH2",
      "value": "0xBD3"
    },
    "3023": {
      "op": "PUSH2",
      "value": "0xB0D"
    },
    "3026": {
      "jump": "i",
      "op": "JUMP"
    },
    "3027": {
      "op": "JUMPDEST"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3030": {
      "op": "MSTORE"
    },
    "3031": {
      "op": "SWAP2"
    },
    "3032": {
      "op": "DUP3"
    },
    "3033": {
      "op": "MSTORE"
    },
    "3034": {
      "op": "DUP5"
    },
    "3035": {
      "op": "DUP3"
    },
    "3036": {
      "op": "ADD"
    },
    "3037": {
      "op": "SWAP3"
    },
    "3038": {
      "op": "POP"
    },
    "3039": {
      "op": "DUP4"
    },
    "3040": {
      "op": "DUP2"
    },
    "3041": {
      "op": "ADD"
    },
    "3042": {
      "op": "DUP6"
    },
    "3043": {
      "op": "ADD"
    },
    "3044": {
      "op": "SWAP2"
    },
    "3045": {
      "op": "DUP15"
    },
    "3046": {
      "op": "DUP4"
    },
    "3047": {
      "op": "GT"
    },
    "3048": {
      "op": "ISZERO"
    },
    "3049": {
      "op": "PUSH2",
      "value": "0xBF1"
    },
    "3052": {
      "op": "JUMPI"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3055": {
      "op": "DUP1"
    },
    "3056": {
      "op": "REVERT"
    },
    "3057": {
      "op": "JUMPDEST"
    },
    "3058": {
      "op": "SWAP4"
    },
    "3059": {
      "op": "DUP6"
    },
    "3060": {
      "op": "ADD"
    },
    "3061": {
      "op": "SWAP4"
    },
    "3062": {
      "op": "JUMPDEST"
    },
    "3063": {
      "op": "DUP3"
    },
    "3064": {
      "op": "DUP6"
    },
    "3065": {
      "op": "LT"
    },
    "3066": {
      "op": "ISZERO"
    },
    "3067": {
      "op": "PUSH2",
      "value": "0xC0F"
    },
    "3070": {
      "op": "JUMPI"
    },
    "3071": {
      "op": "DUP5"
    },
    "3072": {
      "op": "CALLDATALOAD"
    },
    "3073": {
      "op": "DUP5"
    },
    "3074": {
      "op": "MSTORE"
    },
    "3075": {
      "op": "SWAP4"
    },
    "3076": {
      "op": "DUP6"
    },
    "3077": {
      "op": "ADD"
    },
    "3078": {
      "op": "SWAP4"
    },
    "3079": {
      "op": "SWAP3"
    },
    "3080": {
      "op": "DUP6"
    },
    "3081": {
      "op": "ADD"
    },
    "3082": {
      "op": "SWAP3"
    },
    "3083": {
      "op": "PUSH2",
      "value": "0xBF6"
    },
    "3086": {
      "op": "JUMP"
    },
    "3087": {
      "op": "JUMPDEST"
    },
    "3088": {
      "op": "DUP1"
    },
    "3089": {
      "op": "SWAP7"
    },
    "3090": {
      "op": "POP"
    },
    "3091": {
      "op": "POP"
    },
    "3092": {
      "op": "POP"
    },
    "3093": {
      "op": "POP"
    },
    "3094": {
      "op": "POP"
    },
    "3095": {
      "op": "POP"
    },
    "3096": {
      "op": "POP"
    },
    "3097": {
      "op": "SWAP3"
    },
    "3098": {
      "op": "SWAP6"
    },
    "3099": {
      "op": "SWAP9"
    },
    "3100": {
      "op": "SWAP2"
    },
    "3101": {
      "op": "SWAP5"
    },
    "3102": {
      "op": "SWAP8"
    },
    "3103": {
      "op": "POP"
    },
    "3104": {
      "op": "SWAP3"
    },
    "3105": {
      "op": "SWAP6"
    },
    "3106": {
      "op": "POP"
    },
    "3107": {
      "jump": "o",
      "op": "JUMP"
    },
    "3108": {
      "op": "JUMPDEST"
    },
    "3109": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3119": {
      "op": "MSTORE"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3124": {
      "op": "MSTORE"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3129": {
      "op": "REVERT"
    },
    "3130": {
      "op": "JUMPDEST"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3133": {
      "op": "DUP3"
    },
    "3134": {
      "op": "DUP3"
    },
    "3135": {
      "op": "LT"
    },
    "3136": {
      "op": "ISZERO"
    },
    "3137": {
      "op": "PUSH2",
      "value": "0xC4C"
    },
    "3140": {
      "op": "JUMPI"
    },
    "3141": {
      "op": "PUSH2",
      "value": "0xC4C"
    },
    "3144": {
      "op": "PUSH2",
      "value": "0xC24"
    },
    "3147": {
      "jump": "i",
      "op": "JUMP"
    },
    "3148": {
      "op": "JUMPDEST"
    },
    "3149": {
      "op": "POP"
    },
    "3150": {
      "op": "SUB"
    },
    "3151": {
      "op": "SWAP1"
    },
    "3152": {
      "jump": "o",
      "op": "JUMP"
    },
    "3153": {
      "op": "JUMPDEST"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3156": {
      "op": "DUP2"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3159": {
      "op": "NOT"
    },
    "3160": {
      "op": "DIV"
    },
    "3161": {
      "op": "DUP4"
    },
    "3162": {
      "op": "GT"
    },
    "3163": {
      "op": "DUP3"
    },
    "3164": {
      "op": "ISZERO"
    },
    "3165": {
      "op": "ISZERO"
    },
    "3166": {
      "op": "AND"
    },
    "3167": {
      "op": "ISZERO"
    },
    "3168": {
      "op": "PUSH2",
      "value": "0xC6B"
    },
    "3171": {
      "op": "JUMPI"
    },
    "3172": {
      "op": "PUSH2",
      "value": "0xC6B"
    },
    "3175": {
      "op": "PUSH2",
      "value": "0xC24"
    },
    "3178": {
      "jump": "i",
      "op": "JUMP"
    },
    "3179": {
      "op": "JUMPDEST"
    },
    "3180": {
      "op": "POP"
    },
    "3181": {
      "op": "MUL"
    },
    "3182": {
      "op": "SWAP1"
    },
    "3183": {
      "jump": "o",
      "op": "JUMP"
    },
    "3184": {
      "op": "JUMPDEST"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3189": {
      "op": "DUP3"
    },
    "3190": {
      "op": "DUP5"
    },
    "3191": {
      "op": "SUB"
    },
    "3192": {
      "op": "SLT"
    },
    "3193": {
      "op": "ISZERO"
    },
    "3194": {
      "op": "PUSH2",
      "value": "0xC82"
    },
    "3197": {
      "op": "JUMPI"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3200": {
      "op": "DUP1"
    },
    "3201": {
      "op": "REVERT"
    },
    "3202": {
      "op": "JUMPDEST"
    },
    "3203": {
      "op": "POP"
    },
    "3204": {
      "op": "MLOAD"
    },
    "3205": {
      "op": "SWAP2"
    },
    "3206": {
      "op": "SWAP1"
    },
    "3207": {
      "op": "POP"
    },
    "3208": {
      "jump": "o",
      "op": "JUMP"
    },
    "3209": {
      "op": "JUMPDEST"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3214": {
      "op": "DUP3"
    },
    "3215": {
      "op": "DUP5"
    },
    "3216": {
      "op": "SUB"
    },
    "3217": {
      "op": "SLT"
    },
    "3218": {
      "op": "ISZERO"
    },
    "3219": {
      "op": "PUSH2",
      "value": "0xC9B"
    },
    "3222": {
      "op": "JUMPI"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3225": {
      "op": "DUP1"
    },
    "3226": {
      "op": "REVERT"
    },
    "3227": {
      "op": "JUMPDEST"
    },
    "3228": {
      "op": "DUP2"
    },
    "3229": {
      "op": "MLOAD"
    },
    "3230": {
      "op": "DUP1"
    },
    "3231": {
      "op": "ISZERO"
    },
    "3232": {
      "op": "ISZERO"
    },
    "3233": {
      "op": "DUP2"
    },
    "3234": {
      "op": "EQ"
    },
    "3235": {
      "op": "PUSH2",
      "value": "0xCAB"
    },
    "3238": {
      "op": "JUMPI"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3241": {
      "op": "DUP1"
    },
    "3242": {
      "op": "REVERT"
    },
    "3243": {
      "op": "JUMPDEST"
    },
    "3244": {
      "op": "SWAP4"
    },
    "3245": {
      "op": "SWAP3"
    },
    "3246": {
      "op": "POP"
    },
    "3247": {
      "op": "POP"
    },
    "3248": {
      "op": "POP"
    },
    "3249": {
      "jump": "o",
      "op": "JUMP"
    },
    "3250": {
      "op": "JUMPDEST"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3255": {
      "op": "NOT"
    },
    "3256": {
      "op": "DUP3"
    },
    "3257": {
      "op": "EQ"
    },
    "3258": {
      "op": "ISZERO"
    },
    "3259": {
      "op": "PUSH2",
      "value": "0xCC6"
    },
    "3262": {
      "op": "JUMPI"
    },
    "3263": {
      "op": "PUSH2",
      "value": "0xCC6"
    },
    "3266": {
      "op": "PUSH2",
      "value": "0xC24"
    },
    "3269": {
      "jump": "i",
      "op": "JUMP"
    },
    "3270": {
      "op": "JUMPDEST"
    },
    "3271": {
      "op": "POP"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3274": {
      "op": "ADD"
    },
    "3275": {
      "op": "SWAP1"
    },
    "3276": {
      "jump": "o",
      "op": "JUMP"
    },
    "3277": {
      "op": "JUMPDEST"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3282": {
      "op": "DUP3"
    },
    "3283": {
      "op": "ADD"
    },
    "3284": {
      "op": "DUP6"
    },
    "3285": {
      "op": "DUP4"
    },
    "3286": {
      "op": "MSTORE"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3289": {
      "op": "DUP6"
    },
    "3290": {
      "op": "DUP2"
    },
    "3291": {
      "op": "DUP6"
    },
    "3292": {
      "op": "ADD"
    },
    "3293": {
      "op": "MSTORE"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3298": {
      "op": "DUP6"
    },
    "3299": {
      "op": "ADD"
    },
    "3300": {
      "op": "MSTORE"
    },
    "3301": {
      "op": "DUP2"
    },
    "3302": {
      "op": "DUP6"
    },
    "3303": {
      "op": "MLOAD"
    },
    "3304": {
      "op": "DUP1"
    },
    "3305": {
      "op": "DUP5"
    },
    "3306": {
      "op": "MSTORE"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3309": {
      "op": "DUP7"
    },
    "3310": {
      "op": "ADD"
    },
    "3311": {
      "op": "SWAP2"
    },
    "3312": {
      "op": "POP"
    },
    "3313": {
      "op": "DUP3"
    },
    "3314": {
      "op": "DUP8"
    },
    "3315": {
      "op": "ADD"
    },
    "3316": {
      "op": "SWAP4"
    },
    "3317": {
      "op": "POP"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3320": {
      "op": "JUMPDEST"
    },
    "3321": {
      "op": "DUP2"
    },
    "3322": {
      "op": "DUP2"
    },
    "3323": {
      "op": "LT"
    },
    "3324": {
      "op": "ISZERO"
    },
    "3325": {
      "op": "PUSH2",
      "value": "0xD14"
    },
    "3328": {
      "op": "JUMPI"
    },
    "3329": {
      "op": "DUP5"
    },
    "3330": {
      "op": "MLOAD"
    },
    "3331": {
      "op": "DUP4"
    },
    "3332": {
      "op": "MSTORE"
    },
    "3333": {
      "op": "SWAP4"
    },
    "3334": {
      "op": "DUP4"
    },
    "3335": {
      "op": "ADD"
    },
    "3336": {
      "op": "SWAP4"
    },
    "3337": {
      "op": "SWAP2"
    },
    "3338": {
      "op": "DUP4"
    },
    "3339": {
      "op": "ADD"
    },
    "3340": {
      "op": "SWAP2"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3343": {
      "op": "ADD"
    },
    "3344": {
      "op": "PUSH2",
      "value": "0xCF8"
    },
    "3347": {
      "op": "JUMP"
    },
    "3348": {
      "op": "JUMPDEST"
    },
    "3349": {
      "op": "POP"
    },
    "3350": {
      "op": "SWAP1"
    },
    "3351": {
      "op": "SWAP9"
    },
    "3352": {
      "op": "SWAP8"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "op": "POP"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "op": "POP"
    },
    "3359": {
      "op": "POP"
    },
    "3360": {
      "op": "POP"
    },
    "3361": {
      "jump": "o",
      "op": "JUMP"
    },
    "3362": {
      "op": "JUMPDEST"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3365": {
      "op": "DUP3"
    },
    "3366": {
      "op": "PUSH2",
      "value": "0xD3F"
    },
    "3369": {
      "op": "JUMPI"
    },
    "3370": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3377": {
      "op": "SHL"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3380": {
      "op": "MSTORE"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3385": {
      "op": "MSTORE"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3390": {
      "op": "REVERT"
    },
    "3391": {
      "op": "JUMPDEST"
    },
    "3392": {
      "op": "POP"
    },
    "3393": {
      "op": "DIV"
    },
    "3394": {
      "op": "SWAP1"
    },
    "3395": {
      "jump": "o",
      "op": "JUMP"
    },
    "3396": {
      "op": "JUMPDEST"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3399": {
      "op": "DUP3"
    },
    "3400": {
      "op": "NOT"
    },
    "3401": {
      "op": "DUP3"
    },
    "3402": {
      "op": "GT"
    },
    "3403": {
      "op": "ISZERO"
    },
    "3404": {
      "op": "PUSH2",
      "value": "0xD57"
    },
    "3407": {
      "op": "JUMPI"
    },
    "3408": {
      "op": "PUSH2",
      "value": "0xD57"
    },
    "3411": {
      "op": "PUSH2",
      "value": "0xC24"
    },
    "3414": {
      "jump": "i",
      "op": "JUMP"
    },
    "3415": {
      "op": "JUMPDEST"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "op": "ADD"
    },
    "3418": {
      "op": "SWAP1"
    },
    "3419": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "099fdd9844245a08ab6506c1d87401f48d34ef31",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\n\npragma solidity 0.8.12;\n\nimport \"../interfaces/IERC20.sol\";\nimport \"./MerkleLib.sol\";\n\n/// @title A factory pattern for merkle-vesting, that is, a time release schedule for tokens, using merkle proofs to scale\n/// @author metapriest, adrian.wachel, marek.babiarz, radoslaw.gorecki\n/// @notice This contract is permissionless and public facing. Any fees must be included in the data of the merkle tree.\n/// @dev The contract cannot introspect into the contents of the merkle tree, except when provided a merkle proof\ncontract MerkleVesting {\n    using MerkleLib for bytes32;\n\n    // the number of vesting schedules in this contract\n    uint public numTrees;\n    \n    // this represents a single vesting schedule for a specific address\n    struct Tranche {\n        address recipient;\n        uint totalCoins;  // total number of coins released to an address after vesting is completed\n        uint currentCoins; // how many coins are left unclaimed by this address, vested or unvested\n        uint startTime; // when the vesting schedule is set to start, possibly in the past\n        uint endTime;  // when the vesting schedule will have released all coins\n        uint coinsPerSecond; // an intermediate value cached to reduce gas costs, how many coins released every second\n        uint lastWithdrawalTime; // the last time a withdrawal occurred, used to compute unvested coins\n        uint lockPeriodEndTime; // the first time at which coins may be withdrawn\n    }\n\n    // this represents a set of vesting schedules all in the same token\n    struct MerkleTree {\n        bytes32 rootHash;  // merkleroot of tree whose leaves are (address,uint,uint,uint,uint) representing vesting schedules\n        bytes32 ipfsHash; // ipfs hash of entire dataset, used to reconstruct merkle proofs if our servers go down\n        address tokenAddress; // token that the vesting schedules will be denominated in\n        uint tokenBalance; // current amount of tokens deposited to this tree, used to make sure trees don't share tokens\n        uint numTranchesInitialized;\n        mapping (uint => Tranche) tranches;\n        mapping (bytes32 => bool) initialized;\n    }\n\n    // array-like sequential map for all the vesting schedules\n    mapping (uint => MerkleTree) public merkleTrees;\n\n\n    // every time there's a withdrawal\n    event WithdrawalOccurred(uint indexed treeIndex, address indexed destination, uint numTokens, uint tokensLeft);\n\n    // every time a tree is added\n    event MerkleRootAdded(uint indexed treeIndex, address indexed tokenAddress, bytes32 newRoot, bytes32 ipfsHash);\n\n    // every time a tree is topped up\n    event TokensDeposited(uint indexed treeIndex, address indexed tokenAddress, uint amount);\n\n    event TrancheInitialized(uint indexed treeIndex, uint indexed trancheIndex, address indexed recipient);\n\n    error BadTreeIndex(uint treeIndex);\n    error AlreadyInitialized(uint treeIndex, bytes32 leaf);\n    error BadProof(uint treeIndex, bytes32 leaf, bytes32[] proof);\n    error UninitializedAccount(uint treeIndex, uint trancheIndex);\n    error AccountStillLocked(uint treeIndex, uint trancheIndex);\n    error AccountEmpty(uint treeIndex, uint trancheIndex);\n\n    /// @notice Add a new merkle tree to the contract, creating a new merkle-vesting-schedule\n    /// @dev Anyone may call this function, therefore we must make sure trees cannot affect each other\n    /// @dev Root hash should be built from (destination, totalCoins, startTime, endTime, lockPeriodEndTime)\n    /// @param newRoot root hash of merkle tree representing vesting schedules\n    /// @param ipfsHash the ipfs hash of the entire dataset, used for redundance so that creator can ensure merkleproof are always computable\n    /// @param tokenAddress the address of the token contract that is being distributed\n    /// @param tokenBalance the amount of tokens user wishes to use to fund the airdrop, note trees can be under/overfunded\n    function addMerkleRoot(bytes32 newRoot, bytes32 ipfsHash, address tokenAddress, uint tokenBalance) public {\n        // prefix operator ++ increments then evaluates\n        MerkleTree storage tree = merkleTrees[++numTrees];\n        tree.rootHash = newRoot;\n        tree.ipfsHash = ipfsHash;\n        tree.tokenAddress = tokenAddress;\n\n        // fund the tree now\n        depositTokens(numTrees, tokenBalance);\n        emit MerkleRootAdded(numTrees, tokenAddress, newRoot, ipfsHash);\n    }\n\n    /// @notice Add funds to an existing merkle-vesting-schedule\n    /// @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n    /// @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs\n    /// @param treeIndex index into array-like map of merkleTrees\n    /// @param value the amount of tokens user wishes to use to fund the airdrop, note trees can be underfunded\n    function depositTokens(uint treeIndex, uint value) public {\n        if (treeIndex == 0 || treeIndex > numTrees) {\n            revert BadTreeIndex(treeIndex);\n        }\n\n        // storage since we are editing\n        MerkleTree storage merkleTree = merkleTrees[treeIndex];\n\n        IERC20 token = IERC20(merkleTree.tokenAddress);\n        uint balanceBefore = token.balanceOf(address(this));\n\n        // transfer tokens, if this is a malicious token, then this whole tree is malicious\n        // but it does not effect the other trees\n        // NOTE: we don't check for success here because some tokens don't return a bool\n        // Instead we check the balance before and after, which takes care of the fee-on-transfer tokens as well\n        token.transferFrom(msg.sender, address(this), value);\n\n        uint balanceAfter = token.balanceOf(address(this));\n        // diff may be different from value here, it may even be zero if the transfer failed silently\n        uint diff = balanceAfter - balanceBefore;\n\n        // bookkeeping to make sure trees don't share tokens\n        merkleTree.tokenBalance += diff;\n        emit TokensDeposited(treeIndex, merkleTree.tokenAddress, diff);\n    }\n\n    /// @notice Called once per recipient of a vesting schedule to initialize the vesting schedule\n    /// @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n    /// @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs of global tree stats\n    /// @dev The contract has no knowledge of the vesting schedules until this function is called\n    /// @param treeIndex index into array-like map of merkleTrees\n    /// @param destination address that will receive tokens\n    /// @param totalCoins amount of tokens to be released after vesting completes\n    /// @param startTime time that vesting schedule starts, can be past or future\n    /// @param endTime time vesting schedule completes, can be past or future\n    /// @param lockPeriodEndTime time that coins become unlocked, can be after endTime\n    /// @param proof array of hashes linking leaf hash of (destination, totalCoins, startTime, endTime, lockPeriodEndTime) to root\n    function initialize(\n        uint treeIndex,\n        address destination,\n        uint totalCoins,\n        uint startTime,\n        uint endTime,\n        uint lockPeriodEndTime,\n        bytes32[] memory proof) external returns (uint) {\n        if (treeIndex == 0 || treeIndex > numTrees) {\n            revert BadTreeIndex(treeIndex);\n        }\n\n        // leaf hash is digest of vesting schedule parameters and destination\n        // NOTE: use abi.encode, not abi.encodePacked to avoid possible (but unlikely) collision\n        bytes32 leaf = keccak256(abi.encode(destination, totalCoins, startTime, endTime, lockPeriodEndTime));\n\n        // storage because it's cheaper, \"memory\" copies from storage to memory\n        MerkleTree storage tree = merkleTrees[treeIndex];\n\n        // must not initialize multiple times\n        if (tree.initialized[leaf]) {\n            revert AlreadyInitialized(treeIndex, leaf);\n        }\n\n        // call to MerkleLib to check if the submitted data is correct\n        if (tree.rootHash.verifyProof(leaf, proof) == false) {\n            revert BadProof(treeIndex, leaf, proof);\n        }\n\n        // set initialized, preventing double initialization\n        tree.initialized[leaf] = true;\n\n        // precompute how many coins are released per second\n        // NOTE: should check that endTime != startTime on backend since that would revert here\n        uint coinsPerSecond = totalCoins / (endTime - startTime);\n\n        // create the tranche struct and assign it\n        tree.tranches[++tree.numTranchesInitialized] = Tranche(\n            destination,\n            totalCoins,  // total coins to be released\n            totalCoins,  // currentCoins starts as totalCoins\n            startTime,\n            endTime,\n            coinsPerSecond,\n            startTime,    // lastWithdrawal starts as startTime\n            lockPeriodEndTime\n        );\n\n        emit TrancheInitialized(treeIndex, tree.numTranchesInitialized, destination);\n\n        // if we've passed the lock time go ahead and perform a withdrawal now\n        if (lockPeriodEndTime < block.timestamp) {\n            withdraw(treeIndex, tree.numTranchesInitialized);\n        }\n        return tree.numTranchesInitialized;\n    }\n\n    /// @notice Claim funds as a recipient in the merkle-drop\n    /// @dev Anyone may call this function for anyone else, funds go to destination regardless, it's just a question of\n    /// @dev who provides the proof and pays the gas, msg.sender is not used in this function\n    /// @param treeIndex index into array-like map of merkleTrees, which tree should we apply the proof to?\n    /// @param trancheIndex recipient of tokens\n    function withdraw(uint treeIndex, uint trancheIndex) public {\n\n        MerkleTree storage tree = merkleTrees[treeIndex];\n        Tranche storage tranche = tree.tranches[trancheIndex];\n\n        // checking this way so we don't have to recompute leaf hash\n        if (tranche.totalCoins == 0) {\n            revert UninitializedAccount(treeIndex, trancheIndex);\n        }\n\n        // no withdrawals before lock time ends\n        if (block.timestamp < tranche.lockPeriodEndTime) {\n            revert AccountStillLocked(treeIndex, trancheIndex);\n        }\n\n        // revert if there's nothing left\n        if (tranche.currentCoins == 0) {\n            revert AccountEmpty(treeIndex, trancheIndex);\n        }\n\n        // declaration for branched assignment\n        uint currentWithdrawal;\n\n        // if after vesting period ends, give them the remaining coins\n        if (block.timestamp >= tranche.endTime) {\n            currentWithdrawal = tranche.currentCoins;\n        } else {\n            // compute allowed withdrawal\n            currentWithdrawal = (block.timestamp - tranche.lastWithdrawalTime) * tranche.coinsPerSecond;\n        }\n\n        // this makes sure coins don't get double withdrawn, closes re-entrance gate\n        tranche.lastWithdrawalTime = block.timestamp;\n\n        IERC20 token = IERC20(tree.tokenAddress);\n        uint balanceBefore = token.balanceOf(address(this));\n\n        // Transfer the tokens, if the token contract is malicious, this will make the whole tree malicious\n        // but this does not allow re-entrance due to struct updates and it does not effect other trees.\n        // It is also consistent with the ethereum general security model:\n        // other contracts do what they want, it's our job to protect our contract\n        token.transfer(tranche.recipient, currentWithdrawal);\n\n        // compute the diff in case there is a fee-on-transfer or transfer failed silently\n        uint balanceAfter = token.balanceOf(address(this));\n        uint diff = balanceBefore - balanceAfter;\n\n        // decrease allocation of coins\n        tranche.currentCoins -= diff;\n\n        // update the tree balance so trees can't take each other's tokens\n        tree.tokenBalance -= diff;\n\n        emit WithdrawalOccurred(treeIndex, tranche.recipient, diff, tranche.currentCoins);\n    }\n\n    function getTranche(uint treeIndex, uint trancheIndex) view external returns (address, uint, uint, uint, uint, uint, uint) {\n        Tranche storage tranche = merkleTrees[treeIndex].tranches[trancheIndex];\n        return (tranche.recipient, tranche.totalCoins, tranche.currentCoins, tranche.startTime, tranche.endTime, tranche.coinsPerSecond, tranche.lastWithdrawalTime);\n    }\n\n}",
  "sourceMap": "558:11983:6:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/MerkleVesting.sol",
  "type": "contract"
}