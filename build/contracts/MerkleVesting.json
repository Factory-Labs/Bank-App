{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "AccountEmpty",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "AccountStillLocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "leaf",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "BadProof",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        }
      ],
      "name": "BadTreeIndex",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "UninitializedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        }
      ],
      "name": "MerkleRootAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensLeft",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalOccurred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "name": "addMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockPeriodEndTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "merkleTrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "rootHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "ipfsHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numTrees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tranches",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "coinsPerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastWithdrawalTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockPeriodEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "treeIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/MerkleLib.sol",
    "2": "contracts/MerkleVesting.sol",
    "3": "interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/MerkleVesting.sol",
    "exportedSymbols": {
      "IERC20": [
        1041
      ],
      "MerkleLib": [
        963
      ],
      "MerkleVesting": [
        881
      ]
    },
    "id": 882,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 360,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:2"
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 361,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 882,
        "sourceUnit": 1042,
        "src": "67:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/MerkleLib.sol",
        "file": "./MerkleLib.sol",
        "id": 362,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 882,
        "sourceUnit": 964,
        "src": "102:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MerkleVesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 363,
          "nodeType": "StructuredDocumentation",
          "src": "129:429:2",
          "text": "@title A factory pattern for merkle-vesting, that is, a time release schedule for tokens, using merkle proofs to scale\n @author metapriest, adrian.wachel, marek.babiarz, radoslaw.gorecki\n @notice This contract is permissionless and public facing. Any fees must be included in the data of the merkle tree.\n @dev The contract cannot introspect into the contents of the merkle tree, except when provided a merkle proof"
        },
        "fullyImplemented": true,
        "id": 881,
        "linearizedBaseContracts": [
          881
        ],
        "name": "MerkleVesting",
        "nameLocation": "567:13:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 366,
            "libraryName": {
              "id": 364,
              "name": "MerkleLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 963,
              "src": "593:9:2"
            },
            "nodeType": "UsingForDirective",
            "src": "587:28:2",
            "typeName": {
              "id": 365,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "390b7c66",
            "id": 368,
            "mutability": "mutable",
            "name": "numTrees",
            "nameLocation": "689:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 881,
            "src": "677:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 367,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "677:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MerkleVesting.Tranche",
            "id": 383,
            "members": [
              {
                "constant": false,
                "id": 370,
                "mutability": "mutable",
                "name": "totalCoins",
                "nameLocation": "810:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 383,
                "src": "805:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 369,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "805:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 372,
                "mutability": "mutable",
                "name": "currentCoins",
                "nameLocation": "911:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 383,
                "src": "906:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 371,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "906:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 374,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "1011:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 383,
                "src": "1006:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 373,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1006:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 376,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "1102:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 383,
                "src": "1097:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 375,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1097:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 378,
                "mutability": "mutable",
                "name": "coinsPerSecond",
                "nameLocation": "1183:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 383,
                "src": "1178:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 377,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1178:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 380,
                "mutability": "mutable",
                "name": "lastWithdrawalTime",
                "nameLocation": "1302:18:2",
                "nodeType": "VariableDeclaration",
                "scope": 383,
                "src": "1297:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 379,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1297:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 382,
                "mutability": "mutable",
                "name": "lockPeriodEndTime",
                "nameLocation": "1406:17:2",
                "nodeType": "VariableDeclaration",
                "scope": 383,
                "src": "1401:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 381,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1401:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Tranche",
            "nameLocation": "787:7:2",
            "nodeType": "StructDefinition",
            "scope": 881,
            "src": "780:700:2",
            "visibility": "public"
          },
          {
            "canonicalName": "MerkleVesting.MerkleTree",
            "id": 392,
            "members": [
              {
                "constant": false,
                "id": 385,
                "mutability": "mutable",
                "name": "rootHash",
                "nameLocation": "1594:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 392,
                "src": "1586:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 384,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1586:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 387,
                "mutability": "mutable",
                "name": "ipfsHash",
                "nameLocation": "1721:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 392,
                "src": "1713:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 386,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1713:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 389,
                "mutability": "mutable",
                "name": "tokenAddress",
                "nameLocation": "1836:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 392,
                "src": "1828:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 388,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1828:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 391,
                "mutability": "mutable",
                "name": "tokenBalance",
                "nameLocation": "1922:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 392,
                "src": "1917:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 390,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1917:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MerkleTree",
            "nameLocation": "1565:10:2",
            "nodeType": "StructDefinition",
            "scope": 881,
            "src": "1558:478:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cf61bf72",
            "id": 398,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "2153:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 881,
            "src": "2102:62:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
            },
            "typeName": {
              "id": 397,
              "keyType": {
                "id": 393,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2111:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2102:43:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
              },
              "valueType": {
                "id": 396,
                "keyType": {
                  "id": 394,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2128:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "2119:25:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "valueType": {
                  "id": 395,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2139:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "85d88cb1",
            "id": 403,
            "mutability": "mutable",
            "name": "merkleTrees",
            "nameLocation": "2270:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 881,
            "src": "2234:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$392_storage_$",
              "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree)"
            },
            "typeName": {
              "id": 402,
              "keyType": {
                "id": 399,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2243:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2234:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$392_storage_$",
                "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree)"
              },
              "valueType": {
                "id": 401,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 400,
                  "name": "MerkleTree",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 392,
                  "src": "2251:10:2"
                },
                "referencedDeclaration": 392,
                "src": "2251:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                  "typeString": "struct MerkleVesting.MerkleTree"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c26cb54f",
            "id": 410,
            "mutability": "mutable",
            "name": "tranches",
            "nameLocation": "2409:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 881,
            "src": "2355:62:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Tranche_$383_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct MerkleVesting.Tranche))"
            },
            "typeName": {
              "id": 409,
              "keyType": {
                "id": 404,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2364:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2355:46:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Tranche_$383_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct MerkleVesting.Tranche))"
              },
              "valueType": {
                "id": 408,
                "keyType": {
                  "id": 405,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2384:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2375:25:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$383_storage_$",
                  "typeString": "mapping(uint256 => struct MerkleVesting.Tranche)"
                },
                "valueType": {
                  "id": 407,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 406,
                    "name": "Tranche",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 383,
                    "src": "2392:7:2"
                  },
                  "referencedDeclaration": 383,
                  "src": "2392:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                    "typeString": "struct MerkleVesting.Tranche"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 420,
            "name": "WithdrawalOccurred",
            "nameLocation": "2469:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2501:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "2488:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 414,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "2528:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "2512:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2512:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 416,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numTokens",
                  "nameLocation": "2546:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "2541:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 418,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensLeft",
                  "nameLocation": "2562:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "2557:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2557:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2487:86:2"
            },
            "src": "2463:111:2"
          },
          {
            "anonymous": false,
            "id": 430,
            "name": "MerkleRootAdded",
            "nameLocation": "2620:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 422,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2649:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "2636:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 424,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2676:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "2660:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 426,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "2698:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "2690:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2690:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 428,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "2715:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "2707:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2635:89:2"
            },
            "src": "2614:111:2"
          },
          {
            "anonymous": false,
            "id": 438,
            "name": "TokensDeposited",
            "nameLocation": "2775:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2804:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "2791:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2791:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 434,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2831:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "2815:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2815:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2850:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "2845:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2845:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2790:67:2"
            },
            "src": "2769:89:2"
          },
          {
            "id": 442,
            "name": "BadTreeIndex",
            "nameLocation": "2870:12:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2888:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 442,
                  "src": "2883:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2883:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2882:16:2"
            },
            "src": "2864:35:2"
          },
          {
            "id": 448,
            "name": "AlreadyInitialized",
            "nameLocation": "2910:18:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2934:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "2929:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2929:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "2953:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "2945:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2928:37:2"
            },
            "src": "2904:62:2"
          },
          {
            "id": 457,
            "name": "BadProof",
            "nameLocation": "2977:8:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "2991:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "2986:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "3010:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "3002:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3002:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "3026:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "3016:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 453,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3016:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 454,
                    "nodeType": "ArrayTypeName",
                    "src": "3016:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2985:47:2"
            },
            "src": "2971:62:2"
          },
          {
            "id": 463,
            "name": "UninitializedAccount",
            "nameLocation": "3044:20:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "3070:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "3065:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3065:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3089:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "3081:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3081:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3064:35:2"
            },
            "src": "3038:62:2"
          },
          {
            "id": 469,
            "name": "AccountStillLocked",
            "nameLocation": "3111:18:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "3135:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3130:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3130:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3154:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3146:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3146:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3129:35:2"
            },
            "src": "3105:60:2"
          },
          {
            "id": 475,
            "name": "AccountEmpty",
            "nameLocation": "3176:12:2",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "3194:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "3189:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3213:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "3205:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3188:35:2"
            },
            "src": "3170:54:2"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "4075:403:2",
              "statements": [
                {
                  "expression": {
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 487,
                        "name": "merkleTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "4141:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$392_storage_$",
                          "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                        }
                      },
                      "id": 490,
                      "indexExpression": {
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "4153:10:2",
                        "subExpression": {
                          "id": 488,
                          "name": "numTrees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 368,
                          "src": "4155:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4141:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$392_storage",
                        "typeString": "struct MerkleVesting.MerkleTree storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 492,
                          "name": "newRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 478,
                          "src": "4191:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 493,
                          "name": "ipfsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "4212:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 494,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 482,
                          "src": "4234:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4260:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 491,
                        "name": "MerkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "4167:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MerkleTree_$392_storage_ptr_$",
                          "typeString": "type(struct MerkleVesting.MerkleTree storage pointer)"
                        }
                      },
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4167:155:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$392_memory_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree memory"
                      }
                    },
                    "src": "4141:181:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$392_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "4141:181:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 500,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "4375:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 501,
                        "name": "tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "4385:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 499,
                      "name": "depositTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "4361:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4361:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 503,
                  "nodeType": "ExpressionStatement",
                  "src": "4361:37:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 505,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "4429:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 506,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "4439:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 507,
                        "name": "newRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "4453:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 508,
                        "name": "ipfsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "4462:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 504,
                      "name": "MerkleRootAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 430,
                      "src": "4413:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,bytes32,bytes32)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4413:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "EmitStatement",
                  "src": "4408:63:2"
                }
              ]
            },
            "documentation": {
              "id": 476,
              "nodeType": "StructuredDocumentation",
              "src": "3230:734:2",
              "text": "@notice Add a new merkle tree to the contract, creating a new merkle-vesting-schedule\n @dev Anyone may call this function, therefore we must make sure trees cannot affect each other\n @dev Root hash should be built from (destination, totalCoins, startTime, endTime, lockPeriodEndTime)\n @param newRoot root hash of merkle tree representing vesting schedules\n @param ipfsHash the ipfs hash of the entire dataset, used for redundance so that creator can ensure merkleproof are always computable\n @param tokenAddress the address of the token contract that is being distributed\n @param tokenBalance the amount of tokens user wishes to use to fund the airdrop, note trees can be under/overfunded"
            },
            "functionSelector": "9e18a054",
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMerkleRoot",
            "nameLocation": "3978:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "4000:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "3992:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 477,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3992:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "ipfsHash",
                  "nameLocation": "4017:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "4009:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4009:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "4035:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "4027:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4027:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "tokenBalance",
                  "nameLocation": "4054:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "4049:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4049:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3991:76:2"
            },
            "returnParameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4075:0:2"
            },
            "scope": 881,
            "src": "3969:509:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 599,
              "nodeType": "Block",
              "src": "5032:1133:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 520,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "5046:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5059:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5046:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 523,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "5064:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 524,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5076:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5064:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5046:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 532,
                  "nodeType": "IfStatement",
                  "src": "5042:99:2",
                  "trueBody": {
                    "id": 531,
                    "nodeType": "Block",
                    "src": "5086:55:2",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 528,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 515,
                              "src": "5120:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 527,
                            "name": "BadTreeIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "5107:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5107:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 530,
                        "nodeType": "RevertStatement",
                        "src": "5100:30:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 535,
                      "mutability": "mutable",
                      "name": "merkleTree",
                      "nameLocation": "5210:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 599,
                      "src": "5191:29:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree"
                      },
                      "typeName": {
                        "id": 534,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 533,
                          "name": "MerkleTree",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 392,
                          "src": "5191:10:2"
                        },
                        "referencedDeclaration": 392,
                        "src": "5191:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 539,
                  "initialValue": {
                    "baseExpression": {
                      "id": 536,
                      "name": "merkleTrees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "5223:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$392_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                      }
                    },
                    "id": 538,
                    "indexExpression": {
                      "id": 537,
                      "name": "treeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "5235:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5223:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$392_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5191:54:2"
                },
                {
                  "assignments": [
                    542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 542,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "5263:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 599,
                      "src": "5256:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1041",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 541,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 540,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1041,
                          "src": "5256:6:2"
                        },
                        "referencedDeclaration": 1041,
                        "src": "5256:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1041",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 547,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 544,
                          "name": "merkleTree",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "5278:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                            "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 389,
                        "src": "5278:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 543,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "5271:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1041_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5271:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1041",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5256:46:2"
                },
                {
                  "assignments": [
                    549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 549,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "5317:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 599,
                      "src": "5312:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 548,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5312:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 557,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 554,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5357:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleVesting_$881",
                              "typeString": "contract MerkleVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleVesting_$881",
                              "typeString": "contract MerkleVesting"
                            }
                          ],
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5349:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 552,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5349:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5349:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 550,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "5333:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1041",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 980,
                      "src": "5333:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5333:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5312:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 561,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5737:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5737:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 565,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5757:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleVesting_$881",
                              "typeString": "contract MerkleVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleVesting_$881",
                              "typeString": "contract MerkleVesting"
                            }
                          ],
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5749:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 563,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5749:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5749:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 567,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "5764:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 558,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "5718:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1041",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1022,
                      "src": "5718:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5718:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "5718:52:2"
                },
                {
                  "assignments": [
                    571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 571,
                      "mutability": "mutable",
                      "name": "balanceAfter",
                      "nameLocation": "5786:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 599,
                      "src": "5781:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 570,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5781:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 579,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 576,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5825:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleVesting_$881",
                              "typeString": "contract MerkleVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleVesting_$881",
                              "typeString": "contract MerkleVesting"
                            }
                          ],
                          "id": 575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5817:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 574,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5817:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5817:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 572,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "5801:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1041",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 980,
                      "src": "5801:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5801:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5781:50:2"
                },
                {
                  "assignments": [
                    581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 581,
                      "mutability": "mutable",
                      "name": "diff",
                      "nameLocation": "5948:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 599,
                      "src": "5943:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 580,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5943:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 585,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 582,
                      "name": "balanceAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "5955:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 583,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "5970:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5955:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5943:40:2"
                },
                {
                  "expression": {
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 586,
                        "name": "merkleTree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 535,
                        "src": "6055:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 391,
                      "src": "6055:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 589,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "6082:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6055:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "6055:31:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 593,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "6117:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 594,
                          "name": "merkleTree",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "6128:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                            "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                          }
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 389,
                        "src": "6128:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 596,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "6153:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 592,
                      "name": "TokensDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "6101:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "EmitStatement",
                  "src": "6096:62:2"
                }
              ]
            },
            "documentation": {
              "id": 513,
              "nodeType": "StructuredDocumentation",
              "src": "4484:485:2",
              "text": "@notice Add funds to an existing merkle-vesting-schedule\n @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs\n @param treeIndex index into array-like map of merkleTrees\n @param value the amount of tokens user wishes to use to fund the airdrop, note trees can be underfunded"
            },
            "functionSelector": "f16ad51e",
            "id": 600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokens",
            "nameLocation": "4983:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "5002:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "4997:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4997:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5018:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "5013:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5013:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4996:28:2"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5032:0:2"
            },
            "scope": 881,
            "src": "4974:1191:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 724,
              "nodeType": "Block",
              "src": "7383:1817:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 619,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "7397:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7410:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7397:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 622,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "7415:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 623,
                        "name": "numTrees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "7427:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7415:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7397:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 631,
                  "nodeType": "IfStatement",
                  "src": "7393:99:2",
                  "trueBody": {
                    "id": 630,
                    "nodeType": "Block",
                    "src": "7437:55:2",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 627,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "7471:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 626,
                            "name": "BadTreeIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "7458:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7458:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 629,
                        "nodeType": "RevertStatement",
                        "src": "7451:30:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 633,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "7684:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 724,
                      "src": "7676:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 632,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7676:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 644,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 637,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "7712:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 638,
                            "name": "totalCoins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "7725:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 639,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "7737:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 640,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "7748:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 641,
                            "name": "lockPeriodEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "7757:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 635,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7701:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7701:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7701:74:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 634,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7691:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7691:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7676:100:2"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 645,
                        "name": "initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "7837:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                          "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
                        }
                      },
                      "id": 647,
                      "indexExpression": {
                        "id": 646,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "7849:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7837:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 649,
                    "indexExpression": {
                      "id": 648,
                      "name": "leaf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "7860:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7837:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 656,
                  "nodeType": "IfStatement",
                  "src": "7833:108:2",
                  "trueBody": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "7867:74:2",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 651,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "7907:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 652,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "7918:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 650,
                            "name": "AlreadyInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "7888:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) pure"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7888:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 654,
                        "nodeType": "RevertStatement",
                        "src": "7881:49:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 659,
                      "mutability": "mutable",
                      "name": "tree",
                      "nameLocation": "8050:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 724,
                      "src": "8031:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree"
                      },
                      "typeName": {
                        "id": 658,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 657,
                          "name": "MerkleTree",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 392,
                          "src": "8031:10:2"
                        },
                        "referencedDeclaration": 392,
                        "src": "8031:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 663,
                  "initialValue": {
                    "baseExpression": {
                      "id": 660,
                      "name": "merkleTrees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "8057:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$392_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                      }
                    },
                    "id": 662,
                    "indexExpression": {
                      "id": 661,
                      "name": "treeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "8069:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8057:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$392_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8031:48:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 667,
                          "name": "leaf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 633,
                          "src": "8191:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 668,
                          "name": "proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 616,
                          "src": "8197:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 664,
                            "name": "tree",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 659,
                            "src": "8165:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                              "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rootHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 385,
                          "src": "8165:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "verifyProof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "8165:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_bytes32_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes32_$",
                          "typeString": "function (bytes32,bytes32,bytes32[] memory) pure returns (bool)"
                        }
                      },
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8165:38:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8207:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8165:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 679,
                  "nodeType": "IfStatement",
                  "src": "8161:117:2",
                  "trueBody": {
                    "id": 678,
                    "nodeType": "Block",
                    "src": "8214:64:2",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 673,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "8244:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 674,
                              "name": "leaf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "8255:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 675,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 616,
                              "src": "8261:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            ],
                            "id": 672,
                            "name": "BadProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "8235:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,bytes32,bytes32[] memory) pure"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8235:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 677,
                        "nodeType": "RevertStatement",
                        "src": "8228:39:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 680,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 398,
                          "src": "8349:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 683,
                        "indexExpression": {
                          "id": 681,
                          "name": "treeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 603,
                          "src": "8361:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8349:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 684,
                      "indexExpression": {
                        "id": 682,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "8372:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8349:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8380:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8349:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 687,
                  "nodeType": "ExpressionStatement",
                  "src": "8349:35:2"
                },
                {
                  "assignments": [
                    689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 689,
                      "mutability": "mutable",
                      "name": "coinsPerSecond",
                      "nameLocation": "8557:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 724,
                      "src": "8552:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 688,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8552:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 696,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 690,
                      "name": "totalCoins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "8574:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 691,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "8588:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 692,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "8598:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8588:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 694,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8587:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8574:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8552:56:2"
                },
                {
                  "expression": {
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 697,
                          "name": "tranches",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "8670:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Tranche_$383_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct MerkleVesting.Tranche storage ref))"
                          }
                        },
                        "id": 700,
                        "indexExpression": {
                          "id": 698,
                          "name": "destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 605,
                          "src": "8679:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8670:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$383_storage_$",
                          "typeString": "mapping(uint256 => struct MerkleVesting.Tranche storage ref)"
                        }
                      },
                      "id": 701,
                      "indexExpression": {
                        "id": 699,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "8692:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8670:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$383_storage",
                        "typeString": "struct MerkleVesting.Tranche storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 703,
                          "name": "totalCoins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "8726:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 704,
                          "name": "totalCoins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "8781:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 705,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 609,
                          "src": "8843:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 706,
                          "name": "endTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 611,
                          "src": "8866:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 707,
                          "name": "coinsPerSecond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "8887:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 708,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 609,
                          "src": "8915:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 709,
                          "name": "lockPeriodEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 613,
                          "src": "8979:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 702,
                        "name": "Tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "8705:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Tranche_$383_storage_ptr_$",
                          "typeString": "type(struct MerkleVesting.Tranche storage pointer)"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8705:301:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$383_memory_ptr",
                        "typeString": "struct MerkleVesting.Tranche memory"
                      }
                    },
                    "src": "8670:336:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$383_storage",
                      "typeString": "struct MerkleVesting.Tranche storage ref"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "8670:336:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 713,
                      "name": "lockPeriodEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "9100:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 714,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9120:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9120:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9100:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 723,
                  "nodeType": "IfStatement",
                  "src": "9096:98:2",
                  "trueBody": {
                    "id": 722,
                    "nodeType": "Block",
                    "src": "9137:57:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 718,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "9160:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 719,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "9171:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 717,
                            "name": "withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 880,
                            "src": "9151:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9151:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 721,
                        "nodeType": "ExpressionStatement",
                        "src": "9151:32:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 601,
              "nodeType": "StructuredDocumentation",
              "src": "6171:1046:2",
              "text": "@notice Called once per recipient of a vesting schedule to initialize the vesting schedule\n @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs of global tree stats\n @dev The contract has no knowledge of the vesting schedules until this function is called\n @param treeIndex index into array-like map of merkleTrees\n @param destination address that will receive tokens\n @param totalCoins amount of tokens to be released after vesting completes\n @param startTime time that vesting schedule starts, can be past or future\n @param endTime time vesting schedule completes, can be past or future\n @param lockPeriodEndTime time that coins become unlocked, can be after endTime\n @param proof array of hashes linking leaf hash of (destination, totalCoins, startTime, endTime, lockPeriodEndTime) to root"
            },
            "functionSelector": "a8efa9ba",
            "id": 725,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "7231:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "7247:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "7242:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7242:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "7266:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "7258:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7258:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "totalCoins",
                  "nameLocation": "7284:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "7279:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7279:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "7301:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "7296:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7296:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "7317:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "7312:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7312:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 613,
                  "mutability": "mutable",
                  "name": "lockPeriodEndTime",
                  "nameLocation": "7331:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "7326:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7326:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "7367:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 725,
                  "src": "7350:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 614,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7350:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 615,
                    "nodeType": "ArrayTypeName",
                    "src": "7350:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7241:132:2"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7383:0:2"
            },
            "scope": 881,
            "src": "7222:1978:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 879,
              "nodeType": "Block",
              "src": "9699:2282:2",
              "statements": [
                {
                  "assignments": [
                    735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 735,
                      "mutability": "mutable",
                      "name": "tranche",
                      "nameLocation": "9770:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 879,
                      "src": "9754:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                        "typeString": "struct MerkleVesting.Tranche"
                      },
                      "typeName": {
                        "id": 734,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 733,
                          "name": "Tranche",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 383,
                          "src": "9754:7:2"
                        },
                        "referencedDeclaration": 383,
                        "src": "9754:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 741,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 736,
                        "name": "tranches",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "9780:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Tranche_$383_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct MerkleVesting.Tranche storage ref))"
                        }
                      },
                      "id": 738,
                      "indexExpression": {
                        "id": 737,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "9789:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9780:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$383_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.Tranche storage ref)"
                      }
                    },
                    "id": 740,
                    "indexExpression": {
                      "id": 739,
                      "name": "treeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 728,
                      "src": "9802:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9780:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$383_storage",
                      "typeString": "struct MerkleVesting.Tranche storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9754:58:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 742,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "9896:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalCoins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 370,
                      "src": "9896:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9918:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9896:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 752,
                  "nodeType": "IfStatement",
                  "src": "9892:105:2",
                  "trueBody": {
                    "id": 751,
                    "nodeType": "Block",
                    "src": "9921:76:2",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 747,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 728,
                              "src": "9963:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 748,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 730,
                              "src": "9974:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 746,
                            "name": "UninitializedAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "9942:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) pure"
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9942:44:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 750,
                        "nodeType": "RevertStatement",
                        "src": "9935:51:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 753,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10059:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10059:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 755,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "10077:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 756,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lockPeriodEndTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 382,
                      "src": "10077:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10059:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 764,
                  "nodeType": "IfStatement",
                  "src": "10055:123:2",
                  "trueBody": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "10104:74:2",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 759,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 728,
                              "src": "10144:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 760,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 730,
                              "src": "10155:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 758,
                            "name": "AccountStillLocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "10125:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) pure"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10125:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 762,
                        "nodeType": "RevertStatement",
                        "src": "10118:49:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 765,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "10234:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currentCoins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 372,
                      "src": "10234:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10258:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10234:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 775,
                  "nodeType": "IfStatement",
                  "src": "10230:99:2",
                  "trueBody": {
                    "id": 774,
                    "nodeType": "Block",
                    "src": "10261:68:2",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 770,
                              "name": "treeIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 728,
                              "src": "10295:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 771,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 730,
                              "src": "10306:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 769,
                            "name": "AccountEmpty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "10282:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) pure"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10282:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 773,
                        "nodeType": "RevertStatement",
                        "src": "10275:43:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 777,
                      "mutability": "mutable",
                      "name": "currentWithdrawal",
                      "nameLocation": "10391:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 879,
                      "src": "10386:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 776,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10386:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 778,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10386:22:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 779,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10494:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10494:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 781,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "10513:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 782,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 376,
                      "src": "10513:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10494:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 802,
                    "nodeType": "Block",
                    "src": "10601:158:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 790,
                            "name": "currentWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "10657:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 791,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "10678:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "10678:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 793,
                                      "name": "tranche",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 735,
                                      "src": "10696:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                                        "typeString": "struct MerkleVesting.Tranche storage pointer"
                                      }
                                    },
                                    "id": 794,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastWithdrawalTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 380,
                                    "src": "10696:26:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10678:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 796,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10677:46:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 797,
                                "name": "tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 735,
                                "src": "10726:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                                  "typeString": "struct MerkleVesting.Tranche storage pointer"
                                }
                              },
                              "id": 798,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "coinsPerSecond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 378,
                              "src": "10726:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10677:71:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10657:91:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 801,
                        "nodeType": "ExpressionStatement",
                        "src": "10657:91:2"
                      }
                    ]
                  },
                  "id": 803,
                  "nodeType": "IfStatement",
                  "src": "10490:269:2",
                  "trueBody": {
                    "id": 789,
                    "nodeType": "Block",
                    "src": "10530:65:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 784,
                            "name": "currentWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 777,
                            "src": "10544:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 785,
                              "name": "tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 735,
                              "src": "10564:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                                "typeString": "struct MerkleVesting.Tranche storage pointer"
                              }
                            },
                            "id": 786,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentCoins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 372,
                            "src": "10564:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10544:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 788,
                        "nodeType": "ExpressionStatement",
                        "src": "10544:40:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 804,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "10854:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 806,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastWithdrawalTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 380,
                      "src": "10854:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 807,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10883:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10883:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10854:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "10854:44:2"
                },
                {
                  "assignments": [
                    813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 813,
                      "mutability": "mutable",
                      "name": "tree",
                      "nameLocation": "10928:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 879,
                      "src": "10909:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                        "typeString": "struct MerkleVesting.MerkleTree"
                      },
                      "typeName": {
                        "id": 812,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 811,
                          "name": "MerkleTree",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 392,
                          "src": "10909:10:2"
                        },
                        "referencedDeclaration": 392,
                        "src": "10909:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 817,
                  "initialValue": {
                    "baseExpression": {
                      "id": 814,
                      "name": "merkleTrees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "10935:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$392_storage_$",
                        "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"
                      }
                    },
                    "id": 816,
                    "indexExpression": {
                      "id": 815,
                      "name": "treeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 728,
                      "src": "10947:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10935:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleTree_$392_storage",
                      "typeString": "struct MerkleVesting.MerkleTree storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10909:48:2"
                },
                {
                  "assignments": [
                    820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 820,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "10974:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 879,
                      "src": "10967:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1041",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 819,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 818,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1041,
                          "src": "10967:6:2"
                        },
                        "referencedDeclaration": 1041,
                        "src": "10967:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1041",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 825,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 822,
                          "name": "tree",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "10989:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                            "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                          }
                        },
                        "id": 823,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 389,
                        "src": "10989:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 821,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "10982:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1041_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10982:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1041",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10967:40:2"
                },
                {
                  "assignments": [
                    827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 827,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "11022:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 879,
                      "src": "11017:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 826,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11017:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 835,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 832,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11062:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleVesting_$881",
                              "typeString": "contract MerkleVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleVesting_$881",
                              "typeString": "contract MerkleVesting"
                            }
                          ],
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11054:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 830,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11054:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11054:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 828,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "11038:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1041",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 980,
                      "src": "11038:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11038:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11017:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 839,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "11465:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 840,
                        "name": "currentWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 777,
                        "src": "11478:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 836,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "11450:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1041",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 990,
                      "src": "11450:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11450:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 842,
                  "nodeType": "ExpressionStatement",
                  "src": "11450:46:2"
                },
                {
                  "assignments": [
                    844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 844,
                      "mutability": "mutable",
                      "name": "balanceAfter",
                      "nameLocation": "11603:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 879,
                      "src": "11598:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 843,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11598:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 852,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 849,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11642:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleVesting_$881",
                              "typeString": "contract MerkleVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleVesting_$881",
                              "typeString": "contract MerkleVesting"
                            }
                          ],
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11634:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 847,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11634:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11634:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 845,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 820,
                        "src": "11618:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1041",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 980,
                      "src": "11618:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11618:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11598:50:2"
                },
                {
                  "assignments": [
                    854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 854,
                      "mutability": "mutable",
                      "name": "diff",
                      "nameLocation": "11663:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 879,
                      "src": "11658:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 853,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11658:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 858,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 855,
                      "name": "balanceBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "11670:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 856,
                      "name": "balanceAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "11686:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11670:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11658:40:2"
                },
                {
                  "expression": {
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 859,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "11749:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                          "typeString": "struct MerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentCoins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 372,
                      "src": "11749:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 862,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "11773:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11749:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "11749:28:2"
                },
                {
                  "expression": {
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 865,
                        "name": "tree",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "11863:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleTree_$392_storage_ptr",
                          "typeString": "struct MerkleVesting.MerkleTree storage pointer"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 391,
                      "src": "11863:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 868,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "11884:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11863:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "11863:25:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 872,
                        "name": "treeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "11923:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 873,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "11934:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 874,
                        "name": "diff",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "11947:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 875,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 735,
                          "src": "11953:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$383_storage_ptr",
                            "typeString": "struct MerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 876,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currentCoins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 372,
                        "src": "11953:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 871,
                      "name": "WithdrawalOccurred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "11904:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11904:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 878,
                  "nodeType": "EmitStatement",
                  "src": "11899:75:2"
                }
              ]
            },
            "documentation": {
              "id": 726,
              "nodeType": "StructuredDocumentation",
              "src": "9206:426:2",
              "text": "@notice Claim funds as a recipient in the merkle-drop\n @dev Anyone may call this function for anyone else, funds go to destination regardless, it's just a question of\n @dev who provides the proof and pays the gas, msg.sender is not used in this function\n @param treeIndex index into array-like map of merkleTrees, which tree should we apply the proof to?\n @param destination recipient of tokens"
            },
            "functionSelector": "00f714ce",
            "id": 880,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "9646:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "treeIndex",
                  "nameLocation": "9660:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 880,
                  "src": "9655:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9655:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "9679:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 880,
                  "src": "9671:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9671:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9654:37:2"
            },
            "returnParameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9699:0:2"
            },
            "scope": 881,
            "src": "9637:2344:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 882,
        "src": "558:11426:2",
        "usedErrors": [
          442,
          448,
          457,
          463,
          469,
          475
        ]
      }
    ],
    "src": "42:11942:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50610e18806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c8063a8efa9ba1161005b578063a8efa9ba1461013f578063c26cb54f14610152578063cf61bf72146101db578063f16ad51e1461021957600080fd5b8062f714ce1461008c578063390b7c66146100a157806385d88cb1146100bd5780639e18a0541461012c575b600080fd5b61009f61009a366004610ac5565b61022c565b005b6100aa60005481565b6040519081526020015b60405180910390f35b6100fd6100cb366004610af1565b600260208190526000918252604090912080546001820154928201546003909201549092916001600160a01b03169084565b6040516100b4949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b61009f61013a366004610b0a565b61052d565b61009f61014d366004610b5d565b61061b565b6101a6610160366004610c5e565b6003602081815260009384526040808520909152918352912080546001820154600283015493830154600484015460058501546006909501549395929492939192909187565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0016100b4565b6102096101e9366004610c88565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100b4565b61009f610227366004610c88565b61089b565b6001600160a01b038116600090815260036020908152604080832085845290915290208054610284576040516211b7dd60ea1b8152600481018490526001600160a01b03831660248201526044015b60405180910390fd5b80600601544210156102bb5760405163f49184ff60e01b8152600481018490526001600160a01b038316602482015260440161027b565b60018101546102ef576040516324a137c160e01b8152600481018490526001600160a01b038316602482015260440161027b565b60008160030154421061030757506001810154610328565b6004820154600583015461031b9042610cc0565b6103259190610cd7565b90505b42600583015560008481526002602081905260408083209182015490516370a0823160e01b815230600482015291926001600160a01b039091169182906370a0823190602401602060405180830381865afa15801561038b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103af9190610cf6565b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018790529192509083169063a9059cbb906044016020604051808303816000875af1158015610402573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104269190610d0f565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610cf6565b905060006104a08284610cc0565b9050808760010160008282546104b69190610cc0565b92505081905550808560030160008282546104d19190610cc0565b909155505060018701546040805183815260208101929092526001600160a01b038a16918b917f1680e4cfe90468085407ef2b599dbe94b0aa30ff9f180f0e41d22eb71c872872910160405180910390a3505050505050505050565b6040518060800160405280858152602001848152602001836001600160a01b03168152602001600081525060026000806000815461056a90610d38565b918290555081526020808201929092526040908101600090812084518155928401516001840155908301516002830180546001600160a01b0319166001600160a01b03909216919091179055606090920151600390910155546105cd908261089b565b60005460408051868152602081018690526001600160a01b03851692917fb72ea3ed46a7513251023946d5d35916f3e1d76d748bb144e641d1162dee222f910160405180910390a350505050565b861580610629575060005487115b1561064a5760405163190a97ad60e01b81526004810188905260240161027b565b604080516001600160a01b0388166020820152908101869052606081018590526080810184905260a0810183905260009060c00160408051601f19818403018152918152815160209283012060008b81526001845282812082825290935291205490915060ff16156106e15760405163d700855760e01b8152600481018990526001600160a01b038816602482015260440161027b565b6000888152600260205260409081902080549151632769cd1f60e21b8152909173__MerkleLib_____________________________91639da7347c9161072d9186908890600401610d53565b602060405180830381865af415801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e9190610d0f565b61079157888284604051630da5a8fd60e41b815260040161027b93929190610d53565b60008981526001602081815260408084208685529091528220805460ff191690911790556107bf8787610cc0565b6107c99089610da8565b90506040518060e0016040528089815260200189815260200188815260200187815260200182815260200188815260200186815250600360008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601559050504285101561088f5761088f8a8a61022c565b50505050505050505050565b8115806108a9575060005482115b156108ca5760405163190a97ad60e01b81526004810183905260240161027b565b60008281526002602081905260408083209182015490516370a0823160e01b815230600482015291926001600160a01b039091169182906370a0823190602401602060405180830381865afa158015610927573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094b9190610cf6565b6040516323b872dd60e01b8152336004820152306024820152604481018690529091506001600160a01b038316906323b872dd906064016020604051808303816000875af11580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190610d0f565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610a0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a319190610cf6565b90506000610a3f8383610cc0565b905080856003016000828254610a559190610dca565b909155505060028501546040518281526001600160a01b039091169088907fb162210da7d23d82c18cff5af46d3562661d26b42a6848fa28d64a6bdc70386a9060200160405180910390a350505050505050565b80356001600160a01b0381168114610ac057600080fd5b919050565b60008060408385031215610ad857600080fd5b82359150610ae860208401610aa9565b90509250929050565b600060208284031215610b0357600080fd5b5035919050565b60008060008060808587031215610b2057600080fd5b8435935060208501359250610b3760408601610aa9565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610b7857600080fd5b873596506020610b89818a01610aa9565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff80821115610bc257600080fd5b818b0191508b601f830112610bd657600080fd5b813581811115610be857610be8610b47565b8060051b604051601f19603f83011681018181108582111715610c0d57610c0d610b47565b60405291825284820192508381018501918e831115610c2b57600080fd5b938501935b82851015610c4957843584529385019392850192610c30565b80965050505050505092959891949750929550565b60008060408385031215610c7157600080fd5b610c7a83610aa9565b946020939093013593505050565b60008060408385031215610c9b57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082821015610cd257610cd2610caa565b500390565b6000816000190483118215151615610cf157610cf1610caa565b500290565b600060208284031215610d0857600080fd5b5051919050565b600060208284031215610d2157600080fd5b81518015158114610d3157600080fd5b9392505050565b6000600019821415610d4c57610d4c610caa565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015610d9a57845183529383019391830191600101610d7e565b509098975050505050505050565b600082610dc557634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610ddd57610ddd610caa565b50019056fea2646970667358221220b36503167aba1378c4e9ec42bc320d6fc9f23e120efe03d251a86854506d2f3c64736f6c634300080c0033",
  "bytecodeSha1": "40b7dadcb665bdaf1d55c2237ac41bcc50bd903c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "MerkleVesting",
  "coverageMap": {
    "branches": {
      "1": {},
      "2": {
        "MerkleVesting.depositTokens": {
          "29": [
            5046,
            5060,
            true
          ],
          "30": [
            5064,
            5084,
            false
          ]
        },
        "MerkleVesting.initialize": {
          "25": [
            7397,
            7411,
            true
          ],
          "26": [
            7415,
            7435,
            false
          ],
          "27": [
            7837,
            7865,
            false
          ],
          "28": [
            9100,
            9135,
            false
          ]
        },
        "MerkleVesting.withdraw": {
          "23": [
            10059,
            10102,
            false
          ],
          "24": [
            10494,
            10528,
            false
          ]
        }
      },
      "3": {}
    },
    "statements": {
      "1": {},
      "2": {
        "MerkleVesting.addMerkleRoot": {
          "10": [
            4141,
            4322
          ],
          "11": [
            4361,
            4398
          ],
          "12": [
            4408,
            4471
          ]
        },
        "MerkleVesting.depositTokens": {
          "19": [
            5042,
            5141
          ],
          "20": [
            5718,
            5770
          ],
          "21": [
            6055,
            6086
          ],
          "22": [
            6096,
            6158
          ]
        },
        "MerkleVesting.initialize": {
          "13": [
            7393,
            7492
          ],
          "14": [
            7833,
            7941
          ],
          "15": [
            8161,
            8278
          ],
          "16": [
            8349,
            8384
          ],
          "17": [
            8670,
            9006
          ],
          "18": [
            9151,
            9183
          ]
        },
        "MerkleVesting.withdraw": {
          "0": [
            9892,
            9997
          ],
          "1": [
            10055,
            10178
          ],
          "2": [
            10230,
            10329
          ],
          "3": [
            10544,
            10584
          ],
          "4": [
            10657,
            10748
          ],
          "5": [
            10854,
            10898
          ],
          "6": [
            11450,
            11496
          ],
          "7": [
            11749,
            11777
          ],
          "8": [
            11863,
            11888
          ],
          "9": [
            11899,
            11974
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "IERC20",
    "MerkleLib"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100875760003560e01c8063a8efa9ba1161005b578063a8efa9ba1461013f578063c26cb54f14610152578063cf61bf72146101db578063f16ad51e1461021957600080fd5b8062f714ce1461008c578063390b7c66146100a157806385d88cb1146100bd5780639e18a0541461012c575b600080fd5b61009f61009a366004610ac5565b61022c565b005b6100aa60005481565b6040519081526020015b60405180910390f35b6100fd6100cb366004610af1565b600260208190526000918252604090912080546001820154928201546003909201549092916001600160a01b03169084565b6040516100b4949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b61009f61013a366004610b0a565b61052d565b61009f61014d366004610b5d565b61061b565b6101a6610160366004610c5e565b6003602081815260009384526040808520909152918352912080546001820154600283015493830154600484015460058501546006909501549395929492939192909187565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0016100b4565b6102096101e9366004610c88565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100b4565b61009f610227366004610c88565b61089b565b6001600160a01b038116600090815260036020908152604080832085845290915290208054610284576040516211b7dd60ea1b8152600481018490526001600160a01b03831660248201526044015b60405180910390fd5b80600601544210156102bb5760405163f49184ff60e01b8152600481018490526001600160a01b038316602482015260440161027b565b60018101546102ef576040516324a137c160e01b8152600481018490526001600160a01b038316602482015260440161027b565b60008160030154421061030757506001810154610328565b6004820154600583015461031b9042610cc0565b6103259190610cd7565b90505b42600583015560008481526002602081905260408083209182015490516370a0823160e01b815230600482015291926001600160a01b039091169182906370a0823190602401602060405180830381865afa15801561038b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103af9190610cf6565b60405163a9059cbb60e01b81526001600160a01b038881166004830152602482018790529192509083169063a9059cbb906044016020604051808303816000875af1158015610402573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104269190610d0f565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190610cf6565b905060006104a08284610cc0565b9050808760010160008282546104b69190610cc0565b92505081905550808560030160008282546104d19190610cc0565b909155505060018701546040805183815260208101929092526001600160a01b038a16918b917f1680e4cfe90468085407ef2b599dbe94b0aa30ff9f180f0e41d22eb71c872872910160405180910390a3505050505050505050565b6040518060800160405280858152602001848152602001836001600160a01b03168152602001600081525060026000806000815461056a90610d38565b918290555081526020808201929092526040908101600090812084518155928401516001840155908301516002830180546001600160a01b0319166001600160a01b03909216919091179055606090920151600390910155546105cd908261089b565b60005460408051868152602081018690526001600160a01b03851692917fb72ea3ed46a7513251023946d5d35916f3e1d76d748bb144e641d1162dee222f910160405180910390a350505050565b861580610629575060005487115b1561064a5760405163190a97ad60e01b81526004810188905260240161027b565b604080516001600160a01b0388166020820152908101869052606081018590526080810184905260a0810183905260009060c00160408051601f19818403018152918152815160209283012060008b81526001845282812082825290935291205490915060ff16156106e15760405163d700855760e01b8152600481018990526001600160a01b038816602482015260440161027b565b6000888152600260205260409081902080549151632769cd1f60e21b8152909173__$61dd25696c02d5bd2863c8d2c1a2324a87$__91639da7347c9161072d9186908890600401610d53565b602060405180830381865af415801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e9190610d0f565b61079157888284604051630da5a8fd60e41b815260040161027b93929190610d53565b60008981526001602081815260408084208685529091528220805460ff191690911790556107bf8787610cc0565b6107c99089610da8565b90506040518060e0016040528089815260200189815260200188815260200187815260200182815260200188815260200186815250600360008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601559050504285101561088f5761088f8a8a61022c565b50505050505050505050565b8115806108a9575060005482115b156108ca5760405163190a97ad60e01b81526004810183905260240161027b565b60008281526002602081905260408083209182015490516370a0823160e01b815230600482015291926001600160a01b039091169182906370a0823190602401602060405180830381865afa158015610927573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094b9190610cf6565b6040516323b872dd60e01b8152336004820152306024820152604481018690529091506001600160a01b038316906323b872dd906064016020604051808303816000875af11580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190610d0f565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610a0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a319190610cf6565b90506000610a3f8383610cc0565b905080856003016000828254610a559190610dca565b909155505060028501546040518281526001600160a01b039091169088907fb162210da7d23d82c18cff5af46d3562661d26b42a6848fa28d64a6bdc70386a9060200160405180910390a350505050505050565b80356001600160a01b0381168114610ac057600080fd5b919050565b60008060408385031215610ad857600080fd5b82359150610ae860208401610aa9565b90509250929050565b600060208284031215610b0357600080fd5b5035919050565b60008060008060808587031215610b2057600080fd5b8435935060208501359250610b3760408601610aa9565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610b7857600080fd5b873596506020610b89818a01610aa9565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff80821115610bc257600080fd5b818b0191508b601f830112610bd657600080fd5b813581811115610be857610be8610b47565b8060051b604051601f19603f83011681018181108582111715610c0d57610c0d610b47565b60405291825284820192508381018501918e831115610c2b57600080fd5b938501935b82851015610c4957843584529385019392850192610c30565b80965050505050505092959891949750929550565b60008060408385031215610c7157600080fd5b610c7a83610aa9565b946020939093013593505050565b60008060408385031215610c9b57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082821015610cd257610cd2610caa565b500390565b6000816000190483118215151615610cf157610cf1610caa565b500290565b600060208284031215610d0857600080fd5b5051919050565b600060208284031215610d2157600080fd5b81518015158114610d3157600080fd5b9392505050565b6000600019821415610d4c57610d4c610caa565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015610d9a57845183529383019391830191600101610d7e565b509098975050505050505050565b600082610dc557634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610ddd57610ddd610caa565b50019056fea2646970667358221220b36503167aba1378c4e9ec42bc320d6fc9f23e120efe03d251a86854506d2f3c64736f6c634300080c0033",
  "deployedSourceMap": "558:11426:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9637:2344;;;;;;:::i;:::-;;:::i;:::-;;677:20;;;;;;;;;597:25:4;;;585:2;570:18;677:20:2;;;;;;;;2234:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2234:47:2;;;;;;;;;;;;;1049:25:4;;;1105:2;1090:18;;1083:34;;;;-1:-1:-1;;;;;1153:32:4;1148:2;1133:18;;1126:60;1217:2;1202:18;;1195:34;1036:3;1021:19;;818:417;3969:509:2;;;;;;:::i;:::-;;:::i;7222:1978::-;;;;;;:::i;:::-;;:::i;2355:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3880:25:4;;;3936:2;3921:18;;3914:34;;;;3964:18;;;3957:34;;;;4022:2;4007:18;;4000:34;;;;4065:3;4050:19;;4043:35;4109:3;4094:19;;4087:35;4153:3;4138:19;;4131:35;3867:3;3852:19;2355:62:2;3565:607:4;2102:62:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4595:14:4;;4588:22;4570:41;;4558:2;4543:18;2102:62:2;4430:187:4;4974:1191:2;;;;;;:::i;:::-;;:::i;9637:2344::-;-1:-1:-1;;;;;9780:21:2;;9754:23;9780:21;;;:8;:21;;;;;;;;:32;;;;;;;;9896:18;;9892:105;;9942:44;;-1:-1:-1;;;9942:44:2;;;;;5049:25:4;;;-1:-1:-1;;;;;5110:32:4;;5090:18;;;5083:60;5022:18;;9942:44:2;;;;;;;;9892:105;10077:7;:25;;;10059:15;:43;10055:123;;;10125:42;;-1:-1:-1;;;10125:42:2;;;;;5049:25:4;;;-1:-1:-1;;;;;5110:32:4;;5090:18;;;5083:60;5022:18;;10125:42:2;4875:274:4;10055:123:2;10234:20;;;;10230:99;;10282:36;;-1:-1:-1;;;10282:36:2;;;;;5049:25:4;;;-1:-1:-1;;;;;5110:32:4;;5090:18;;;5083:60;5022:18;;10282:36:2;4875:274:4;10230:99:2;10386:22;10513:7;:15;;;10494;:34;10490:269;;-1:-1:-1;10564:20:2;;;;10490:269;;;10726:22;;;;10696:26;;;;10678:44;;:15;:44;:::i;:::-;10677:71;;;;:::i;:::-;10657:91;;10490:269;10883:15;10854:26;;;:44;10909:23;10935:22;;;:11;:22;;;;;;;;10989:17;;;;11038:30;;-1:-1:-1;;;11038:30:2;;11062:4;11038:30;;;5735:51:4;10935:22:2;;-1:-1:-1;;;;;10989:17:2;;;;;;11038:15;;5708:18:4;;11038:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11450:46;;-1:-1:-1;;;11450:46:2;;-1:-1:-1;;;;;6178:32:4;;;11450:46:2;;;6160:51:4;6227:18;;;6220:34;;;11017:51:2;;-1:-1:-1;11450:14:2;;;;;;6133:18:4;;11450:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11618:30:2;;-1:-1:-1;;;11618:30:2;;11642:4;11618:30;;;5735:51:4;11598:17:2;;-1:-1:-1;;;;;11618:15:2;;;;;5708:18:4;;11618:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11598:50;-1:-1:-1;11658:9:2;11670:28;11598:50;11670:13;:28;:::i;:::-;11658:40;;11773:4;11749:7;:20;;;:28;;;;;;;:::i;:::-;;;;;;;;11884:4;11863;:17;;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;11953:20:2;;;;11904:70;;;6721:25:4;;;6777:2;6762:18;;6755:34;;;;-1:-1:-1;;;;;11904:70:2;;;11923:9;;11904:70;;6694:18:4;11904:70:2;;;;;;;9699:2282;;;;;;;9637:2344;;:::o;3969:509::-;4167:155;;;;;;;;4191:7;4167:155;;;;4212:8;4167:155;;;;4234:12;-1:-1:-1;;;;;4167:155:2;;;;;4260:1;4167:155;;;4141:11;:23;4155:8;;4153:10;;;;;:::i;:::-;;;;;-1:-1:-1;4141:23:2;;;;;;;;;;;;;;-1:-1:-1;4141:23:2;;;:181;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4141:181:2;-1:-1:-1;;;;;4141:181:2;;;;;;;;;;;;;;;;;;;4375:8;4361:37;;4385:12;4361:13;:37::i;:::-;4429:8;;4413:58;;;6721:25:4;;;6777:2;6762:18;;6755:34;;;-1:-1:-1;;;;;4413:58:2;;;4429:8;4413:58;;6694:18:4;4413:58:2;;;;;;;3969:509;;;;:::o;7222:1978::-;7397:14;;;:38;;;7427:8;;7415:9;:20;7397:38;7393:99;;;7458:23;;-1:-1:-1;;;7458:23:2;;;;;597:25:4;;;570:18;;7458:23:2;451:177:4;7393:99:2;7701:74;;;-1:-1:-1;;;;;7470:32:4;;7701:74:2;;;7452:51:4;7519:18;;;7512:34;;;7562:18;;;7555:34;;;7605:18;;;7598:34;;;7648:19;;;7641:35;;;7676:12:2;;7424:19:4;;7701:74:2;;;-1:-1:-1;;7701:74:2;;;;;;;;;7691:85;;7701:74;7691:85;;;;7837:22;;;;:11;:22;;;;;:28;;;;;;;;;7691:85;;-1:-1:-1;7837:28:2;;7833:108;;;7888:42;;-1:-1:-1;;;7888:42:2;;;;;5049:25:4;;;-1:-1:-1;;;;;5110:32:4;;5090:18;;;5083:60;5022:18;;7888:42:2;4875:274:4;7833:108:2;8031:23;8057:22;;;:11;:22;;;;;;;8165:13;;:38;;-1:-1:-1;;;8165:38:2;;8057:22;;8165:25;;;;:38;;8191:4;;8197:5;;8165:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8161:117;;8244:9;8255:4;8261:5;8235:32;;-1:-1:-1;;;8235:32:2;;;;;;;;;;:::i;8161:117::-;8349:22;;;;8380:4;8349:22;;;;;;;;:28;;;;;;;;:35;;-1:-1:-1;;8349:35:2;;;;;;8588:19;8598:9;8588:7;:19;:::i;:::-;8574:34;;:10;:34;:::i;:::-;8552:56;;8705:301;;;;;;;;8726:10;8705:301;;;;8781:10;8705:301;;;;8843:9;8705:301;;;;8866:7;8705:301;;;;8887:14;8705:301;;;;8915:9;8705:301;;;;8979:17;8705:301;;;8670:8;:21;8679:11;-1:-1:-1;;;;;8670:21:2;-1:-1:-1;;;;;8670:21:2;;;;;;;;;;;;:32;8692:9;8670:32;;;;;;;;;;;:336;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9120:15;9100:17;:35;9096:98;;;9151:32;9160:9;9171:11;9151:8;:32::i;:::-;7383:1817;;;7222:1978;;;;;;;:::o;4974:1191::-;5046:14;;;:38;;;5076:8;;5064:9;:20;5046:38;5042:99;;;5107:23;;-1:-1:-1;;;5107:23:2;;;;;597:25:4;;;570:18;;5107:23:2;451:177:4;5042:99:2;5191:29;5223:22;;;:11;:22;;;;;;;;5278:23;;;;5333:30;;-1:-1:-1;;;5333:30:2;;5357:4;5333:30;;;5735:51:4;5223:22:2;;-1:-1:-1;;;;;5278:23:2;;;;;;5333:15;;5708:18:4;;5333:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5718:52;;-1:-1:-1;;;5718:52:2;;5737:10;5718:52;;;9717:34:4;5757:4:2;9767:18:4;;;9760:43;9819:18;;;9812:34;;;5312:51:2;;-1:-1:-1;;;;;;5718:18:2;;;;;9652::4;;5718:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5801:30:2;;-1:-1:-1;;;5801:30:2;;5825:4;5801:30;;;5735:51:4;5781:17:2;;-1:-1:-1;;;;;5801:15:2;;;;;5708:18:4;;5801:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5781:50;-1:-1:-1;5943:9:2;5955:28;5970:13;5781:50;5955:28;:::i;:::-;5943:40;;6082:4;6055:10;:23;;;:31;;;;;;;:::i;:::-;;;;-1:-1:-1;;6128:23:2;;;;6101:57;;597:25:4;;;-1:-1:-1;;;;;6128:23:2;;;;6117:9;;6101:57;;585:2:4;570:18;6101:57:2;;;;;;;5032:1133;;;;;4974:1191;;:::o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;633:180::-;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;-1:-1:-1;784:23:4;;633:180;-1:-1:-1;633:180:4:o;1240:391::-;1326:6;1334;1342;1350;1403:3;1391:9;1382:7;1378:23;1374:33;1371:53;;;1420:1;1417;1410:12;1371:53;1456:9;1443:23;1433:33;;1513:2;1502:9;1498:18;1485:32;1475:42;;1536:38;1570:2;1559:9;1555:18;1536:38;:::i;:::-;1240:391;;;;-1:-1:-1;1526:48:4;;1621:2;1606:18;1593:32;;-1:-1:-1;;1240:391:4:o;1636:127::-;1697:10;1692:3;1688:20;1685:1;1678:31;1728:4;1725:1;1718:15;1752:4;1749:1;1742:15;1768:1533;1906:6;1914;1922;1930;1938;1946;1954;2007:3;1995:9;1986:7;1982:23;1978:33;1975:53;;;2024:1;2021;2014:12;1975:53;2060:9;2047:23;2037:33;;2089:2;2110:38;2144:2;2133:9;2129:18;2110:38;:::i;:::-;2100:48;;2195:2;2184:9;2180:18;2167:32;2157:42;;2246:2;2235:9;2231:18;2218:32;2208:42;;2297:3;2286:9;2282:19;2269:33;2259:43;;2349:3;2338:9;2334:19;2321:33;2311:43;;2405:3;2394:9;2390:19;2377:33;2429:18;2470:2;2462:6;2459:14;2456:34;;;2486:1;2483;2476:12;2456:34;2524:6;2513:9;2509:22;2499:32;;2569:7;2562:4;2558:2;2554:13;2550:27;2540:55;;2591:1;2588;2581:12;2540:55;2627:2;2614:16;2649:2;2645;2642:10;2639:36;;;2655:18;;:::i;:::-;2701:2;2698:1;2694:10;2733:2;2727:9;2796:2;2792:7;2787:2;2783;2779:11;2775:25;2767:6;2763:38;2851:6;2839:10;2836:22;2831:2;2819:10;2816:18;2813:46;2810:72;;;2862:18;;:::i;:::-;2898:2;2891:22;2948:18;;;2982:15;;;;-1:-1:-1;3024:11:4;;;3020:20;;;3052:19;;;3049:39;;;3084:1;3081;3074:12;3049:39;3108:11;;;;3128:142;3144:6;3139:3;3136:15;3128:142;;;3210:17;;3198:30;;3161:12;;;;3248;;;;3128:142;;;3289:6;3279:16;;;;;;;;1768:1533;;;;;;;;;;:::o;3306:254::-;3374:6;3382;3435:2;3423:9;3414:7;3410:23;3406:32;3403:52;;;3451:1;3448;3441:12;3403:52;3474:29;3493:9;3474:29;:::i;:::-;3464:39;3550:2;3535:18;;;;3522:32;;-1:-1:-1;;;3306:254:4:o;4177:248::-;4245:6;4253;4306:2;4294:9;4285:7;4281:23;4277:32;4274:52;;;4322:1;4319;4312:12;4274:52;-1:-1:-1;;4345:23:4;;;4415:2;4400:18;;;4387:32;;-1:-1:-1;4177:248:4:o;5154:127::-;5215:10;5210:3;5206:20;5203:1;5196:31;5246:4;5243:1;5236:15;5270:4;5267:1;5260:15;5286:125;5326:4;5354:1;5351;5348:8;5345:34;;;5359:18;;:::i;:::-;-1:-1:-1;5396:9:4;;5286:125::o;5416:168::-;5456:7;5522:1;5518;5514:6;5510:14;5507:1;5504:21;5499:1;5492:9;5485:17;5481:45;5478:71;;;5529:18;;:::i;:::-;-1:-1:-1;5569:9:4;;5416:168::o;5797:184::-;5867:6;5920:2;5908:9;5899:7;5895:23;5891:32;5888:52;;;5936:1;5933;5926:12;5888:52;-1:-1:-1;5959:16:4;;5797:184;-1:-1:-1;5797:184:4:o;6265:277::-;6332:6;6385:2;6373:9;6364:7;6360:23;6356:32;6353:52;;;6401:1;6398;6391:12;6353:52;6433:9;6427:16;6486:5;6479:13;6472:21;6465:5;6462:32;6452:60;;6508:1;6505;6498:12;6452:60;6531:5;6265:277;-1:-1:-1;;;6265:277:4:o;6800:135::-;6839:3;-1:-1:-1;;6860:17:4;;6857:43;;;6880:18;;:::i;:::-;-1:-1:-1;6927:1:4;6916:13;;6800:135::o;7687:783::-;7893:4;7941:2;7930:9;7926:18;7971:6;7960:9;7953:25;7997:2;8035:6;8030:2;8019:9;8015:18;8008:34;8078:2;8073;8062:9;8058:18;8051:30;8101:6;8136;8130:13;8167:6;8159;8152:22;8205:3;8194:9;8190:19;8183:26;;8244:2;8236:6;8232:15;8218:29;;8265:1;8275:169;8289:6;8286:1;8283:13;8275:169;;;8350:13;;8338:26;;8419:15;;;;8384:12;;;;8311:1;8304:9;8275:169;;;-1:-1:-1;8461:3:4;;7687:783;-1:-1:-1;;;;;;;;7687:783:4:o;9255:217::-;9295:1;9321;9311:132;;9365:10;9360:3;9356:20;9353:1;9346:31;9400:4;9397:1;9390:15;9428:4;9425:1;9418:15;9311:132;-1:-1:-1;9457:9:4;;9255:217::o;9857:128::-;9897:3;9928:1;9924:6;9921:1;9918:13;9915:39;;;9934:18;;:::i;:::-;-1:-1:-1;9970:9:4;;9857:128::o",
  "language": "Solidity",
  "natspec": {
    "author": "metapriest, adrian.wachel, marek.babiarz, radoslaw.gorecki",
    "details": "The contract cannot introspect into the contents of the merkle tree, except when provided a merkle proof",
    "kind": "dev",
    "methods": {
      "addMerkleRoot(bytes32,bytes32,address,uint256)": {
        "details": "Anyone may call this function, therefore we must make sure trees cannot affect each otherRoot hash should be built from (destination, totalCoins, startTime, endTime, lockPeriodEndTime)",
        "notice": "Add a new merkle tree to the contract, creating a new merkle-vesting-schedule",
        "params": {
          "ipfsHash": "the ipfs hash of the entire dataset, used for redundance so that creator can ensure merkleproof are always computable",
          "newRoot": "root hash of merkle tree representing vesting schedules",
          "tokenAddress": "the address of the token contract that is being distributed",
          "tokenBalance": "the amount of tokens user wishes to use to fund the airdrop, note trees can be under/overfunded"
        }
      },
      "depositTokens(uint256,uint256)": {
        "details": "Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree maliciousIf the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs",
        "notice": "Add funds to an existing merkle-vesting-schedule",
        "params": {
          "treeIndex": "index into array-like map of merkleTrees",
          "value": "the amount of tokens user wishes to use to fund the airdrop, note trees can be underfunded"
        }
      },
      "initialize(uint256,address,uint256,uint256,uint256,uint256,bytes32[])": {
        "details": "Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree maliciousIf the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs of global tree statsThe contract has no knowledge of the vesting schedules until this function is called",
        "notice": "Called once per recipient of a vesting schedule to initialize the vesting schedule",
        "params": {
          "destination": "address that will receive tokens",
          "endTime": "time vesting schedule completes, can be past or future",
          "lockPeriodEndTime": "time that coins become unlocked, can be after endTime",
          "proof": "array of hashes linking leaf hash of (destination, totalCoins, startTime, endTime, lockPeriodEndTime) to root",
          "startTime": "time that vesting schedule starts, can be past or future",
          "totalCoins": "amount of tokens to be released after vesting completes",
          "treeIndex": "index into array-like map of merkleTrees"
        }
      },
      "withdraw(uint256,address)": {
        "details": "Anyone may call this function for anyone else, funds go to destination regardless, it's just a question ofwho provides the proof and pays the gas, msg.sender is not used in this function",
        "notice": "Claim funds as a recipient in the merkle-drop",
        "params": {
          "destination": "recipient of tokens",
          "treeIndex": "index into array-like map of merkleTrees, which tree should we apply the proof to?"
        }
      }
    },
    "notice": "This contract is permissionless and public facing. Any fees must be included in the data of the merkle tree.",
    "title": "A factory pattern for merkle-vesting, that is, a time release schedule for tokens, using merkle proofs to scale",
    "version": 1
  },
  "offset": [
    558,
    11984
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8EFA9BA GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA8EFA9BA EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xC26CB54F EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xCF61BF72 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xF16AD51E EQ PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x390B7C66 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x85D88CB1 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x9E18A054 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH2 0x9F PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 SWAP3 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x9F PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xC88 JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x11B7DD PUSH1 0xEA SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF49184FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x2EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x24A137C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x307 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x328 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH2 0x31B SWAP1 TIMESTAMP PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x325 SWAP2 SWAP1 PUSH2 0xCD7 JUMP JUMPDEST SWAP1 POP JUMPDEST TIMESTAMP PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP2 DUP3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x402 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x492 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A0 DUP3 DUP5 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP6 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP2 DUP12 SWAP2 PUSH32 0x1680E4CFE90468085407EF2B599DBE94B0AA30FF9F180F0E41D22EB71C872872 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD PUSH2 0x56A SWAP1 PUSH2 0xD38 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE SLOAD PUSH2 0x5CD SWAP1 DUP3 PUSH2 0x89B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 SWAP2 PUSH32 0xB72EA3ED46A7513251023946D5D35916F3E1D76D748BB144E641D1162DEE222F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP7 ISZERO DUP1 PUSH2 0x629 JUMPI POP PUSH1 0x0 SLOAD DUP8 GT JUMPDEST ISZERO PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH4 0x190A97AD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 DUP2 KECCAK256 DUP3 DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD7008557 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 MLOAD PUSH4 0x2769CD1F PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x9DA7347C SWAP2 PUSH2 0x72D SWAP2 DUP7 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x74A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76E SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH2 0x791 JUMPI DUP9 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH4 0xDA5A8FD PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x7BF DUP8 DUP8 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x7C9 SWAP1 DUP10 PUSH2 0xDA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP TIMESTAMP DUP6 LT ISZERO PUSH2 0x88F JUMPI PUSH2 0x88F DUP11 DUP11 PUSH2 0x22C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x8A9 JUMPI POP PUSH1 0x0 SLOAD DUP3 GT JUMPDEST ISZERO PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x190A97AD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x27B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP2 DUP3 ADD SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x927 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94B SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA3F DUP4 DUP4 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA55 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xB162210DA7D23D82C18CFF5AF46D3562661D26B42A6848FA28D64A6BDC70386A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xAE8 PUSH1 0x20 DUP5 ADD PUSH2 0xAA9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0xB37 PUSH1 0x40 DUP7 ADD PUSH2 0xAA9 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 PUSH2 0xB89 DUP2 DUP11 ADD PUSH2 0xAA9 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xBE8 JUMPI PUSH2 0xBE8 PUSH2 0xB47 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xC0D JUMPI PUSH2 0xC0D PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP15 DUP4 GT ISZERO PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xC49 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xC30 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 PUSH2 0xAA9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xCD2 JUMPI PUSH2 0xCD2 PUSH2 0xCAA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCF1 JUMPI PUSH2 0xCF1 PUSH2 0xCAA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xD4C JUMPI PUSH2 0xD4C PUSH2 0xCAA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 DUP6 DUP2 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD9A JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD7E JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDDD JUMPI PUSH2 0xDDD PUSH2 0xCAA JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH6 0x3167ABA1378 0xC4 0xE9 0xEC TIMESTAMP 0xBC ORIGIN 0xD PUSH16 0xC9F23E120EFE03D251A86854506D2F3C PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        558,
        11984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87"
    },
    "25": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA8EFA9BA"
    },
    "38": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA8EFA9BA"
    },
    "49": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F"
    },
    "53": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC26CB54F"
    },
    "60": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x152"
    },
    "64": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xCF61BF72"
    },
    "71": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB"
    },
    "75": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF16AD51E"
    },
    "82": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219"
    },
    "86": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "90": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "REVERT",
      "path": "2"
    },
    "91": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "93": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xF714CE"
    },
    "97": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "EQ",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C"
    },
    "101": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x390B7C66"
    },
    "108": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "EQ",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA1"
    },
    "112": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x85D88CB1"
    },
    "119": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "EQ",
      "path": "2"
    },
    "120": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD"
    },
    "123": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9E18A054"
    },
    "130": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "EQ",
      "path": "2"
    },
    "131": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C"
    },
    "134": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "139": {
      "first_revert": true,
      "fn": null,
      "offset": [
        558,
        11984
      ],
      "op": "REVERT",
      "path": "2"
    },
    "140": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "141": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F"
    },
    "144": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A"
    },
    "147": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "148": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "150": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC5"
    },
    "153": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        9637,
        11981
      ],
      "op": "JUMP",
      "path": "2"
    },
    "154": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "155": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C"
    },
    "158": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        9637,
        11981
      ],
      "op": "JUMP",
      "path": "2"
    },
    "159": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "160": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "STOP",
      "path": "2"
    },
    "161": {
      "offset": [
        677,
        697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "162": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA"
    },
    "165": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "167": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "168": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "DUP2",
      "path": "2"
    },
    "169": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "170": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "171": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "173": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "174": {
      "op": "SWAP1"
    },
    "175": {
      "op": "DUP2"
    },
    "176": {
      "op": "MSTORE"
    },
    "177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "179": {
      "op": "ADD"
    },
    "180": {
      "offset": [
        677,
        697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "181": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "183": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "184": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "185": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "186": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "SUB",
      "path": "2"
    },
    "187": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "188": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        677,
        697
      ],
      "op": "RETURN",
      "path": "2"
    },
    "189": {
      "offset": [
        2234,
        2281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "190": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFD"
    },
    "193": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB"
    },
    "196": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "197": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "199": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF1"
    },
    "202": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2234,
        2281
      ],
      "op": "JUMP",
      "path": "2"
    },
    "203": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "204": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "206": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "208": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "DUP2",
      "path": "2"
    },
    "209": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "210": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "211": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "213": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "214": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "DUP3",
      "path": "2"
    },
    "215": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "216": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "218": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "219": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "220": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "221": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "DUP1",
      "path": "2"
    },
    "222": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "223": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "225": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "DUP3",
      "path": "2"
    },
    "226": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "ADD",
      "path": "2"
    },
    "227": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "228": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "229": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "DUP3",
      "path": "2"
    },
    "230": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "ADD",
      "path": "2"
    },
    "231": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "232": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "234": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "235": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "236": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "ADD",
      "path": "2"
    },
    "237": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "238": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "239": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "240": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "247": {
      "op": "SHL"
    },
    "248": {
      "op": "SUB"
    },
    "249": {
      "offset": [
        2234,
        2281
      ],
      "op": "AND",
      "path": "2"
    },
    "250": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "251": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "DUP5",
      "path": "2"
    },
    "252": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "JUMP",
      "path": "2"
    },
    "253": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "254": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "256": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "257": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB4"
    },
    "260": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "261": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "262": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "263": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "264": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        2234,
        2281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "265": {
      "op": "SWAP4"
    },
    "266": {
      "op": "DUP5"
    },
    "267": {
      "op": "MSTORE"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "270": {
      "op": "DUP5"
    },
    "271": {
      "op": "ADD"
    },
    "272": {
      "op": "SWAP3"
    },
    "273": {
      "op": "SWAP1"
    },
    "274": {
      "op": "SWAP3"
    },
    "275": {
      "op": "MSTORE"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "282": {
      "op": "SHL"
    },
    "283": {
      "op": "SUB"
    },
    "284": {
      "op": "AND"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "287": {
      "op": "DUP4"
    },
    "288": {
      "op": "ADD"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "292": {
      "op": "DUP3"
    },
    "293": {
      "op": "ADD"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "297": {
      "op": "ADD"
    },
    "298": {
      "op": "SWAP1"
    },
    "299": {
      "op": "JUMP"
    },
    "300": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "301": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F"
    },
    "304": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13A"
    },
    "307": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "308": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "310": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0A"
    },
    "313": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        3969,
        4478
      ],
      "op": "JUMP",
      "path": "2"
    },
    "314": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "315": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52D"
    },
    "318": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        3969,
        4478
      ],
      "op": "JUMP",
      "path": "2"
    },
    "319": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "320": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F"
    },
    "323": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D"
    },
    "326": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "327": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "329": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB5D"
    },
    "332": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        7222,
        9200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "333": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "334": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61B"
    },
    "337": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        7222,
        9200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "338": {
      "offset": [
        2355,
        2417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "339": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "342": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "345": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "346": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "348": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC5E"
    },
    "351": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        2355,
        2417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "352": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "353": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "355": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "357": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "358": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP2",
      "path": "2"
    },
    "359": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "360": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "362": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "363": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP5",
      "path": "2"
    },
    "364": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "365": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "367": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP1",
      "path": "2"
    },
    "368": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP6",
      "path": "2"
    },
    "369": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "370": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "371": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "372": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "373": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "374": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP4",
      "path": "2"
    },
    "375": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "376": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "377": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "378": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP1",
      "path": "2"
    },
    "379": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "380": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "382": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP3",
      "path": "2"
    },
    "383": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "ADD",
      "path": "2"
    },
    "384": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "385": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "387": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP4",
      "path": "2"
    },
    "388": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "ADD",
      "path": "2"
    },
    "389": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "390": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "391": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP4",
      "path": "2"
    },
    "392": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "ADD",
      "path": "2"
    },
    "393": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "394": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "396": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP5",
      "path": "2"
    },
    "397": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "ADD",
      "path": "2"
    },
    "398": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "399": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "401": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP6",
      "path": "2"
    },
    "402": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "ADD",
      "path": "2"
    },
    "403": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "404": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "406": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "407": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "408": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "ADD",
      "path": "2"
    },
    "409": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "410": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "411": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "412": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "413": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "414": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "415": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "416": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "417": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "418": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "419": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "420": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP8",
      "path": "2"
    },
    "421": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "422": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "423": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "425": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "DUP1",
      "path": "2"
    },
    "426": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2355,
        2417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "427": {
      "op": "SWAP8"
    },
    "428": {
      "op": "DUP9"
    },
    "429": {
      "op": "MSTORE"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "432": {
      "op": "DUP9"
    },
    "433": {
      "op": "ADD"
    },
    "434": {
      "op": "SWAP7"
    },
    "435": {
      "op": "SWAP1"
    },
    "436": {
      "op": "SWAP7"
    },
    "437": {
      "op": "MSTORE"
    },
    "438": {
      "op": "SWAP5"
    },
    "439": {
      "op": "DUP7"
    },
    "440": {
      "op": "ADD"
    },
    "441": {
      "op": "SWAP4"
    },
    "442": {
      "op": "SWAP1"
    },
    "443": {
      "op": "SWAP4"
    },
    "444": {
      "op": "MSTORE"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "447": {
      "op": "DUP6"
    },
    "448": {
      "op": "ADD"
    },
    "449": {
      "op": "SWAP2"
    },
    "450": {
      "op": "SWAP1"
    },
    "451": {
      "op": "SWAP2"
    },
    "452": {
      "op": "MSTORE"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "455": {
      "op": "DUP5"
    },
    "456": {
      "op": "ADD"
    },
    "457": {
      "op": "MSTORE"
    },
    "458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "460": {
      "op": "DUP4"
    },
    "461": {
      "op": "ADD"
    },
    "462": {
      "op": "MSTORE"
    },
    "463": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "465": {
      "op": "DUP3"
    },
    "466": {
      "op": "ADD"
    },
    "467": {
      "op": "MSTORE"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "470": {
      "op": "ADD"
    },
    "471": {
      "offset": [
        2355,
        2417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB4"
    },
    "474": {
      "op": "JUMP"
    },
    "475": {
      "offset": [
        2102,
        2164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "476": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x209"
    },
    "479": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E9"
    },
    "482": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "483": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "485": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC88"
    },
    "488": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        2102,
        2164
      ],
      "op": "JUMP",
      "path": "2"
    },
    "489": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "490": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "492": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "494": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "495": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "496": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "497": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "499": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "500": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "DUP4",
      "path": "2"
    },
    "501": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "502": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "504": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "DUP1",
      "path": "2"
    },
    "505": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "DUP5",
      "path": "2"
    },
    "506": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "507": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "508": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "509": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "510": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "511": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "512": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "513": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "514": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "515": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "516": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "518": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "AND",
      "path": "2"
    },
    "519": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "520": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "JUMP",
      "path": "2"
    },
    "521": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "522": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "524": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        2102,
        2164
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "525": {
      "op": "SWAP1"
    },
    "526": {
      "op": "ISZERO"
    },
    "527": {
      "op": "ISZERO"
    },
    "528": {
      "op": "DUP2"
    },
    "529": {
      "op": "MSTORE"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "532": {
      "op": "ADD"
    },
    "533": {
      "offset": [
        2102,
        2164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB4"
    },
    "536": {
      "op": "JUMP"
    },
    "537": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "538": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F"
    },
    "541": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227"
    },
    "544": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "545": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "547": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC88"
    },
    "550": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        4974,
        6165
      ],
      "op": "JUMP",
      "path": "2"
    },
    "551": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "552": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x89B"
    },
    "555": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        4974,
        6165
      ],
      "op": "JUMP",
      "path": "2"
    },
    "556": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "563": {
      "op": "SHL"
    },
    "564": {
      "op": "SUB"
    },
    "565": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "566": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "AND",
      "path": "2"
    },
    "567": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9754,
        9777
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "569": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "570": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "571": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "572": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "574": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "576": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "577": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "578": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "579": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "581": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "582": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "DUP4",
      "path": "2"
    },
    "583": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9801
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "584": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9812
      ],
      "op": "DUP6",
      "path": "2"
    },
    "585": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9812
      ],
      "op": "DUP5",
      "path": "2"
    },
    "586": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9812
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "587": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9812
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "588": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9812
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "589": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9812
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "590": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9812
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "591": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9780,
        9812
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "592": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9896,
        9914
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 0
    },
    "593": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9896,
        9914
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "594": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9892,
        9997
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284"
    },
    "597": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9892,
        9997
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "598": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "600": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "601": {
      "op": "PUSH3",
      "value": "0x11B7DD"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "609": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "610": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "612": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "613": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "ADD",
      "path": "2"
    },
    "614": {
      "op": "DUP5"
    },
    "615": {
      "op": "SWAP1"
    },
    "616": {
      "op": "MSTORE"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "623": {
      "op": "SHL"
    },
    "624": {
      "op": "SUB"
    },
    "625": {
      "op": "DUP4"
    },
    "626": {
      "op": "AND"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "629": {
      "op": "DUP3"
    },
    "630": {
      "op": "ADD"
    },
    "631": {
      "op": "MSTORE"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "634": {
      "op": "ADD"
    },
    "635": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "636": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "638": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "639": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "DUP1",
      "path": "2"
    },
    "640": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "641": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "SUB",
      "path": "2"
    },
    "642": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "643": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9942,
        9986
      ],
      "op": "REVERT",
      "path": "2"
    },
    "644": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9892,
        9997
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "645": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10077,
        10084
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 1
    },
    "646": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10077,
        10102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "648": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10077,
        10102
      ],
      "op": "ADD",
      "path": "2"
    },
    "649": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10077,
        10102
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "650": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10059,
        10074
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "651": {
      "branch": 23,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10059,
        10102
      ],
      "op": "LT",
      "path": "2"
    },
    "652": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10055,
        10178
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "653": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10055,
        10178
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BB"
    },
    "656": {
      "branch": 23,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10055,
        10178
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "657": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10125,
        10167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "659": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10125,
        10167
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "660": {
      "op": "PUSH4",
      "value": "0xF49184FF"
    },
    "665": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "667": {
      "op": "SHL"
    },
    "668": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10125,
        10167
      ],
      "op": "DUP2",
      "path": "2"
    },
    "669": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10125,
        10167
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "670": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10125,
        10167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "672": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10125,
        10167
      ],
      "op": "DUP2",
      "path": "2"
    },
    "673": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10125,
        10167
      ],
      "op": "ADD",
      "path": "2"
    },
    "674": {
      "op": "DUP5"
    },
    "675": {
      "op": "SWAP1"
    },
    "676": {
      "op": "MSTORE"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "683": {
      "op": "SHL"
    },
    "684": {
      "op": "SUB"
    },
    "685": {
      "op": "DUP4"
    },
    "686": {
      "op": "AND"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "689": {
      "op": "DUP3"
    },
    "690": {
      "op": "ADD"
    },
    "691": {
      "op": "MSTORE"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "694": {
      "op": "ADD"
    },
    "695": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10125,
        10167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B"
    },
    "698": {
      "op": "JUMP"
    },
    "699": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10055,
        10178
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "700": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10234,
        10254
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "702": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10234,
        10254
      ],
      "op": "DUP2",
      "path": "2"
    },
    "703": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10234,
        10254
      ],
      "op": "ADD",
      "path": "2"
    },
    "704": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10234,
        10254
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "705": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10230,
        10329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF"
    },
    "708": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10230,
        10329
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "709": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10282,
        10318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "711": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10282,
        10318
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "712": {
      "op": "PUSH4",
      "value": "0x24A137C1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10282,
        10318
      ],
      "op": "DUP2",
      "path": "2"
    },
    "721": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10282,
        10318
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "722": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10282,
        10318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "724": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10282,
        10318
      ],
      "op": "DUP2",
      "path": "2"
    },
    "725": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10282,
        10318
      ],
      "op": "ADD",
      "path": "2"
    },
    "726": {
      "op": "DUP5"
    },
    "727": {
      "op": "SWAP1"
    },
    "728": {
      "op": "MSTORE"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "735": {
      "op": "SHL"
    },
    "736": {
      "op": "SUB"
    },
    "737": {
      "op": "DUP4"
    },
    "738": {
      "op": "AND"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "741": {
      "op": "DUP3"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "746": {
      "op": "ADD"
    },
    "747": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10282,
        10318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B"
    },
    "750": {
      "op": "JUMP"
    },
    "751": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10230,
        10329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "752": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10386,
        10408
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "754": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10513,
        10520
      ],
      "op": "DUP2",
      "path": "2"
    },
    "755": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10513,
        10528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "757": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10513,
        10528
      ],
      "op": "ADD",
      "path": "2"
    },
    "758": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10513,
        10528
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "759": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10494,
        10509
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "760": {
      "branch": 24,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10494,
        10528
      ],
      "op": "LT",
      "path": "2"
    },
    "761": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10490,
        10759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x307"
    },
    "764": {
      "branch": 24,
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10490,
        10759
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "765": {
      "op": "POP"
    },
    "766": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10564,
        10584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x1"
    },
    "768": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10564,
        10584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "769": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10564,
        10584
      ],
      "op": "ADD",
      "path": "2"
    },
    "770": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10564,
        10584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "771": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10490,
        10759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x328"
    },
    "774": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10490,
        10759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "775": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10490,
        10759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "776": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10726,
        10748
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x4"
    },
    "778": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10726,
        10748
      ],
      "op": "DUP3",
      "path": "2"
    },
    "779": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10726,
        10748
      ],
      "op": "ADD",
      "path": "2"
    },
    "780": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10726,
        10748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "781": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10696,
        10722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "783": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10696,
        10722
      ],
      "op": "DUP4",
      "path": "2"
    },
    "784": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10696,
        10722
      ],
      "op": "ADD",
      "path": "2"
    },
    "785": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10696,
        10722
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "786": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10678,
        10722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31B"
    },
    "789": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10678,
        10722
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "790": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10678,
        10693
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "791": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10678,
        10722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "794": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        10678,
        10722
      ],
      "op": "JUMP",
      "path": "2"
    },
    "795": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10678,
        10722
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "796": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10677,
        10748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x325"
    },
    "799": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10677,
        10748
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "800": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10677,
        10748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "801": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10677,
        10748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD7"
    },
    "804": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        10677,
        10748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "805": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10677,
        10748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "806": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10657,
        10748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "807": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10657,
        10748
      ],
      "op": "POP",
      "path": "2"
    },
    "808": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10490,
        10759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "809": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10883,
        10898
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 5
    },
    "810": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10854,
        10880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "812": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10854,
        10880
      ],
      "op": "DUP4",
      "path": "2"
    },
    "813": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10854,
        10880
      ],
      "op": "ADD",
      "path": "2"
    },
    "814": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10854,
        10898
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "815": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10909,
        10932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "817": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "DUP5",
      "path": "2"
    },
    "818": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "DUP2",
      "path": "2"
    },
    "819": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "820": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10946
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "822": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "824": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "DUP2",
      "path": "2"
    },
    "825": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "826": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "827": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "829": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "830": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "DUP4",
      "path": "2"
    },
    "831": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "832": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10989,
        11006
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "833": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10989,
        11006
      ],
      "op": "DUP3",
      "path": "2"
    },
    "834": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10989,
        11006
      ],
      "op": "ADD",
      "path": "2"
    },
    "835": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10989,
        11006
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "836": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "837": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "838": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "843": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "845": {
      "op": "SHL"
    },
    "846": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "847": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "848": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11062,
        11066
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "849": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "851": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP3",
      "path": "2"
    },
    "852": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "ADD",
      "path": "2"
    },
    "853": {
      "op": "MSTORE"
    },
    "854": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "855": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10935,
        10957
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "862": {
      "op": "SHL"
    },
    "863": {
      "op": "SUB"
    },
    "864": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10989,
        11006
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "865": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10989,
        11006
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "866": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10989,
        11006
      ],
      "op": "AND",
      "path": "2"
    },
    "867": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10989,
        11006
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "868": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10989,
        11006
      ],
      "op": "DUP3",
      "path": "2"
    },
    "869": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        10989,
        11006
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "870": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11053
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "875": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "878": {
      "op": "ADD"
    },
    "879": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "881": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "883": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "884": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP1",
      "path": "2"
    },
    "885": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP4",
      "path": "2"
    },
    "886": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "SUB",
      "path": "2"
    },
    "887": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "888": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP7",
      "path": "2"
    },
    "889": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "GAS",
      "path": "2"
    },
    "890": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "891": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "892": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP1",
      "path": "2"
    },
    "893": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "894": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38B"
    },
    "897": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "898": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "899": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "901": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP1",
      "path": "2"
    },
    "902": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "903": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "904": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "906": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "REVERT",
      "path": "2"
    },
    "907": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "908": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "POP",
      "path": "2"
    },
    "909": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "POP",
      "path": "2"
    },
    "910": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "POP",
      "path": "2"
    },
    "911": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "POP",
      "path": "2"
    },
    "912": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "914": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "915": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "916": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "918": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "NOT",
      "path": "2"
    },
    "919": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "921": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP3",
      "path": "2"
    },
    "922": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "ADD",
      "path": "2"
    },
    "923": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "AND",
      "path": "2"
    },
    "924": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP3",
      "path": "2"
    },
    "925": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "ADD",
      "path": "2"
    },
    "926": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP1",
      "path": "2"
    },
    "927": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "929": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "930": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "POP",
      "path": "2"
    },
    "931": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "932": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "ADD",
      "path": "2"
    },
    "933": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "934": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AF"
    },
    "937": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "938": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "939": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF6"
    },
    "942": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11038,
        11068
      ],
      "op": "JUMP",
      "path": "2"
    },
    "943": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11038,
        11068
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "944": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x40"
    },
    "946": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "947": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "952": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "954": {
      "op": "SHL"
    },
    "955": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "956": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "963": {
      "op": "SHL"
    },
    "964": {
      "op": "SUB"
    },
    "965": {
      "op": "DUP9"
    },
    "966": {
      "op": "DUP2"
    },
    "967": {
      "op": "AND"
    },
    "968": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "970": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP4",
      "path": "2"
    },
    "971": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "ADD",
      "path": "2"
    },
    "972": {
      "op": "MSTORE"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "975": {
      "op": "DUP3"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "op": "DUP8"
    },
    "978": {
      "op": "SWAP1"
    },
    "979": {
      "op": "MSTORE"
    },
    "980": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11017,
        11068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "981": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11017,
        11068
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "982": {
      "op": "POP"
    },
    "983": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "984": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11464
      ],
      "op": "DUP4",
      "path": "2"
    },
    "985": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11464
      ],
      "op": "AND",
      "path": "2"
    },
    "986": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "987": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11464
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "992": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "995": {
      "op": "ADD"
    },
    "996": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "998": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1000": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1001": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1002": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1003": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "SUB",
      "path": "2"
    },
    "1004": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1005": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1007": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1008": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "GAS",
      "path": "2"
    },
    "1009": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "CALL",
      "path": "2"
    },
    "1010": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1011": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1012": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1013": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x402"
    },
    "1016": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1017": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1018": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1020": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1021": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1022": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1023": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1025": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1026": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1027": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "POP",
      "path": "2"
    },
    "1028": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "POP",
      "path": "2"
    },
    "1029": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "POP",
      "path": "2"
    },
    "1030": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "POP",
      "path": "2"
    },
    "1031": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1033": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1034": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1035": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1037": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "NOT",
      "path": "2"
    },
    "1038": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1040": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1041": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "ADD",
      "path": "2"
    },
    "1042": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "AND",
      "path": "2"
    },
    "1043": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1044": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "ADD",
      "path": "2"
    },
    "1045": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1046": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1048": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1049": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "POP",
      "path": "2"
    },
    "1050": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1051": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "ADD",
      "path": "2"
    },
    "1052": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1053": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x426"
    },
    "1056": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1057": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1058": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD0F"
    },
    "1061": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11450,
        11496
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1062": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11450,
        11496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1063": {
      "op": "POP"
    },
    "1064": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1066": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1067": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1074": {
      "op": "SHL"
    },
    "1075": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1076": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1077": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11642,
        11646
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1078": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1080": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1081": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "ADD",
      "path": "2"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11598,
        11615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1085": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11598,
        11615
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "SUB"
    },
    "1094": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11633
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1095": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11633
      ],
      "op": "AND",
      "path": "2"
    },
    "1096": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11633
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1097": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11633
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "1102": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11633
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1105": {
      "op": "ADD"
    },
    "1106": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1108": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1110": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1111": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1112": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1113": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "SUB",
      "path": "2"
    },
    "1114": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1115": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1116": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "GAS",
      "path": "2"
    },
    "1117": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1118": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1119": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1120": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1121": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46E"
    },
    "1124": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1125": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1126": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1128": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1129": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1130": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1131": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1133": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1134": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1135": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "POP",
      "path": "2"
    },
    "1136": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "POP",
      "path": "2"
    },
    "1137": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "POP",
      "path": "2"
    },
    "1138": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "POP",
      "path": "2"
    },
    "1139": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1141": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1142": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1143": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1145": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "NOT",
      "path": "2"
    },
    "1146": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1148": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1149": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "ADD",
      "path": "2"
    },
    "1150": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "AND",
      "path": "2"
    },
    "1151": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1152": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "ADD",
      "path": "2"
    },
    "1153": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1154": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1156": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1157": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "POP",
      "path": "2"
    },
    "1158": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1159": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "ADD",
      "path": "2"
    },
    "1160": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1161": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x492"
    },
    "1164": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1165": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1166": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF6"
    },
    "1169": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11618,
        11648
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1170": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11618,
        11648
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1171": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11598,
        11648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11658,
        11667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1175": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11670,
        11698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A0"
    },
    "1178": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11598,
        11648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1179": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11670,
        11683
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1180": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11670,
        11698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "1183": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11670,
        11698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1184": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11670,
        11698
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1185": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11658,
        11698
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1186": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11658,
        11698
      ],
      "op": "POP",
      "path": "2"
    },
    "1187": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11773,
        11777
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 7
    },
    "1188": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11756
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1189": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1191": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11769
      ],
      "op": "ADD",
      "path": "2"
    },
    "1192": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1194": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1195": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1196": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1197": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B6"
    },
    "1200": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1201": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1202": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "1205": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11749,
        11777
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1206": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1207": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1208": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "POP",
      "path": "2"
    },
    "1209": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "POP",
      "path": "2"
    },
    "1210": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1211": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1212": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1213": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11749,
        11777
      ],
      "op": "POP",
      "path": "2"
    },
    "1214": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11884,
        11888
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 8
    },
    "1215": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11867
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1216": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1218": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11880
      ],
      "op": "ADD",
      "path": "2"
    },
    "1219": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1221": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1222": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1223": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1224": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D1"
    },
    "1227": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1228": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1229": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "1232": {
      "fn": "MerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        11863,
        11888
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1233": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1234": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1235": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1236": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11863,
        11888
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "op": "POP"
    },
    "1239": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11953,
        11973
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "1241": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11953,
        11973
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1242": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11953,
        11973
      ],
      "op": "ADD",
      "path": "2"
    },
    "1243": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11953,
        11973
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1244": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1246": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1247": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1248": {
      "op": "DUP4"
    },
    "1249": {
      "op": "DUP2"
    },
    "1250": {
      "op": "MSTORE"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1253": {
      "op": "DUP2"
    },
    "1254": {
      "op": "ADD"
    },
    "1255": {
      "op": "SWAP3"
    },
    "1256": {
      "op": "SWAP1"
    },
    "1257": {
      "op": "SWAP3"
    },
    "1258": {
      "op": "MSTORE"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1265": {
      "op": "SHL"
    },
    "1266": {
      "op": "SUB"
    },
    "1267": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "DUP11",
      "path": "2"
    },
    "1268": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "AND",
      "path": "2"
    },
    "1269": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1270": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11923,
        11932
      ],
      "op": "DUP12",
      "path": "2"
    },
    "1271": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11923,
        11932
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1272": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x1680E4CFE90468085407EF2B599DBE94B0AA30FF9F180F0E41D22EB71C872872"
    },
    "1305": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1306": {
      "op": "ADD"
    },
    "1307": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1309": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1310": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1311": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1312": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "SUB",
      "path": "2"
    },
    "1313": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1314": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        11904,
        11974
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1315": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9699,
        11981
      ],
      "op": "POP",
      "path": "2"
    },
    "1316": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9699,
        11981
      ],
      "op": "POP",
      "path": "2"
    },
    "1317": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9699,
        11981
      ],
      "op": "POP",
      "path": "2"
    },
    "1318": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9699,
        11981
      ],
      "op": "POP",
      "path": "2"
    },
    "1319": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9699,
        11981
      ],
      "op": "POP",
      "path": "2"
    },
    "1320": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9699,
        11981
      ],
      "op": "POP",
      "path": "2"
    },
    "1321": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9699,
        11981
      ],
      "op": "POP",
      "path": "2"
    },
    "1322": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "POP",
      "path": "2"
    },
    "1323": {
      "fn": "MerkleVesting.withdraw",
      "offset": [
        9637,
        11981
      ],
      "op": "POP",
      "path": "2"
    },
    "1324": {
      "fn": "MerkleVesting.withdraw",
      "jump": "o",
      "offset": [
        9637,
        11981
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1325": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1326": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x40"
    },
    "1328": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1329": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1330": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "1332": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1333": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1335": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1336": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1337": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4191,
        4198
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1338": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1339": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1340": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1342": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1343": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4212,
        4220
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1344": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1345": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1346": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1348": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1349": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4234,
        4246
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1356": {
      "op": "SHL"
    },
    "1357": {
      "op": "SUB"
    },
    "1358": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "AND",
      "path": "2"
    },
    "1359": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1360": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1361": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1363": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1364": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4260,
        4261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1366": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1367": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1368": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4167,
        4322
      ],
      "op": "POP",
      "path": "2"
    },
    "1369": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1371": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1373": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4155,
        4163
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1374": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4155,
        4163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1376": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4153,
        4163
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1377": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4153,
        4163
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1378": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4153,
        4163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x56A"
    },
    "1381": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4153,
        4163
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1382": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4153,
        4163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD38"
    },
    "1385": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        4153,
        4163
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1386": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4153,
        4163
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1387": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4153,
        4163
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1388": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4153,
        4163
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1389": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4153,
        4163
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1390": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4153,
        4163
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1391": {
      "op": "POP"
    },
    "1392": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1393": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1394": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1396": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1397": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1398": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "ADD",
      "path": "2"
    },
    "1399": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1400": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1401": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1402": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1403": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1405": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1406": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1407": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "ADD",
      "path": "2"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1410": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1411": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1412": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4164
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1413": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1414": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1415": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1416": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1417": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1418": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1419": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1420": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1421": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1423": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1424": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1425": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1426": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1427": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1428": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1429": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1430": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1432": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1433": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1434": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1435": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "op": "SUB"
    },
    "1444": {
      "op": "NOT"
    },
    "1445": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "AND",
      "path": "2"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "op": "SUB"
    },
    "1454": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1455": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1456": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "AND",
      "path": "2"
    },
    "1457": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1458": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1459": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1460": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "OR",
      "path": "2"
    },
    "1461": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1462": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1463": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1465": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1466": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1467": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1468": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1469": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1471": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1472": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1473": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "ADD",
      "path": "2"
    },
    "1474": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4141,
        4322
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1475": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4375,
        4383
      ],
      "op": "SLOAD",
      "path": "2",
      "statement": 11
    },
    "1476": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4361,
        4398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CD"
    },
    "1479": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4361,
        4398
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1480": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4385,
        4397
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1481": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4361,
        4374
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x89B"
    },
    "1484": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        4361,
        4398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1485": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4361,
        4398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1486": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4429,
        4437
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x0"
    },
    "1488": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4429,
        4437
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1489": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1491": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1492": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1493": {
      "op": "DUP7"
    },
    "1494": {
      "op": "DUP2"
    },
    "1495": {
      "op": "MSTORE"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1498": {
      "op": "DUP2"
    },
    "1499": {
      "op": "ADD"
    },
    "1500": {
      "op": "DUP7"
    },
    "1501": {
      "op": "SWAP1"
    },
    "1502": {
      "op": "MSTORE"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1509": {
      "op": "SHL"
    },
    "1510": {
      "op": "SUB"
    },
    "1511": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1512": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "AND",
      "path": "2"
    },
    "1513": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1514": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4429,
        4437
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1515": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xB72EA3ED46A7513251023946D5D35916F3E1D76D748BB144E641D1162DEE222F"
    },
    "1548": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1549": {
      "op": "ADD"
    },
    "1550": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1552": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1553": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1554": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1555": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "SUB",
      "path": "2"
    },
    "1556": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1557": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        4413,
        4471
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1558": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "POP",
      "path": "2"
    },
    "1559": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "POP",
      "path": "2"
    },
    "1560": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "POP",
      "path": "2"
    },
    "1561": {
      "fn": "MerkleVesting.addMerkleRoot",
      "offset": [
        3969,
        4478
      ],
      "op": "POP",
      "path": "2"
    },
    "1562": {
      "fn": "MerkleVesting.addMerkleRoot",
      "jump": "o",
      "offset": [
        3969,
        4478
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1563": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1564": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7397,
        7411
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 13
    },
    "1565": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7397,
        7411
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1566": {
      "branch": 25,
      "fn": "MerkleVesting.initialize",
      "offset": [
        7397,
        7411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1567": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7397,
        7435
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x629"
    },
    "1570": {
      "branch": 25,
      "fn": "MerkleVesting.initialize",
      "offset": [
        7397,
        7435
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1571": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7397,
        7435
      ],
      "op": "POP",
      "path": "2"
    },
    "1572": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7427,
        7435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1574": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7427,
        7435
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1575": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7415,
        7424
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1576": {
      "branch": 26,
      "fn": "MerkleVesting.initialize",
      "offset": [
        7415,
        7435
      ],
      "op": "GT",
      "path": "2"
    },
    "1577": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7397,
        7435
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1578": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7393,
        7492
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1579": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7393,
        7492
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64A"
    },
    "1582": {
      "branch": 26,
      "fn": "MerkleVesting.initialize",
      "offset": [
        7393,
        7492
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1583": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7458,
        7481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1585": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7458,
        7481
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1586": {
      "op": "PUSH4",
      "value": "0x190A97AD"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1593": {
      "op": "SHL"
    },
    "1594": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7458,
        7481
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1595": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7458,
        7481
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1596": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7458,
        7481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1598": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7458,
        7481
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1599": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7458,
        7481
      ],
      "op": "ADD",
      "path": "2"
    },
    "1600": {
      "op": "DUP9"
    },
    "1601": {
      "op": "SWAP1"
    },
    "1602": {
      "op": "MSTORE"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1605": {
      "op": "ADD"
    },
    "1606": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7458,
        7481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B"
    },
    "1609": {
      "op": "JUMP"
    },
    "1610": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7393,
        7492
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1611": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1613": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1614": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1621": {
      "op": "SHL"
    },
    "1622": {
      "op": "SUB"
    },
    "1623": {
      "op": "DUP9"
    },
    "1624": {
      "op": "AND"
    },
    "1625": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1627": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1628": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "ADD",
      "path": "2"
    },
    "1629": {
      "op": "MSTORE"
    },
    "1630": {
      "op": "SWAP1"
    },
    "1631": {
      "op": "DUP2"
    },
    "1632": {
      "op": "ADD"
    },
    "1633": {
      "op": "DUP7"
    },
    "1634": {
      "op": "SWAP1"
    },
    "1635": {
      "op": "MSTORE"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1638": {
      "op": "DUP2"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "op": "DUP6"
    },
    "1641": {
      "op": "SWAP1"
    },
    "1642": {
      "op": "MSTORE"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1645": {
      "op": "DUP2"
    },
    "1646": {
      "op": "ADD"
    },
    "1647": {
      "op": "DUP5"
    },
    "1648": {
      "op": "SWAP1"
    },
    "1649": {
      "op": "MSTORE"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1652": {
      "op": "DUP2"
    },
    "1653": {
      "op": "ADD"
    },
    "1654": {
      "op": "DUP4"
    },
    "1655": {
      "op": "SWAP1"
    },
    "1656": {
      "op": "MSTORE"
    },
    "1657": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7676,
        7688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1659": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7676,
        7688
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1665": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1666": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1669": {
      "op": "NOT"
    },
    "1670": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1671": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1672": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "SUB",
      "path": "2"
    },
    "1673": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "ADD",
      "path": "2"
    },
    "1674": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1675": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1676": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1677": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1678": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1679": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7691,
        7776
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1680": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7691,
        7776
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1681": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7701,
        7775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1683": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7691,
        7776
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1684": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7691,
        7776
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1685": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7691,
        7776
      ],
      "op": "ADD",
      "path": "2"
    },
    "1686": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7691,
        7776
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1687": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7859
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x0"
    },
    "1689": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7859
      ],
      "op": "DUP12",
      "path": "2"
    },
    "1690": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7859
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1691": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7859
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1692": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1694": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7859
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1695": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7859
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1696": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7859
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1697": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7859
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1698": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7859
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1699": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1700": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1701": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1702": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1703": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1704": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1705": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1706": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1707": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1708": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7691,
        7776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1709": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7691,
        7776
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1710": {
      "op": "POP"
    },
    "1711": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1713": {
      "branch": 27,
      "fn": "MerkleVesting.initialize",
      "offset": [
        7837,
        7865
      ],
      "op": "AND",
      "path": "2"
    },
    "1714": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7833,
        7941
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1715": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7833,
        7941
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E1"
    },
    "1718": {
      "branch": 27,
      "fn": "MerkleVesting.initialize",
      "offset": [
        7833,
        7941
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1719": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7888,
        7930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1721": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7888,
        7930
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1722": {
      "op": "PUSH4",
      "value": "0xD7008557"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1729": {
      "op": "SHL"
    },
    "1730": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7888,
        7930
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1731": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7888,
        7930
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1732": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7888,
        7930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1734": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7888,
        7930
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1735": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7888,
        7930
      ],
      "op": "ADD",
      "path": "2"
    },
    "1736": {
      "op": "DUP10"
    },
    "1737": {
      "op": "SWAP1"
    },
    "1738": {
      "op": "MSTORE"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1745": {
      "op": "SHL"
    },
    "1746": {
      "op": "SUB"
    },
    "1747": {
      "op": "DUP9"
    },
    "1748": {
      "op": "AND"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1751": {
      "op": "DUP3"
    },
    "1752": {
      "op": "ADD"
    },
    "1753": {
      "op": "MSTORE"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1756": {
      "op": "ADD"
    },
    "1757": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7888,
        7930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B"
    },
    "1760": {
      "op": "JUMP"
    },
    "1761": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7833,
        7941
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1762": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8031,
        8054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1764": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1765": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1766": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1767": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1769": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1771": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1772": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1774": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1775": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1776": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1777": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1778": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8178
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 15
    },
    "1779": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8178
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1780": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1781": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1782": {
      "op": "PUSH4",
      "value": "0x2769CD1F"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1789": {
      "op": "SHL"
    },
    "1790": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1791": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1792": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1793": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8057,
        8079
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1794": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8190
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "1815": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8190
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1816": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8190
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9DA7347C"
    },
    "1821": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8190
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1822": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72D"
    },
    "1825": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1826": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8191,
        8195
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1827": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8191,
        8195
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1828": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8197,
        8202
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1829": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8197,
        8202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1830": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1832": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "ADD",
      "path": "2"
    },
    "1833": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD53"
    },
    "1836": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8165,
        8203
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1837": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1838": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1840": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1842": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1843": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1844": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1845": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "SUB",
      "path": "2"
    },
    "1846": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1847": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1848": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "GAS",
      "path": "2"
    },
    "1849": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "1850": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1851": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1852": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1853": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x74A"
    },
    "1856": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1857": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1858": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1860": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1861": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1862": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1863": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1865": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1866": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1867": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "POP",
      "path": "2"
    },
    "1868": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "POP",
      "path": "2"
    },
    "1869": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "POP",
      "path": "2"
    },
    "1870": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "POP",
      "path": "2"
    },
    "1871": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1873": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1874": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1875": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1877": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "NOT",
      "path": "2"
    },
    "1878": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1880": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1881": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "ADD",
      "path": "2"
    },
    "1882": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "AND",
      "path": "2"
    },
    "1883": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1884": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "ADD",
      "path": "2"
    },
    "1885": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1886": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1888": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1889": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "POP",
      "path": "2"
    },
    "1890": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1891": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "ADD",
      "path": "2"
    },
    "1892": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1893": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x76E"
    },
    "1896": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1897": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1898": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD0F"
    },
    "1901": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8165,
        8203
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1902": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8165,
        8203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1903": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8161,
        8278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x791"
    },
    "1906": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8161,
        8278
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1907": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8244,
        8253
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1908": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8255,
        8259
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1909": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8261,
        8266
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1910": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1912": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1913": {
      "op": "PUSH4",
      "value": "0xDA5A8FD"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1922": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1923": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1925": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "ADD",
      "path": "2"
    },
    "1926": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B"
    },
    "1929": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1930": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1931": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1932": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1933": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8235,
        8267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD53"
    },
    "1936": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8235,
        8267
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1937": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8161,
        8278
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1938": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x0"
    },
    "1940": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "DUP10",
      "path": "2"
    },
    "1941": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1942": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1943": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8380,
        8384
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1945": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1947": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1948": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1949": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1950": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1952": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1953": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1954": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8371
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1955": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8377
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1956": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8377
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1957": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1958": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8377
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1959": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8377
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1960": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1961": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1962": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8377
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1963": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8384
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1964": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8384
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1967": {
      "op": "NOT"
    },
    "1968": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8384
      ],
      "op": "AND",
      "path": "2"
    },
    "1969": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1970": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8384
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1971": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8384
      ],
      "op": "OR",
      "path": "2"
    },
    "1972": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1973": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8349,
        8384
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1974": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8588,
        8607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7BF"
    },
    "1977": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8598,
        8607
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1978": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8588,
        8595
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1979": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8588,
        8607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "1982": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8588,
        8607
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1983": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8588,
        8607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1984": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8574,
        8608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C9"
    },
    "1987": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8574,
        8608
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1988": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8574,
        8584
      ],
      "op": "DUP10",
      "path": "2"
    },
    "1989": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8574,
        8608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA8"
    },
    "1992": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        8574,
        8608
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1993": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8574,
        8608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1994": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8552,
        8608
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1995": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8552,
        8608
      ],
      "op": "POP",
      "path": "2"
    },
    "1996": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x40"
    },
    "1998": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1999": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2000": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2002": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2003": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2005": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2006": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2007": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8726,
        8736
      ],
      "op": "DUP10",
      "path": "2"
    },
    "2008": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2009": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2010": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2012": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2013": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8781,
        8791
      ],
      "op": "DUP10",
      "path": "2"
    },
    "2014": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2015": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2016": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2018": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2019": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8843,
        8852
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2020": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2021": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2022": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2024": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2025": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8866,
        8873
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2026": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2027": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2028": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2030": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2031": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8887,
        8901
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2032": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2033": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2034": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2036": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2037": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8915,
        8924
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2038": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2039": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2040": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2042": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2043": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8979,
        8996
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2044": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2045": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2046": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8705,
        9006
      ],
      "op": "POP",
      "path": "2"
    },
    "2047": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2049": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2051": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8679,
        8690
      ],
      "op": "DUP12",
      "path": "2"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2058": {
      "op": "SHL"
    },
    "2059": {
      "op": "SUB"
    },
    "2060": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "AND",
      "path": "2"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "op": "SUB"
    },
    "2069": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "AND",
      "path": "2"
    },
    "2070": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2071": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2072": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2074": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "ADD",
      "path": "2"
    },
    "2075": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2076": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2077": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2078": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2080": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "ADD",
      "path": "2"
    },
    "2081": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2083": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8691
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2084": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2086": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8692,
        8701
      ],
      "op": "DUP13",
      "path": "2"
    },
    "2087": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2088": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2089": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2091": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "ADD",
      "path": "2"
    },
    "2092": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2093": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2094": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2095": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2097": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "ADD",
      "path": "2"
    },
    "2098": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2100": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        8702
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2101": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2103": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2104": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2105": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2106": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2107": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2109": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2110": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2111": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2113": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2114": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2115": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2116": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2117": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2119": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2120": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2121": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2123": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2124": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2125": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2126": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2127": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2129": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2130": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2131": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2133": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2134": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2135": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2136": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2137": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2139": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2140": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2141": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2143": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2144": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2145": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2146": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2147": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2149": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2150": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2151": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2153": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2154": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2155": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2156": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2157": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2159": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2160": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2161": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "2163": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2164": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2165": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2166": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2167": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2169": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "ADD",
      "path": "2"
    },
    "2170": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2171": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2172": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "POP",
      "path": "2"
    },
    "2173": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        8670,
        9006
      ],
      "op": "POP",
      "path": "2"
    },
    "2174": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9120,
        9135
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2175": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9100,
        9117
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2176": {
      "branch": 28,
      "fn": "MerkleVesting.initialize",
      "offset": [
        9100,
        9135
      ],
      "op": "LT",
      "path": "2"
    },
    "2177": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9096,
        9194
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2178": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9096,
        9194
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88F"
    },
    "2181": {
      "branch": 28,
      "fn": "MerkleVesting.initialize",
      "offset": [
        9096,
        9194
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2182": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9151,
        9183
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0x88F"
    },
    "2185": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9160,
        9169
      ],
      "op": "DUP11",
      "path": "2"
    },
    "2186": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9171,
        9182
      ],
      "op": "DUP11",
      "path": "2"
    },
    "2187": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9151,
        9159
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C"
    },
    "2190": {
      "fn": "MerkleVesting.initialize",
      "jump": "i",
      "offset": [
        9151,
        9183
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2191": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        9151,
        9183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2192": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7383,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "2193": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7383,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "2194": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7383,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "2195": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "2196": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "2197": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "2198": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "2199": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "2200": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "2201": {
      "fn": "MerkleVesting.initialize",
      "offset": [
        7222,
        9200
      ],
      "op": "POP",
      "path": "2"
    },
    "2202": {
      "fn": "MerkleVesting.initialize",
      "jump": "o",
      "offset": [
        7222,
        9200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2203": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2204": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5046,
        5060
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 19
    },
    "2205": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5046,
        5060
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2206": {
      "branch": 29,
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5046,
        5060
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2207": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5046,
        5084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A9"
    },
    "2210": {
      "branch": 29,
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5046,
        5084
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2211": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5046,
        5084
      ],
      "op": "POP",
      "path": "2"
    },
    "2212": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5076,
        5084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2214": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5076,
        5084
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2215": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5064,
        5073
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2216": {
      "branch": 30,
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5064,
        5084
      ],
      "op": "GT",
      "path": "2"
    },
    "2217": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5046,
        5084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2218": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5042,
        5141
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2219": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5042,
        5141
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8CA"
    },
    "2222": {
      "branch": 30,
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5042,
        5141
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2223": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5107,
        5130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2225": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5107,
        5130
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2226": {
      "op": "PUSH4",
      "value": "0x190A97AD"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2233": {
      "op": "SHL"
    },
    "2234": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5107,
        5130
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2235": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5107,
        5130
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2236": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5107,
        5130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2238": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5107,
        5130
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2239": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5107,
        5130
      ],
      "op": "ADD",
      "path": "2"
    },
    "2240": {
      "op": "DUP4"
    },
    "2241": {
      "op": "SWAP1"
    },
    "2242": {
      "op": "MSTORE"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5107,
        5130
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B"
    },
    "2249": {
      "op": "JUMP"
    },
    "2250": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5042,
        5141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2251": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5191,
        5220
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2253": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2254": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2255": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2256": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2258": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2260": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2261": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2262": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2263": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2265": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2266": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2267": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2268": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5278,
        5301
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2269": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5278,
        5301
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2270": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5278,
        5301
      ],
      "op": "ADD",
      "path": "2"
    },
    "2271": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5278,
        5301
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2272": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2273": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2274": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2281": {
      "op": "SHL"
    },
    "2282": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2283": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2284": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5357,
        5361
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2285": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2287": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2288": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "ADD",
      "path": "2"
    },
    "2289": {
      "op": "MSTORE"
    },
    "2290": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2291": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5223,
        5245
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "op": "SUB"
    },
    "2300": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5278,
        5301
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2301": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5278,
        5301
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2302": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5278,
        5301
      ],
      "op": "AND",
      "path": "2"
    },
    "2303": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5278,
        5301
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2304": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5278,
        5301
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2305": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5278,
        5301
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2306": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5348
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "2311": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2314": {
      "op": "ADD"
    },
    "2315": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2317": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2319": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2320": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2321": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2322": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "SUB",
      "path": "2"
    },
    "2323": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2324": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2325": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "GAS",
      "path": "2"
    },
    "2326": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2327": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2328": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2329": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2330": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x927"
    },
    "2333": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2334": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2335": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2337": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2338": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2339": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2340": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2342": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2343": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2344": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "POP",
      "path": "2"
    },
    "2345": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "POP",
      "path": "2"
    },
    "2346": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "POP",
      "path": "2"
    },
    "2347": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "POP",
      "path": "2"
    },
    "2348": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2350": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2351": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2352": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2354": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "NOT",
      "path": "2"
    },
    "2355": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2357": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2358": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "ADD",
      "path": "2"
    },
    "2359": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "AND",
      "path": "2"
    },
    "2360": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2361": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "ADD",
      "path": "2"
    },
    "2362": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2363": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2365": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2366": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "POP",
      "path": "2"
    },
    "2367": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2368": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "ADD",
      "path": "2"
    },
    "2369": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2370": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x94B"
    },
    "2373": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2374": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2375": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF6"
    },
    "2378": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        5333,
        5363
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2379": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5333,
        5363
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2380": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x40"
    },
    "2382": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2383": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2390": {
      "op": "SHL"
    },
    "2391": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2392": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2393": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5737,
        5747
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2394": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2396": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2397": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "ADD",
      "path": "2"
    },
    "2398": {
      "op": "MSTORE"
    },
    "2399": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5757,
        5761
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2402": {
      "op": "DUP3"
    },
    "2403": {
      "op": "ADD"
    },
    "2404": {
      "op": "MSTORE"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2407": {
      "op": "DUP2"
    },
    "2408": {
      "op": "ADD"
    },
    "2409": {
      "op": "DUP7"
    },
    "2410": {
      "op": "SWAP1"
    },
    "2411": {
      "op": "MSTORE"
    },
    "2412": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5312,
        5363
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2413": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5312,
        5363
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2414": {
      "op": "POP"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2421": {
      "op": "SHL"
    },
    "2422": {
      "op": "SUB"
    },
    "2423": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5736
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2424": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5736
      ],
      "op": "AND",
      "path": "2"
    },
    "2425": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5736
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2426": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5736
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "2431": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5736
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2434": {
      "op": "ADD"
    },
    "2435": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2437": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2439": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2440": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2441": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2442": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "SUB",
      "path": "2"
    },
    "2443": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2444": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2446": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2447": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "GAS",
      "path": "2"
    },
    "2448": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "CALL",
      "path": "2"
    },
    "2449": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2450": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2451": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2452": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A1"
    },
    "2455": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2456": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2457": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2459": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2460": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2461": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2462": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2464": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2465": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2466": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "POP",
      "path": "2"
    },
    "2467": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "POP",
      "path": "2"
    },
    "2468": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "POP",
      "path": "2"
    },
    "2469": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "POP",
      "path": "2"
    },
    "2470": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2472": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2473": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2474": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2476": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "NOT",
      "path": "2"
    },
    "2477": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2479": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2480": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "ADD",
      "path": "2"
    },
    "2481": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "AND",
      "path": "2"
    },
    "2482": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2483": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "ADD",
      "path": "2"
    },
    "2484": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2485": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2487": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2488": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "POP",
      "path": "2"
    },
    "2489": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2490": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "ADD",
      "path": "2"
    },
    "2491": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2492": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9C5"
    },
    "2495": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2496": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2497": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD0F"
    },
    "2500": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        5718,
        5770
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2501": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5718,
        5770
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2502": {
      "op": "POP"
    },
    "2503": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2505": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2506": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2513": {
      "op": "SHL"
    },
    "2514": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2515": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2516": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5825,
        5829
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2517": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2519": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2520": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "ADD",
      "path": "2"
    },
    "2521": {
      "op": "MSTORE"
    },
    "2522": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5781,
        5798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2524": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5781,
        5798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2531": {
      "op": "SHL"
    },
    "2532": {
      "op": "SUB"
    },
    "2533": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5816
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2534": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5816
      ],
      "op": "AND",
      "path": "2"
    },
    "2535": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5816
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2536": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5816
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "2541": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5816
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2544": {
      "op": "ADD"
    },
    "2545": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2547": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2549": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2550": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2551": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2552": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "SUB",
      "path": "2"
    },
    "2553": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2554": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2555": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "GAS",
      "path": "2"
    },
    "2556": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2557": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2558": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2559": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2560": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0D"
    },
    "2563": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2564": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2565": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2567": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2568": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2569": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2570": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2572": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2573": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2574": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "POP",
      "path": "2"
    },
    "2575": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "POP",
      "path": "2"
    },
    "2576": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "POP",
      "path": "2"
    },
    "2577": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "POP",
      "path": "2"
    },
    "2578": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2580": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2581": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2582": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2584": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "NOT",
      "path": "2"
    },
    "2585": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2587": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2588": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "ADD",
      "path": "2"
    },
    "2589": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "AND",
      "path": "2"
    },
    "2590": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2591": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "ADD",
      "path": "2"
    },
    "2592": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2593": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2595": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2596": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "POP",
      "path": "2"
    },
    "2597": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2598": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "ADD",
      "path": "2"
    },
    "2599": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2600": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA31"
    },
    "2603": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2604": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2605": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF6"
    },
    "2608": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        5801,
        5831
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2609": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5801,
        5831
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2610": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5781,
        5831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2611": {
      "op": "POP"
    },
    "2612": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5943,
        5952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2614": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5955,
        5983
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3F"
    },
    "2617": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5970,
        5983
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2618": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5781,
        5831
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2619": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5955,
        5983
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "2622": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        5955,
        5983
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2623": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5955,
        5983
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2624": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5943,
        5983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2625": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5943,
        5983
      ],
      "op": "POP",
      "path": "2"
    },
    "2626": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6082,
        6086
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 21
    },
    "2627": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6065
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2628": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2630": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6078
      ],
      "op": "ADD",
      "path": "2"
    },
    "2631": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2633": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2634": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2635": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2636": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA55"
    },
    "2639": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2640": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2641": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDCA"
    },
    "2644": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "i",
      "offset": [
        6055,
        6086
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2645": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2646": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2647": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2648": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6055,
        6086
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2649": {
      "op": "POP"
    },
    "2650": {
      "op": "POP"
    },
    "2651": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6128,
        6151
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x2"
    },
    "2653": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6128,
        6151
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2654": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6128,
        6151
      ],
      "op": "ADD",
      "path": "2"
    },
    "2655": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6128,
        6151
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2656": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2658": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2659": {
      "op": "DUP3"
    },
    "2660": {
      "op": "DUP2"
    },
    "2661": {
      "op": "MSTORE"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2668": {
      "op": "SHL"
    },
    "2669": {
      "op": "SUB"
    },
    "2670": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6128,
        6151
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2671": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6128,
        6151
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2672": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6128,
        6151
      ],
      "op": "AND",
      "path": "2"
    },
    "2673": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6128,
        6151
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2674": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6117,
        6126
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2675": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6117,
        6126
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2676": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xB162210DA7D23D82C18CFF5AF46D3562661D26B42A6848FA28D64A6BDC70386A"
    },
    "2709": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2712": {
      "op": "ADD"
    },
    "2713": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2715": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2716": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2717": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2718": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "SUB",
      "path": "2"
    },
    "2719": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2720": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        6101,
        6158
      ],
      "op": "LOG3",
      "path": "2"
    },
    "2721": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5032,
        6165
      ],
      "op": "POP",
      "path": "2"
    },
    "2722": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5032,
        6165
      ],
      "op": "POP",
      "path": "2"
    },
    "2723": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5032,
        6165
      ],
      "op": "POP",
      "path": "2"
    },
    "2724": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5032,
        6165
      ],
      "op": "POP",
      "path": "2"
    },
    "2725": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        5032,
        6165
      ],
      "op": "POP",
      "path": "2"
    },
    "2726": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "POP",
      "path": "2"
    },
    "2727": {
      "fn": "MerkleVesting.depositTokens",
      "offset": [
        4974,
        6165
      ],
      "op": "POP",
      "path": "2"
    },
    "2728": {
      "fn": "MerkleVesting.depositTokens",
      "jump": "o",
      "offset": [
        4974,
        6165
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2729": {
      "op": "JUMPDEST"
    },
    "2730": {
      "op": "DUP1"
    },
    "2731": {
      "op": "CALLDATALOAD"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "op": "SUB"
    },
    "2740": {
      "op": "DUP2"
    },
    "2741": {
      "op": "AND"
    },
    "2742": {
      "op": "DUP2"
    },
    "2743": {
      "op": "EQ"
    },
    "2744": {
      "op": "PUSH2",
      "value": "0xAC0"
    },
    "2747": {
      "op": "JUMPI"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2750": {
      "op": "DUP1"
    },
    "2751": {
      "op": "REVERT"
    },
    "2752": {
      "op": "JUMPDEST"
    },
    "2753": {
      "op": "SWAP2"
    },
    "2754": {
      "op": "SWAP1"
    },
    "2755": {
      "op": "POP"
    },
    "2756": {
      "jump": "o",
      "op": "JUMP"
    },
    "2757": {
      "op": "JUMPDEST"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2760": {
      "op": "DUP1"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2763": {
      "op": "DUP4"
    },
    "2764": {
      "op": "DUP6"
    },
    "2765": {
      "op": "SUB"
    },
    "2766": {
      "op": "SLT"
    },
    "2767": {
      "op": "ISZERO"
    },
    "2768": {
      "op": "PUSH2",
      "value": "0xAD8"
    },
    "2771": {
      "op": "JUMPI"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2774": {
      "op": "DUP1"
    },
    "2775": {
      "op": "REVERT"
    },
    "2776": {
      "op": "JUMPDEST"
    },
    "2777": {
      "op": "DUP3"
    },
    "2778": {
      "op": "CALLDATALOAD"
    },
    "2779": {
      "op": "SWAP2"
    },
    "2780": {
      "op": "POP"
    },
    "2781": {
      "op": "PUSH2",
      "value": "0xAE8"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2786": {
      "op": "DUP5"
    },
    "2787": {
      "op": "ADD"
    },
    "2788": {
      "op": "PUSH2",
      "value": "0xAA9"
    },
    "2791": {
      "jump": "i",
      "op": "JUMP"
    },
    "2792": {
      "op": "JUMPDEST"
    },
    "2793": {
      "op": "SWAP1"
    },
    "2794": {
      "op": "POP"
    },
    "2795": {
      "op": "SWAP3"
    },
    "2796": {
      "op": "POP"
    },
    "2797": {
      "op": "SWAP3"
    },
    "2798": {
      "op": "SWAP1"
    },
    "2799": {
      "op": "POP"
    },
    "2800": {
      "jump": "o",
      "op": "JUMP"
    },
    "2801": {
      "op": "JUMPDEST"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2806": {
      "op": "DUP3"
    },
    "2807": {
      "op": "DUP5"
    },
    "2808": {
      "op": "SUB"
    },
    "2809": {
      "op": "SLT"
    },
    "2810": {
      "op": "ISZERO"
    },
    "2811": {
      "op": "PUSH2",
      "value": "0xB03"
    },
    "2814": {
      "op": "JUMPI"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2817": {
      "op": "DUP1"
    },
    "2818": {
      "op": "REVERT"
    },
    "2819": {
      "op": "JUMPDEST"
    },
    "2820": {
      "op": "POP"
    },
    "2821": {
      "op": "CALLDATALOAD"
    },
    "2822": {
      "op": "SWAP2"
    },
    "2823": {
      "op": "SWAP1"
    },
    "2824": {
      "op": "POP"
    },
    "2825": {
      "jump": "o",
      "op": "JUMP"
    },
    "2826": {
      "op": "JUMPDEST"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2829": {
      "op": "DUP1"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2832": {
      "op": "DUP1"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2835": {
      "op": "DUP6"
    },
    "2836": {
      "op": "DUP8"
    },
    "2837": {
      "op": "SUB"
    },
    "2838": {
      "op": "SLT"
    },
    "2839": {
      "op": "ISZERO"
    },
    "2840": {
      "op": "PUSH2",
      "value": "0xB20"
    },
    "2843": {
      "op": "JUMPI"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2846": {
      "op": "DUP1"
    },
    "2847": {
      "op": "REVERT"
    },
    "2848": {
      "op": "JUMPDEST"
    },
    "2849": {
      "op": "DUP5"
    },
    "2850": {
      "op": "CALLDATALOAD"
    },
    "2851": {
      "op": "SWAP4"
    },
    "2852": {
      "op": "POP"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2855": {
      "op": "DUP6"
    },
    "2856": {
      "op": "ADD"
    },
    "2857": {
      "op": "CALLDATALOAD"
    },
    "2858": {
      "op": "SWAP3"
    },
    "2859": {
      "op": "POP"
    },
    "2860": {
      "op": "PUSH2",
      "value": "0xB37"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2865": {
      "op": "DUP7"
    },
    "2866": {
      "op": "ADD"
    },
    "2867": {
      "op": "PUSH2",
      "value": "0xAA9"
    },
    "2870": {
      "jump": "i",
      "op": "JUMP"
    },
    "2871": {
      "op": "JUMPDEST"
    },
    "2872": {
      "op": "SWAP4"
    },
    "2873": {
      "op": "SWAP7"
    },
    "2874": {
      "op": "SWAP3"
    },
    "2875": {
      "op": "SWAP6"
    },
    "2876": {
      "op": "POP"
    },
    "2877": {
      "op": "SWAP3"
    },
    "2878": {
      "op": "SWAP4"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2881": {
      "op": "ADD"
    },
    "2882": {
      "op": "CALLDATALOAD"
    },
    "2883": {
      "op": "SWAP3"
    },
    "2884": {
      "op": "POP"
    },
    "2885": {
      "op": "POP"
    },
    "2886": {
      "jump": "o",
      "op": "JUMP"
    },
    "2887": {
      "op": "JUMPDEST"
    },
    "2888": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2898": {
      "op": "MSTORE"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2908": {
      "op": "REVERT"
    },
    "2909": {
      "op": "JUMPDEST"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2912": {
      "op": "DUP1"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2915": {
      "op": "DUP1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2918": {
      "op": "DUP1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2923": {
      "op": "DUP9"
    },
    "2924": {
      "op": "DUP11"
    },
    "2925": {
      "op": "SUB"
    },
    "2926": {
      "op": "SLT"
    },
    "2927": {
      "op": "ISZERO"
    },
    "2928": {
      "op": "PUSH2",
      "value": "0xB78"
    },
    "2931": {
      "op": "JUMPI"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2934": {
      "op": "DUP1"
    },
    "2935": {
      "op": "REVERT"
    },
    "2936": {
      "op": "JUMPDEST"
    },
    "2937": {
      "op": "DUP8"
    },
    "2938": {
      "op": "CALLDATALOAD"
    },
    "2939": {
      "op": "SWAP7"
    },
    "2940": {
      "op": "POP"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2943": {
      "op": "PUSH2",
      "value": "0xB89"
    },
    "2946": {
      "op": "DUP2"
    },
    "2947": {
      "op": "DUP11"
    },
    "2948": {
      "op": "ADD"
    },
    "2949": {
      "op": "PUSH2",
      "value": "0xAA9"
    },
    "2952": {
      "jump": "i",
      "op": "JUMP"
    },
    "2953": {
      "op": "JUMPDEST"
    },
    "2954": {
      "op": "SWAP7"
    },
    "2955": {
      "op": "POP"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2958": {
      "op": "DUP10"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "CALLDATALOAD"
    },
    "2961": {
      "op": "SWAP6"
    },
    "2962": {
      "op": "POP"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2965": {
      "op": "DUP10"
    },
    "2966": {
      "op": "ADD"
    },
    "2967": {
      "op": "CALLDATALOAD"
    },
    "2968": {
      "op": "SWAP5"
    },
    "2969": {
      "op": "POP"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2972": {
      "op": "DUP10"
    },
    "2973": {
      "op": "ADD"
    },
    "2974": {
      "op": "CALLDATALOAD"
    },
    "2975": {
      "op": "SWAP4"
    },
    "2976": {
      "op": "POP"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2979": {
      "op": "DUP10"
    },
    "2980": {
      "op": "ADD"
    },
    "2981": {
      "op": "CALLDATALOAD"
    },
    "2982": {
      "op": "SWAP3"
    },
    "2983": {
      "op": "POP"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2986": {
      "op": "DUP10"
    },
    "2987": {
      "op": "ADD"
    },
    "2988": {
      "op": "CALLDATALOAD"
    },
    "2989": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2998": {
      "op": "DUP1"
    },
    "2999": {
      "op": "DUP3"
    },
    "3000": {
      "op": "GT"
    },
    "3001": {
      "op": "ISZERO"
    },
    "3002": {
      "op": "PUSH2",
      "value": "0xBC2"
    },
    "3005": {
      "op": "JUMPI"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3008": {
      "op": "DUP1"
    },
    "3009": {
      "op": "REVERT"
    },
    "3010": {
      "op": "JUMPDEST"
    },
    "3011": {
      "op": "DUP2"
    },
    "3012": {
      "op": "DUP12"
    },
    "3013": {
      "op": "ADD"
    },
    "3014": {
      "op": "SWAP2"
    },
    "3015": {
      "op": "POP"
    },
    "3016": {
      "op": "DUP12"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3019": {
      "op": "DUP4"
    },
    "3020": {
      "op": "ADD"
    },
    "3021": {
      "op": "SLT"
    },
    "3022": {
      "op": "PUSH2",
      "value": "0xBD6"
    },
    "3025": {
      "op": "JUMPI"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3028": {
      "op": "DUP1"
    },
    "3029": {
      "op": "REVERT"
    },
    "3030": {
      "op": "JUMPDEST"
    },
    "3031": {
      "op": "DUP2"
    },
    "3032": {
      "op": "CALLDATALOAD"
    },
    "3033": {
      "op": "DUP2"
    },
    "3034": {
      "op": "DUP2"
    },
    "3035": {
      "op": "GT"
    },
    "3036": {
      "op": "ISZERO"
    },
    "3037": {
      "op": "PUSH2",
      "value": "0xBE8"
    },
    "3040": {
      "op": "JUMPI"
    },
    "3041": {
      "op": "PUSH2",
      "value": "0xBE8"
    },
    "3044": {
      "op": "PUSH2",
      "value": "0xB47"
    },
    "3047": {
      "jump": "i",
      "op": "JUMP"
    },
    "3048": {
      "op": "JUMPDEST"
    },
    "3049": {
      "op": "DUP1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3052": {
      "op": "SHL"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3055": {
      "op": "MLOAD"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3058": {
      "op": "NOT"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3061": {
      "op": "DUP4"
    },
    "3062": {
      "op": "ADD"
    },
    "3063": {
      "op": "AND"
    },
    "3064": {
      "op": "DUP2"
    },
    "3065": {
      "op": "ADD"
    },
    "3066": {
      "op": "DUP2"
    },
    "3067": {
      "op": "DUP2"
    },
    "3068": {
      "op": "LT"
    },
    "3069": {
      "op": "DUP6"
    },
    "3070": {
      "op": "DUP3"
    },
    "3071": {
      "op": "GT"
    },
    "3072": {
      "op": "OR"
    },
    "3073": {
      "op": "ISZERO"
    },
    "3074": {
      "op": "PUSH2",
      "value": "0xC0D"
    },
    "3077": {
      "op": "JUMPI"
    },
    "3078": {
      "op": "PUSH2",
      "value": "0xC0D"
    },
    "3081": {
      "op": "PUSH2",
      "value": "0xB47"
    },
    "3084": {
      "jump": "i",
      "op": "JUMP"
    },
    "3085": {
      "op": "JUMPDEST"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3088": {
      "op": "MSTORE"
    },
    "3089": {
      "op": "SWAP2"
    },
    "3090": {
      "op": "DUP3"
    },
    "3091": {
      "op": "MSTORE"
    },
    "3092": {
      "op": "DUP5"
    },
    "3093": {
      "op": "DUP3"
    },
    "3094": {
      "op": "ADD"
    },
    "3095": {
      "op": "SWAP3"
    },
    "3096": {
      "op": "POP"
    },
    "3097": {
      "op": "DUP4"
    },
    "3098": {
      "op": "DUP2"
    },
    "3099": {
      "op": "ADD"
    },
    "3100": {
      "op": "DUP6"
    },
    "3101": {
      "op": "ADD"
    },
    "3102": {
      "op": "SWAP2"
    },
    "3103": {
      "op": "DUP15"
    },
    "3104": {
      "op": "DUP4"
    },
    "3105": {
      "op": "GT"
    },
    "3106": {
      "op": "ISZERO"
    },
    "3107": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3110": {
      "op": "JUMPI"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3113": {
      "op": "DUP1"
    },
    "3114": {
      "op": "REVERT"
    },
    "3115": {
      "op": "JUMPDEST"
    },
    "3116": {
      "op": "SWAP4"
    },
    "3117": {
      "op": "DUP6"
    },
    "3118": {
      "op": "ADD"
    },
    "3119": {
      "op": "SWAP4"
    },
    "3120": {
      "op": "JUMPDEST"
    },
    "3121": {
      "op": "DUP3"
    },
    "3122": {
      "op": "DUP6"
    },
    "3123": {
      "op": "LT"
    },
    "3124": {
      "op": "ISZERO"
    },
    "3125": {
      "op": "PUSH2",
      "value": "0xC49"
    },
    "3128": {
      "op": "JUMPI"
    },
    "3129": {
      "op": "DUP5"
    },
    "3130": {
      "op": "CALLDATALOAD"
    },
    "3131": {
      "op": "DUP5"
    },
    "3132": {
      "op": "MSTORE"
    },
    "3133": {
      "op": "SWAP4"
    },
    "3134": {
      "op": "DUP6"
    },
    "3135": {
      "op": "ADD"
    },
    "3136": {
      "op": "SWAP4"
    },
    "3137": {
      "op": "SWAP3"
    },
    "3138": {
      "op": "DUP6"
    },
    "3139": {
      "op": "ADD"
    },
    "3140": {
      "op": "SWAP3"
    },
    "3141": {
      "op": "PUSH2",
      "value": "0xC30"
    },
    "3144": {
      "op": "JUMP"
    },
    "3145": {
      "op": "JUMPDEST"
    },
    "3146": {
      "op": "DUP1"
    },
    "3147": {
      "op": "SWAP7"
    },
    "3148": {
      "op": "POP"
    },
    "3149": {
      "op": "POP"
    },
    "3150": {
      "op": "POP"
    },
    "3151": {
      "op": "POP"
    },
    "3152": {
      "op": "POP"
    },
    "3153": {
      "op": "POP"
    },
    "3154": {
      "op": "POP"
    },
    "3155": {
      "op": "SWAP3"
    },
    "3156": {
      "op": "SWAP6"
    },
    "3157": {
      "op": "SWAP9"
    },
    "3158": {
      "op": "SWAP2"
    },
    "3159": {
      "op": "SWAP5"
    },
    "3160": {
      "op": "SWAP8"
    },
    "3161": {
      "op": "POP"
    },
    "3162": {
      "op": "SWAP3"
    },
    "3163": {
      "op": "SWAP6"
    },
    "3164": {
      "op": "POP"
    },
    "3165": {
      "jump": "o",
      "op": "JUMP"
    },
    "3166": {
      "op": "JUMPDEST"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3169": {
      "op": "DUP1"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3172": {
      "op": "DUP4"
    },
    "3173": {
      "op": "DUP6"
    },
    "3174": {
      "op": "SUB"
    },
    "3175": {
      "op": "SLT"
    },
    "3176": {
      "op": "ISZERO"
    },
    "3177": {
      "op": "PUSH2",
      "value": "0xC71"
    },
    "3180": {
      "op": "JUMPI"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3183": {
      "op": "DUP1"
    },
    "3184": {
      "op": "REVERT"
    },
    "3185": {
      "op": "JUMPDEST"
    },
    "3186": {
      "op": "PUSH2",
      "value": "0xC7A"
    },
    "3189": {
      "op": "DUP4"
    },
    "3190": {
      "op": "PUSH2",
      "value": "0xAA9"
    },
    "3193": {
      "jump": "i",
      "op": "JUMP"
    },
    "3194": {
      "op": "JUMPDEST"
    },
    "3195": {
      "op": "SWAP5"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3198": {
      "op": "SWAP4"
    },
    "3199": {
      "op": "SWAP1"
    },
    "3200": {
      "op": "SWAP4"
    },
    "3201": {
      "op": "ADD"
    },
    "3202": {
      "op": "CALLDATALOAD"
    },
    "3203": {
      "op": "SWAP4"
    },
    "3204": {
      "op": "POP"
    },
    "3205": {
      "op": "POP"
    },
    "3206": {
      "op": "POP"
    },
    "3207": {
      "jump": "o",
      "op": "JUMP"
    },
    "3208": {
      "op": "JUMPDEST"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3211": {
      "op": "DUP1"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3214": {
      "op": "DUP4"
    },
    "3215": {
      "op": "DUP6"
    },
    "3216": {
      "op": "SUB"
    },
    "3217": {
      "op": "SLT"
    },
    "3218": {
      "op": "ISZERO"
    },
    "3219": {
      "op": "PUSH2",
      "value": "0xC9B"
    },
    "3222": {
      "op": "JUMPI"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3225": {
      "op": "DUP1"
    },
    "3226": {
      "op": "REVERT"
    },
    "3227": {
      "op": "JUMPDEST"
    },
    "3228": {
      "op": "POP"
    },
    "3229": {
      "op": "POP"
    },
    "3230": {
      "op": "DUP1"
    },
    "3231": {
      "op": "CALLDATALOAD"
    },
    "3232": {
      "op": "SWAP3"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3235": {
      "op": "SWAP1"
    },
    "3236": {
      "op": "SWAP2"
    },
    "3237": {
      "op": "ADD"
    },
    "3238": {
      "op": "CALLDATALOAD"
    },
    "3239": {
      "op": "SWAP2"
    },
    "3240": {
      "op": "POP"
    },
    "3241": {
      "jump": "o",
      "op": "JUMP"
    },
    "3242": {
      "op": "JUMPDEST"
    },
    "3243": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3250": {
      "op": "SHL"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3253": {
      "op": "MSTORE"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3258": {
      "op": "MSTORE"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3263": {
      "op": "REVERT"
    },
    "3264": {
      "op": "JUMPDEST"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3267": {
      "op": "DUP3"
    },
    "3268": {
      "op": "DUP3"
    },
    "3269": {
      "op": "LT"
    },
    "3270": {
      "op": "ISZERO"
    },
    "3271": {
      "op": "PUSH2",
      "value": "0xCD2"
    },
    "3274": {
      "op": "JUMPI"
    },
    "3275": {
      "op": "PUSH2",
      "value": "0xCD2"
    },
    "3278": {
      "op": "PUSH2",
      "value": "0xCAA"
    },
    "3281": {
      "jump": "i",
      "op": "JUMP"
    },
    "3282": {
      "op": "JUMPDEST"
    },
    "3283": {
      "op": "POP"
    },
    "3284": {
      "op": "SUB"
    },
    "3285": {
      "op": "SWAP1"
    },
    "3286": {
      "jump": "o",
      "op": "JUMP"
    },
    "3287": {
      "op": "JUMPDEST"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3290": {
      "op": "DUP2"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3293": {
      "op": "NOT"
    },
    "3294": {
      "op": "DIV"
    },
    "3295": {
      "op": "DUP4"
    },
    "3296": {
      "op": "GT"
    },
    "3297": {
      "op": "DUP3"
    },
    "3298": {
      "op": "ISZERO"
    },
    "3299": {
      "op": "ISZERO"
    },
    "3300": {
      "op": "AND"
    },
    "3301": {
      "op": "ISZERO"
    },
    "3302": {
      "op": "PUSH2",
      "value": "0xCF1"
    },
    "3305": {
      "op": "JUMPI"
    },
    "3306": {
      "op": "PUSH2",
      "value": "0xCF1"
    },
    "3309": {
      "op": "PUSH2",
      "value": "0xCAA"
    },
    "3312": {
      "jump": "i",
      "op": "JUMP"
    },
    "3313": {
      "op": "JUMPDEST"
    },
    "3314": {
      "op": "POP"
    },
    "3315": {
      "op": "MUL"
    },
    "3316": {
      "op": "SWAP1"
    },
    "3317": {
      "jump": "o",
      "op": "JUMP"
    },
    "3318": {
      "op": "JUMPDEST"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3323": {
      "op": "DUP3"
    },
    "3324": {
      "op": "DUP5"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "op": "SLT"
    },
    "3327": {
      "op": "ISZERO"
    },
    "3328": {
      "op": "PUSH2",
      "value": "0xD08"
    },
    "3331": {
      "op": "JUMPI"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3334": {
      "op": "DUP1"
    },
    "3335": {
      "op": "REVERT"
    },
    "3336": {
      "op": "JUMPDEST"
    },
    "3337": {
      "op": "POP"
    },
    "3338": {
      "op": "MLOAD"
    },
    "3339": {
      "op": "SWAP2"
    },
    "3340": {
      "op": "SWAP1"
    },
    "3341": {
      "op": "POP"
    },
    "3342": {
      "jump": "o",
      "op": "JUMP"
    },
    "3343": {
      "op": "JUMPDEST"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3348": {
      "op": "DUP3"
    },
    "3349": {
      "op": "DUP5"
    },
    "3350": {
      "op": "SUB"
    },
    "3351": {
      "op": "SLT"
    },
    "3352": {
      "op": "ISZERO"
    },
    "3353": {
      "op": "PUSH2",
      "value": "0xD21"
    },
    "3356": {
      "op": "JUMPI"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3359": {
      "op": "DUP1"
    },
    "3360": {
      "op": "REVERT"
    },
    "3361": {
      "op": "JUMPDEST"
    },
    "3362": {
      "op": "DUP2"
    },
    "3363": {
      "op": "MLOAD"
    },
    "3364": {
      "op": "DUP1"
    },
    "3365": {
      "op": "ISZERO"
    },
    "3366": {
      "op": "ISZERO"
    },
    "3367": {
      "op": "DUP2"
    },
    "3368": {
      "op": "EQ"
    },
    "3369": {
      "op": "PUSH2",
      "value": "0xD31"
    },
    "3372": {
      "op": "JUMPI"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3375": {
      "op": "DUP1"
    },
    "3376": {
      "op": "REVERT"
    },
    "3377": {
      "op": "JUMPDEST"
    },
    "3378": {
      "op": "SWAP4"
    },
    "3379": {
      "op": "SWAP3"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "op": "POP"
    },
    "3382": {
      "op": "POP"
    },
    "3383": {
      "jump": "o",
      "op": "JUMP"
    },
    "3384": {
      "op": "JUMPDEST"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3389": {
      "op": "NOT"
    },
    "3390": {
      "op": "DUP3"
    },
    "3391": {
      "op": "EQ"
    },
    "3392": {
      "op": "ISZERO"
    },
    "3393": {
      "op": "PUSH2",
      "value": "0xD4C"
    },
    "3396": {
      "op": "JUMPI"
    },
    "3397": {
      "op": "PUSH2",
      "value": "0xD4C"
    },
    "3400": {
      "op": "PUSH2",
      "value": "0xCAA"
    },
    "3403": {
      "jump": "i",
      "op": "JUMP"
    },
    "3404": {
      "op": "JUMPDEST"
    },
    "3405": {
      "op": "POP"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3408": {
      "op": "ADD"
    },
    "3409": {
      "op": "SWAP1"
    },
    "3410": {
      "jump": "o",
      "op": "JUMP"
    },
    "3411": {
      "op": "JUMPDEST"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3416": {
      "op": "DUP3"
    },
    "3417": {
      "op": "ADD"
    },
    "3418": {
      "op": "DUP6"
    },
    "3419": {
      "op": "DUP4"
    },
    "3420": {
      "op": "MSTORE"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3423": {
      "op": "DUP6"
    },
    "3424": {
      "op": "DUP2"
    },
    "3425": {
      "op": "DUP6"
    },
    "3426": {
      "op": "ADD"
    },
    "3427": {
      "op": "MSTORE"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3432": {
      "op": "DUP6"
    },
    "3433": {
      "op": "ADD"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "DUP2"
    },
    "3436": {
      "op": "DUP6"
    },
    "3437": {
      "op": "MLOAD"
    },
    "3438": {
      "op": "DUP1"
    },
    "3439": {
      "op": "DUP5"
    },
    "3440": {
      "op": "MSTORE"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3443": {
      "op": "DUP7"
    },
    "3444": {
      "op": "ADD"
    },
    "3445": {
      "op": "SWAP2"
    },
    "3446": {
      "op": "POP"
    },
    "3447": {
      "op": "DUP3"
    },
    "3448": {
      "op": "DUP8"
    },
    "3449": {
      "op": "ADD"
    },
    "3450": {
      "op": "SWAP4"
    },
    "3451": {
      "op": "POP"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3454": {
      "op": "JUMPDEST"
    },
    "3455": {
      "op": "DUP2"
    },
    "3456": {
      "op": "DUP2"
    },
    "3457": {
      "op": "LT"
    },
    "3458": {
      "op": "ISZERO"
    },
    "3459": {
      "op": "PUSH2",
      "value": "0xD9A"
    },
    "3462": {
      "op": "JUMPI"
    },
    "3463": {
      "op": "DUP5"
    },
    "3464": {
      "op": "MLOAD"
    },
    "3465": {
      "op": "DUP4"
    },
    "3466": {
      "op": "MSTORE"
    },
    "3467": {
      "op": "SWAP4"
    },
    "3468": {
      "op": "DUP4"
    },
    "3469": {
      "op": "ADD"
    },
    "3470": {
      "op": "SWAP4"
    },
    "3471": {
      "op": "SWAP2"
    },
    "3472": {
      "op": "DUP4"
    },
    "3473": {
      "op": "ADD"
    },
    "3474": {
      "op": "SWAP2"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "ADD"
    },
    "3478": {
      "op": "PUSH2",
      "value": "0xD7E"
    },
    "3481": {
      "op": "JUMP"
    },
    "3482": {
      "op": "JUMPDEST"
    },
    "3483": {
      "op": "POP"
    },
    "3484": {
      "op": "SWAP1"
    },
    "3485": {
      "op": "SWAP9"
    },
    "3486": {
      "op": "SWAP8"
    },
    "3487": {
      "op": "POP"
    },
    "3488": {
      "op": "POP"
    },
    "3489": {
      "op": "POP"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "op": "POP"
    },
    "3493": {
      "op": "POP"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "jump": "o",
      "op": "JUMP"
    },
    "3496": {
      "op": "JUMPDEST"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3499": {
      "op": "DUP3"
    },
    "3500": {
      "op": "PUSH2",
      "value": "0xDC5"
    },
    "3503": {
      "op": "JUMPI"
    },
    "3504": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3511": {
      "op": "SHL"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3514": {
      "op": "MSTORE"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3519": {
      "op": "MSTORE"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3524": {
      "op": "REVERT"
    },
    "3525": {
      "op": "JUMPDEST"
    },
    "3526": {
      "op": "POP"
    },
    "3527": {
      "op": "DIV"
    },
    "3528": {
      "op": "SWAP1"
    },
    "3529": {
      "jump": "o",
      "op": "JUMP"
    },
    "3530": {
      "op": "JUMPDEST"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3533": {
      "op": "DUP3"
    },
    "3534": {
      "op": "NOT"
    },
    "3535": {
      "op": "DUP3"
    },
    "3536": {
      "op": "GT"
    },
    "3537": {
      "op": "ISZERO"
    },
    "3538": {
      "op": "PUSH2",
      "value": "0xDDD"
    },
    "3541": {
      "op": "JUMPI"
    },
    "3542": {
      "op": "PUSH2",
      "value": "0xDDD"
    },
    "3545": {
      "op": "PUSH2",
      "value": "0xCAA"
    },
    "3548": {
      "jump": "i",
      "op": "JUMP"
    },
    "3549": {
      "op": "JUMPDEST"
    },
    "3550": {
      "op": "POP"
    },
    "3551": {
      "op": "ADD"
    },
    "3552": {
      "op": "SWAP1"
    },
    "3553": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9ee0e62e934bb4522cd4a4ac2341d3d0c03eb323",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\n\npragma solidity 0.8.12;\n\nimport \"../interfaces/IERC20.sol\";\nimport \"./MerkleLib.sol\";\n\n/// @title A factory pattern for merkle-vesting, that is, a time release schedule for tokens, using merkle proofs to scale\n/// @author metapriest, adrian.wachel, marek.babiarz, radoslaw.gorecki\n/// @notice This contract is permissionless and public facing. Any fees must be included in the data of the merkle tree.\n/// @dev The contract cannot introspect into the contents of the merkle tree, except when provided a merkle proof\ncontract MerkleVesting {\n    using MerkleLib for bytes32;\n\n    // the number of vesting schedules in this contract\n    uint public numTrees;\n    \n    // this represents a single vesting schedule for a specific address\n    struct Tranche {\n        uint totalCoins;  // total number of coins released to an address after vesting is completed\n        uint currentCoins; // how many coins are left unclaimed by this address, vested or unvested\n        uint startTime; // when the vesting schedule is set to start, possibly in the past\n        uint endTime;  // when the vesting schedule will have released all coins\n        uint coinsPerSecond; // an intermediate value cached to reduce gas costs, how many coins released every second\n        uint lastWithdrawalTime; // the last time a withdrawal occurred, used to compute unvested coins\n        uint lockPeriodEndTime; // the first time at which coins may be withdrawn\n    }\n\n    // this represents a set of vesting schedules all in the same token\n    struct MerkleTree {\n        bytes32 rootHash;  // merkleroot of tree whose leaves are (address,uint,uint,uint,uint) representing vesting schedules\n        bytes32 ipfsHash; // ipfs hash of entire dataset, used to reconstruct merkle proofs if our servers go down\n        address tokenAddress; // token that the vesting schedules will be denominated in\n        uint tokenBalance; // current amount of tokens deposited to this tree, used to make sure trees don't share tokens\n    }\n\n    // initialized[treeIndex][leafHash] = wasItInitialized?\n    mapping (uint => mapping (bytes32 => bool)) public initialized;\n\n    // array-like sequential map for all the vesting schedules\n    mapping (uint => MerkleTree) public merkleTrees;\n\n    // tranches[recipient][treeIndex] = initializedVestingSchedule\n    mapping (address => mapping (uint => Tranche)) public tranches;\n\n    // every time there's a withdrawal\n    event WithdrawalOccurred(uint indexed treeIndex, address indexed destination, uint numTokens, uint tokensLeft);\n\n    // every time a tree is added\n    event MerkleRootAdded(uint indexed treeIndex, address indexed tokenAddress, bytes32 newRoot, bytes32 ipfsHash);\n\n    // every time a tree is topped up\n    event TokensDeposited(uint indexed treeIndex, address indexed tokenAddress, uint amount);\n\n    error BadTreeIndex(uint treeIndex);\n    error AlreadyInitialized(uint treeIndex, address destination);\n    error BadProof(uint treeIndex, bytes32 leaf, bytes32[] proof);\n    error UninitializedAccount(uint treeIndex, address recipient);\n    error AccountStillLocked(uint treeIndex, address recipient);\n    error AccountEmpty(uint treeIndex, address recipient);\n\n    /// @notice Add a new merkle tree to the contract, creating a new merkle-vesting-schedule\n    /// @dev Anyone may call this function, therefore we must make sure trees cannot affect each other\n    /// @dev Root hash should be built from (destination, totalCoins, startTime, endTime, lockPeriodEndTime)\n    /// @param newRoot root hash of merkle tree representing vesting schedules\n    /// @param ipfsHash the ipfs hash of the entire dataset, used for redundance so that creator can ensure merkleproof are always computable\n    /// @param tokenAddress the address of the token contract that is being distributed\n    /// @param tokenBalance the amount of tokens user wishes to use to fund the airdrop, note trees can be under/overfunded\n    function addMerkleRoot(bytes32 newRoot, bytes32 ipfsHash, address tokenAddress, uint tokenBalance) public {\n        // prefix operator ++ increments then evaluates\n        merkleTrees[++numTrees] = MerkleTree(\n            newRoot,\n            ipfsHash,\n            tokenAddress,\n            0    // no funds have been allocated to the tree yet\n        );\n        // fund the tree now\n        depositTokens(numTrees, tokenBalance);\n        emit MerkleRootAdded(numTrees, tokenAddress, newRoot, ipfsHash);\n    }\n\n    /// @notice Add funds to an existing merkle-vesting-schedule\n    /// @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n    /// @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs\n    /// @param treeIndex index into array-like map of merkleTrees\n    /// @param value the amount of tokens user wishes to use to fund the airdrop, note trees can be underfunded\n    function depositTokens(uint treeIndex, uint value) public {\n        if (treeIndex == 0 || treeIndex > numTrees) {\n            revert BadTreeIndex(treeIndex);\n        }\n\n        // storage since we are editing\n        MerkleTree storage merkleTree = merkleTrees[treeIndex];\n\n        IERC20 token = IERC20(merkleTree.tokenAddress);\n        uint balanceBefore = token.balanceOf(address(this));\n\n        // transfer tokens, if this is a malicious token, then this whole tree is malicious\n        // but it does not effect the other trees\n        // NOTE: we don't check for success here because some tokens don't return a bool\n        // Instead we check the balance before and after, which takes care of the fee-on-transfer tokens as well\n        token.transferFrom(msg.sender, address(this), value);\n\n        uint balanceAfter = token.balanceOf(address(this));\n        // diff may be different from value here, it may even be zero if the transfer failed silently\n        uint diff = balanceAfter - balanceBefore;\n\n        // bookkeeping to make sure trees don't share tokens\n        merkleTree.tokenBalance += diff;\n        emit TokensDeposited(treeIndex, merkleTree.tokenAddress, diff);\n    }\n\n    /// @notice Called once per recipient of a vesting schedule to initialize the vesting schedule\n    /// @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n    /// @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs of global tree stats\n    /// @dev The contract has no knowledge of the vesting schedules until this function is called\n    /// @param treeIndex index into array-like map of merkleTrees\n    /// @param destination address that will receive tokens\n    /// @param totalCoins amount of tokens to be released after vesting completes\n    /// @param startTime time that vesting schedule starts, can be past or future\n    /// @param endTime time vesting schedule completes, can be past or future\n    /// @param lockPeriodEndTime time that coins become unlocked, can be after endTime\n    /// @param proof array of hashes linking leaf hash of (destination, totalCoins, startTime, endTime, lockPeriodEndTime) to root\n    function initialize(uint treeIndex, address destination, uint totalCoins, uint startTime, uint endTime, uint lockPeriodEndTime, bytes32[] memory proof) external {\n        if (treeIndex == 0 || treeIndex > numTrees) {\n            revert BadTreeIndex(treeIndex);\n        }\n        // leaf hash is digest of vesting schedule parameters and destination\n        // NOTE: use abi.encode, not abi.encodePacked to avoid possible (but unlikely) collision\n        bytes32 leaf = keccak256(abi.encode(destination, totalCoins, startTime, endTime, lockPeriodEndTime));\n\n        // must not initialize multiple times\n        if (initialized[treeIndex][leaf]) {\n            revert AlreadyInitialized(treeIndex, destination);\n        }\n\n        // storage because it's cheaper, \"memory\" copies from storage to memory\n        MerkleTree storage tree = merkleTrees[treeIndex];\n\n        // call to MerkleLib to check if the submitted data is correct\n        if (tree.rootHash.verifyProof(leaf, proof) == false) {\n            revert BadProof(treeIndex, leaf, proof);\n        }\n\n        // set initialized, preventing double initialization\n        initialized[treeIndex][leaf] = true;\n\n        // precompute how many coins are released per second\n        // NOTE: should check that endTime != startTime on backend since that would revert here\n        uint coinsPerSecond = totalCoins / (endTime - startTime);\n\n        // create the tranche struct and assign it\n        tranches[destination][treeIndex] = Tranche(\n            totalCoins,  // total coins to be released\n            totalCoins,  // currentCoins starts as totalCoins\n            startTime,\n            endTime,\n            coinsPerSecond,\n            startTime,    // lastWithdrawal starts as startTime\n            lockPeriodEndTime\n        );\n\n        // if we've passed the lock time go ahead and perform a withdrawal now\n        if (lockPeriodEndTime < block.timestamp) {\n            withdraw(treeIndex, destination);\n        }\n    }\n\n    /// @notice Claim funds as a recipient in the merkle-drop\n    /// @dev Anyone may call this function for anyone else, funds go to destination regardless, it's just a question of\n    /// @dev who provides the proof and pays the gas, msg.sender is not used in this function\n    /// @param treeIndex index into array-like map of merkleTrees, which tree should we apply the proof to?\n    /// @param destination recipient of tokens\n    function withdraw(uint treeIndex, address destination) public {\n        // storage because we will modify it\n        Tranche storage tranche = tranches[destination][treeIndex];\n\n        // checking this way so we don't have to recompute leaf hash\n        if (tranche.totalCoins == 0) {\n            revert UninitializedAccount(treeIndex, destination);\n        }\n\n        // no withdrawals before lock time ends\n        if (block.timestamp < tranche.lockPeriodEndTime) {\n            revert AccountStillLocked(treeIndex, destination);\n        }\n\n        // revert if there's nothing left\n        if (tranche.currentCoins == 0) {\n            revert AccountEmpty(treeIndex, destination);\n        }\n\n        // declaration for branched assignment\n        uint currentWithdrawal;\n\n        // if after vesting period ends, give them the remaining coins\n        if (block.timestamp >= tranche.endTime) {\n            currentWithdrawal = tranche.currentCoins;\n        } else {\n            // compute allowed withdrawal\n            currentWithdrawal = (block.timestamp - tranche.lastWithdrawalTime) * tranche.coinsPerSecond;\n        }\n\n        // this makes sure coins don't get double withdrawn, closes re-entrance gate\n        tranche.lastWithdrawalTime = block.timestamp;\n\n        MerkleTree storage tree = merkleTrees[treeIndex];\n        IERC20 token = IERC20(tree.tokenAddress);\n        uint balanceBefore = token.balanceOf(address(this));\n\n        // Transfer the tokens, if the token contract is malicious, this will make the whole tree malicious\n        // but this does not allow re-entrance due to struct updates and it does not effect other trees.\n        // It is also consistent with the ethereum general security model:\n        // other contracts do what they want, it's our job to protect our contract\n        token.transfer(destination, currentWithdrawal);\n\n        // compute the diff in case there is a fee-on-transfer or transfer failed silently\n        uint balanceAfter = token.balanceOf(address(this));\n        uint diff = balanceBefore - balanceAfter;\n\n        // decrease allocation of coins\n        tranche.currentCoins -= diff;\n\n        // update the tree balance so trees can't take each other's tokens\n        tree.tokenBalance -= diff;\n\n        emit WithdrawalOccurred(treeIndex, destination, diff, tranche.currentCoins);\n    }\n\n}",
  "sourceMap": "558:11426:2:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/MerkleVesting.sol",
  "type": "contract"
}