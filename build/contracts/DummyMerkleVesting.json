{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        }
      ],
      "name": "MerkleRootAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensLeft",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalOccurred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "newRoot",
          "type": "bytes32"
        }
      ],
      "name": "addMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "merkleIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "merkleRoots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numRoots",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tranches",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentCoins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "coinsPerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastWithdrawalTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "contracts/DummyMerkleVesting.sol",
    "4": "contracts/MerkleLib.sol",
    "7": "interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/DummyMerkleVesting.sol",
    "exportedSymbols": {
      "DummyMerkleVesting": [
        924
      ],
      "IERC20": [
        2387
      ],
      "MerkleLib": [
        1366
      ]
    },
    "id": 925,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 666,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:2"
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 667,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 925,
        "sourceUnit": 2388,
        "src": "67:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/MerkleLib.sol",
        "file": "./MerkleLib.sol",
        "id": 668,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 925,
        "sourceUnit": 1367,
        "src": "102:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DummyMerkleVesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 924,
        "linearizedBaseContracts": [
          924
        ],
        "name": "DummyMerkleVesting",
        "nameLocation": "138:18:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 671,
            "libraryName": {
              "id": 669,
              "name": "MerkleLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1366,
              "src": "169:9:2"
            },
            "nodeType": "UsingForDirective",
            "src": "163:28:2",
            "typeName": {
              "id": 670,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "183:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "71c5ecb1",
            "id": 675,
            "mutability": "mutable",
            "name": "merkleRoots",
            "nameLocation": "230:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 924,
            "src": "197:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 674,
              "keyType": {
                "id": 672,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "206:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "197:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 673,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "214:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7cda6497",
            "id": 677,
            "mutability": "mutable",
            "name": "numRoots",
            "nameLocation": "259:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 924,
            "src": "247:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 676,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "247:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 680,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "287:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 924,
            "src": "273:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2387",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 679,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 678,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2387,
                "src": "273:6:2"
              },
              "referencedDeclaration": 2387,
              "src": "273:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2387",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18369a2a",
            "id": 682,
            "mutability": "mutable",
            "name": "initialBalance",
            "nameLocation": "311:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 924,
            "src": "299:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 681,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "299:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "DummyMerkleVesting.Tranche",
            "id": 695,
            "members": [
              {
                "constant": false,
                "id": 684,
                "mutability": "mutable",
                "name": "totalCoins",
                "nameLocation": "362:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "357:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 683,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "357:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 686,
                "mutability": "mutable",
                "name": "currentCoins",
                "nameLocation": "387:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "382:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 685,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "382:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 688,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "414:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "409:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 687,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "409:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 690,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "438:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "433:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 689,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "433:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 692,
                "mutability": "mutable",
                "name": "coinsPerSecond",
                "nameLocation": "460:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "455:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 691,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "455:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 694,
                "mutability": "mutable",
                "name": "lastWithdrawalTime",
                "nameLocation": "489:18:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "484:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 693,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "484:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Tranche",
            "nameLocation": "339:7:2",
            "nodeType": "StructDefinition",
            "scope": 924,
            "src": "332:182:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cbca47db",
            "id": 699,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "553:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 924,
            "src": "520:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 698,
              "keyType": {
                "id": 696,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "529:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "520:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 697,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "540:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3bb0170d",
            "id": 704,
            "mutability": "mutable",
            "name": "tranches",
            "nameLocation": "606:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 924,
            "src": "570:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tranche_$695_storage_$",
              "typeString": "mapping(address => struct DummyMerkleVesting.Tranche)"
            },
            "typeName": {
              "id": 703,
              "keyType": {
                "id": 700,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "579:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "570:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tranche_$695_storage_$",
                "typeString": "mapping(address => struct DummyMerkleVesting.Tranche)"
              },
              "valueType": {
                "id": 702,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 701,
                  "name": "Tranche",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 695,
                  "src": "590:7:2"
                },
                "referencedDeclaration": 695,
                "src": "590:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                  "typeString": "struct DummyMerkleVesting.Tranche"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 712,
            "name": "WithdrawalOccurred",
            "nameLocation": "627:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 706,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "654:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "646:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 708,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "numTokens",
                  "nameLocation": "672:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "667:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 710,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokensLeft",
                  "nameLocation": "688:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "683:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "645:54:2"
            },
            "src": "621:79:2"
          },
          {
            "anonymous": false,
            "id": 718,
            "name": "MerkleRootAdded",
            "nameLocation": "711:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "740:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "727:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 716,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "755:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "747:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:37:2"
            },
            "src": "705:59:2"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "812:85:2",
              "statements": [
                {
                  "expression": {
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 726,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "822:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2387",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 727,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "830:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2387",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "822:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2387",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "822:14:2"
                },
                {
                  "expression": {
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 730,
                        "name": "merkleRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "846:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 732,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "846:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 733,
                      "name": "_root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "863:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "846:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "846:22:2"
                },
                {
                  "expression": {
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 736,
                      "name": "numRoots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "878:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "889:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "878:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "878:12:2"
                }
              ]
            },
            "id": 741,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "789:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "782:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2387",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 720,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 719,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2387,
                      "src": "782:6:2"
                    },
                    "referencedDeclaration": 2387,
                    "src": "782:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2387",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "805:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 741,
                  "src": "797:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "781:30:2"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "812:0:2"
            },
            "scope": 924,
            "src": "770:127:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 758,
              "nodeType": "Block",
              "src": "950:99:2",
              "statements": [
                {
                  "expression": {
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 746,
                        "name": "merkleRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "960:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 749,
                      "indexExpression": {
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "972:10:2",
                        "subExpression": {
                          "id": 747,
                          "name": "numRoots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "974:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "960:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 750,
                      "name": "newRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 743,
                      "src": "986:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "960:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "960:33:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 754,
                        "name": "numRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "1024:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 755,
                        "name": "newRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "1034:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 753,
                      "name": "MerkleRootAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "1008:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "EmitStatement",
                  "src": "1003:39:2"
                }
              ]
            },
            "functionSelector": "3323c807",
            "id": 759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMerkleRoot",
            "nameLocation": "912:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "934:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "926:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "925:17:2"
            },
            "returnParameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "950:0:2"
            },
            "scope": 924,
            "src": "903:146:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "1194:608:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1212:25:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 776,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "1213:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 778,
                          "indexExpression": {
                            "id": 777,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "1225:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1213:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1239:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1204:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:57:2"
                },
                {
                  "assignments": [
                    784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 784,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "1279:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "1271:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 783,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1271:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 794,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 788,
                            "name": "destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "1313:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 789,
                            "name": "totalCoins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "1326:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 790,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "1338:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 791,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "1349:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 786,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1296:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1296:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1296:61:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 785,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1286:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1271:87:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 800,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 784,
                            "src": "1414:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 801,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "1420:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "baseExpression": {
                              "id": 796,
                              "name": "merkleRoots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "1377:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 798,
                            "indexExpression": {
                              "id": 797,
                              "name": "merkleIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "1389:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1377:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyProof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1333,
                          "src": "1377:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_pure$_t_bytes32_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes32_$",
                            "typeString": "function (bytes32,bytes32,bytes32[] memory) pure returns (bool)"
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1377:49:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f6f6620636f756c64206e6f742062652076657269666965642e",
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1428:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6befa95a15378f3fa320a9fc597710e04d31854374b1378d40ad4268234fd91c",
                          "typeString": "literal_string \"The proof could not be verified.\""
                        },
                        "value": "The proof could not be verified."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6befa95a15378f3fa320a9fc597710e04d31854374b1378d40ad4268234fd91c",
                          "typeString": "literal_string \"The proof could not be verified.\""
                        }
                      ],
                      "id": 795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1369:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1369:94:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:94:2"
                },
                {
                  "expression": {
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 806,
                        "name": "initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 699,
                        "src": "1473:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 808,
                      "indexExpression": {
                        "id": 807,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "1485:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1473:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1500:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1473:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:31:2"
                },
                {
                  "assignments": [
                    813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 813,
                      "mutability": "mutable",
                      "name": "coinsPerSecond",
                      "nameLocation": "1519:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 838,
                      "src": "1514:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 812,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1514:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 820,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 814,
                      "name": "totalCoins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "1536:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 815,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "1550:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 816,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "1560:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1550:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 818,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1549:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1536:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1514:56:2"
                },
                {
                  "expression": {
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 821,
                        "name": "tranches",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "1580:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tranche_$695_storage_$",
                          "typeString": "mapping(address => struct DummyMerkleVesting.Tranche storage ref)"
                        }
                      },
                      "id": 823,
                      "indexExpression": {
                        "id": 822,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "1589:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1580:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$695_storage",
                        "typeString": "struct DummyMerkleVesting.Tranche storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 825,
                          "name": "totalCoins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "1625:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 826,
                          "name": "totalCoins",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "1649:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 827,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "1673:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 828,
                          "name": "endTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "1696:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 829,
                          "name": "coinsPerSecond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "1717:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 830,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "1745:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 824,
                        "name": "Tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "1604:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Tranche_$695_storage_ptr_$",
                          "typeString": "type(struct DummyMerkleVesting.Tranche storage pointer)"
                        }
                      },
                      "id": 831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1604:160:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$695_memory_ptr",
                        "typeString": "struct DummyMerkleVesting.Tranche memory"
                      }
                    },
                    "src": "1580:184:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$695_storage",
                      "typeString": "struct DummyMerkleVesting.Tranche storage ref"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "1580:184:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 835,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "1783:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 834,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 923,
                      "src": "1774:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1774:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:21:2"
                }
              ]
            },
            "functionSelector": "f287ad04",
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1064:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "merkleIndex",
                  "nameLocation": "1080:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "1075:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "1101:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "1093:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "totalCoins",
                  "nameLocation": "1119:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "1114:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "1136:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "1131:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "1152:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "1147:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1178:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "1161:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 770,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1161:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 771,
                    "nodeType": "ArrayTypeName",
                    "src": "1161:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1074:110:2"
            },
            "returnParameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1194:0:2"
            },
            "scope": 924,
            "src": "1055:747:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 922,
              "nodeType": "Block",
              "src": "1856:921:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 845,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "1874:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 847,
                        "indexExpression": {
                          "id": 846,
                          "name": "destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 841,
                          "src": "1886:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1874:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420696e697469616c697a6520796f7572206163636f756e742066697273742e",
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4abd8331dd14b306cce990886a8c58b8be69cac04657ffd8c84a7e7c5940d2d1",
                          "typeString": "literal_string \"You must initialize your account first.\""
                        },
                        "value": "You must initialize your account first."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4abd8331dd14b306cce990886a8c58b8be69cac04657ffd8c84a7e7c5940d2d1",
                          "typeString": "literal_string \"You must initialize your account first.\""
                        }
                      ],
                      "id": 844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1866:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:76:2"
                },
                {
                  "assignments": [
                    853
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 853,
                      "mutability": "mutable",
                      "name": "tranche",
                      "nameLocation": "1968:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 922,
                      "src": "1952:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                        "typeString": "struct DummyMerkleVesting.Tranche"
                      },
                      "typeName": {
                        "id": 852,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 851,
                          "name": "Tranche",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 695,
                          "src": "1952:7:2"
                        },
                        "referencedDeclaration": 695,
                        "src": "1952:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                          "typeString": "struct DummyMerkleVesting.Tranche"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 857,
                  "initialValue": {
                    "baseExpression": {
                      "id": 854,
                      "name": "tranches",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 704,
                      "src": "1978:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Tranche_$695_storage_$",
                        "typeString": "mapping(address => struct DummyMerkleVesting.Tranche storage ref)"
                      }
                    },
                    "id": 856,
                    "indexExpression": {
                      "id": 855,
                      "name": "destination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "1987:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1978:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Tranche_$695_storage",
                      "typeString": "struct DummyMerkleVesting.Tranche storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1952:47:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 859,
                            "name": "tranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "2017:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                              "typeString": "struct DummyMerkleVesting.Tranche storage pointer"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currentCoins",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 686,
                          "src": "2017:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2041:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2017:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20636f696e73206c65667420746f207769746864726177",
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2044:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5408369ba8a5a8ab8865a5c8cf9d54818bf598d281aa43e2647b1ce4add273e",
                          "typeString": "literal_string \"No coins left to withdraw\""
                        },
                        "value": "No coins left to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5408369ba8a5a8ab8865a5c8cf9d54818bf598d281aa43e2647b1ce4add273e",
                          "typeString": "literal_string \"No coins left to withdraw\""
                        }
                      ],
                      "id": 858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2009:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:63:2"
                },
                {
                  "assignments": [
                    867
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 867,
                      "mutability": "mutable",
                      "name": "currentWithdrawal",
                      "nameLocation": "2087:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 922,
                      "src": "2082:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 866,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2082:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 869,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2107:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2082:26:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 870,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2194:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2194:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 872,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "2213:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                          "typeString": "struct DummyMerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 873,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 690,
                      "src": "2213:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2194:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 893,
                    "nodeType": "Block",
                    "src": "2301:158:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 881,
                            "name": "currentWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 867,
                            "src": "2357:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 886,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 882,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "2378:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 883,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "2378:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 884,
                                      "name": "tranche",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 853,
                                      "src": "2396:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                                        "typeString": "struct DummyMerkleVesting.Tranche storage pointer"
                                      }
                                    },
                                    "id": 885,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastWithdrawalTime",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 694,
                                    "src": "2396:26:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2378:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 887,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2377:46:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "expression": {
                                "id": 888,
                                "name": "tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 853,
                                "src": "2426:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                                  "typeString": "struct DummyMerkleVesting.Tranche storage pointer"
                                }
                              },
                              "id": 889,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "coinsPerSecond",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 692,
                              "src": "2426:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2377:71:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2357:91:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 892,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:91:2"
                      }
                    ]
                  },
                  "id": 894,
                  "nodeType": "IfStatement",
                  "src": "2190:269:2",
                  "trueBody": {
                    "id": 880,
                    "nodeType": "Block",
                    "src": "2230:65:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 875,
                            "name": "currentWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 867,
                            "src": "2244:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 876,
                              "name": "tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 853,
                              "src": "2264:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                                "typeString": "struct DummyMerkleVesting.Tranche storage pointer"
                              }
                            },
                            "id": 877,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentCoins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 686,
                            "src": "2264:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2244:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 879,
                        "nodeType": "ExpressionStatement",
                        "src": "2244:40:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 895,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "2494:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                          "typeString": "struct DummyMerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 897,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentCoins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 686,
                      "src": "2494:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 898,
                      "name": "currentWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 867,
                      "src": "2518:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2494:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "2494:41:2"
                },
                {
                  "expression": {
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 901,
                        "name": "tranche",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "2545:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                          "typeString": "struct DummyMerkleVesting.Tranche storage pointer"
                        }
                      },
                      "id": 903,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastWithdrawalTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 694,
                      "src": "2545:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 904,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2574:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2574:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2545:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 907,
                  "nodeType": "ExpressionStatement",
                  "src": "2545:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 911,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "2652:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 912,
                        "name": "currentWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 867,
                        "src": "2665:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 908,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "2637:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2387",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2336,
                      "src": "2637:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2637:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "2637:46:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 916,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "2717:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 917,
                        "name": "currentWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 867,
                        "src": "2730:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 918,
                          "name": "tranche",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 853,
                          "src": "2749:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tranche_$695_storage_ptr",
                            "typeString": "struct DummyMerkleVesting.Tranche storage pointer"
                          }
                        },
                        "id": 919,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currentCoins",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 686,
                        "src": "2749:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 915,
                      "name": "WithdrawalOccurred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 712,
                      "src": "2698:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2698:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 921,
                  "nodeType": "EmitStatement",
                  "src": "2693:77:2"
                }
              ]
            },
            "id": 923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1817:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "1834:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 923,
                  "src": "1826:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1825:21:2"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1856:0:2"
            },
            "scope": 924,
            "src": "1808:969:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 925,
        "src": "129:2651:2",
        "usedErrors": []
      }
    ],
    "src": "42:2738:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610a01380380610a0183398101604081905261002f91610086565b600280546001600160a01b0319166001600160a01b039390931692909217909155600160008181526020527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d9190915580556100c0565b6000806040838503121561009957600080fd5b82516001600160a01b03811681146100b057600080fd5b6020939093015192949293505050565b610932806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637cda64971161005b5780637cda64971461014e578063cbca47db14610157578063f287ad041461018a578063fc0c546a1461019d57600080fd5b806318369a2a1461008d5780633323c807146100a95780633bb0170d146100be57806371c5ecb11461012e575b600080fd5b61009660035481565b6040519081526020015b60405180910390f35b6100bc6100b7366004610699565b6101c8565b005b6101016100cc3660046106ce565b600560208190526000918252604090912080546001820154600283015460038401546004850154949095015492949193909286565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016100a0565b61009661013c366004610699565b60006020819052908152604090205481565b61009660015481565b61017a6101653660046106ce565b60046020526000908152604090205460ff1681565b60405190151581526020016100a0565b6100bc610198366004610706565b610232565b6002546101b0906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b806000806001600081546101db90610812565b9190508190558152602001908152602001600020819055506001547f14ae70b7538cb704d414f634689a12a1b4ac99bcce8305042069d26ee7fed3f38260405161022791815260200190565b60405180910390a250565b6001600160a01b03851660009081526004602052604090205460ff16156102965760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff19606087901b16602082015260348101859052605481018490526074810183905260009060940160408051601f19818403018152828252805160209182012060008b81529182905291902054632769cd1f60e21b835290925073__MerkleLib_____________________________91639da7347c9161032b918590879060040161082d565b602060405180830381865af4158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c9190610882565b6103b85760405162461bcd60e51b815260206004820181905260248201527f5468652070726f6f6620636f756c64206e6f742062652076657269666965642e604482015260640161028d565b6001600160a01b0386166000908152600460205260408120805460ff191660011790556103e585856108a4565b6103ef90876108bb565b90506040518060c001604052808781526020018781526020018681526020018581526020018281526020018681525060056000896001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015590505061048b87610495565b5050505050505050565b6001600160a01b03811660009081526004602052604090205460ff1661050d5760405162461bcd60e51b815260206004820152602760248201527f596f75206d75737420696e697469616c697a6520796f7572206163636f756e74604482015266103334b939ba1760c91b606482015260840161028d565b6001600160a01b038116600090815260056020526040902060018101546105765760405162461bcd60e51b815260206004820152601960248201527f4e6f20636f696e73206c65667420746f20776974686472617700000000000000604482015260640161028d565b60008160030154421061058e575060018101546105af565b600482015460058301546105a290426108a4565b6105ac91906108dd565b90505b808260010160008282546105c391906108a4565b909155505042600583015560025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610621573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106459190610882565b506001820154604080516001600160a01b03861681526020810184905280820192909252517f840b2e72ac87c36be7e2e3f300d63bfe13603652df8705edbe38c230313531689181900360600190a1505050565b6000602082840312156106ab57600080fd5b5035919050565b80356001600160a01b03811681146106c957600080fd5b919050565b6000602082840312156106e057600080fd5b6106e9826106b2565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c0878903121561071f57600080fd5b8635955060206107308189016106b2565b955060408801359450606088013593506080880135925060a088013567ffffffffffffffff8082111561076257600080fd5b818a0191508a601f83011261077657600080fd5b813581811115610788576107886106f0565b8060051b604051601f19603f830116810181811085821117156107ad576107ad6106f0565b60405291825284820192508381018501918d8311156107cb57600080fd5b938501935b828510156107e9578435845293850193928501926107d0565b8096505050505050509295509295509295565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610826576108266107fc565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b8181101561087457845183529383019391830191600101610858565b509098975050505050505050565b60006020828403121561089457600080fd5b815180151581146106e957600080fd5b6000828210156108b6576108b66107fc565b500390565b6000826108d857634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156108f7576108f76107fc565b50029056fea2646970667358221220b1241213253f9f89666e8c983b2a4f12671516c021d108a37afe413ef7be106b64736f6c634300080c0033",
  "bytecodeSha1": "a2a710487a4a7f66983d79db26ec9834bdb80cd3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "DummyMerkleVesting",
  "coverageMap": {
    "branches": {
      "2": {
        "DummyMerkleVesting.initialize": {
          "15": [
            1212,
            1237,
            true
          ],
          "16": [
            1377,
            1426,
            true
          ]
        },
        "DummyMerkleVesting.withdraw": {
          "17": [
            1874,
            1898,
            true
          ],
          "18": [
            2194,
            2228,
            false
          ]
        }
      },
      "4": {},
      "7": {}
    },
    "statements": {
      "2": {
        "DummyMerkleVesting.addMerkleRoot": {
          "0": [
            960,
            993
          ],
          "1": [
            1003,
            1042
          ]
        },
        "DummyMerkleVesting.initialize": {
          "2": [
            1204,
            1261
          ],
          "3": [
            1369,
            1463
          ],
          "4": [
            1473,
            1504
          ],
          "5": [
            1580,
            1764
          ],
          "6": [
            1774,
            1795
          ]
        },
        "DummyMerkleVesting.withdraw": {
          "7": [
            1866,
            1942
          ],
          "8": [
            2009,
            2072
          ],
          "9": [
            2244,
            2284
          ],
          "10": [
            2357,
            2448
          ],
          "11": [
            2494,
            2535
          ],
          "12": [
            2545,
            2589
          ],
          "13": [
            2637,
            2683
          ],
          "14": [
            2693,
            2770
          ]
        }
      },
      "4": {},
      "7": {}
    }
  },
  "dependencies": [
    "IERC20",
    "MerkleLib"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c80637cda64971161005b5780637cda64971461014e578063cbca47db14610157578063f287ad041461018a578063fc0c546a1461019d57600080fd5b806318369a2a1461008d5780633323c807146100a95780633bb0170d146100be57806371c5ecb11461012e575b600080fd5b61009660035481565b6040519081526020015b60405180910390f35b6100bc6100b7366004610699565b6101c8565b005b6101016100cc3660046106ce565b600560208190526000918252604090912080546001820154600283015460038401546004850154949095015492949193909286565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016100a0565b61009661013c366004610699565b60006020819052908152604090205481565b61009660015481565b61017a6101653660046106ce565b60046020526000908152604090205460ff1681565b60405190151581526020016100a0565b6100bc610198366004610706565b610232565b6002546101b0906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b806000806001600081546101db90610812565b9190508190558152602001908152602001600020819055506001547f14ae70b7538cb704d414f634689a12a1b4ac99bcce8305042069d26ee7fed3f38260405161022791815260200190565b60405180910390a250565b6001600160a01b03851660009081526004602052604090205460ff16156102965760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff19606087901b16602082015260348101859052605481018490526074810183905260009060940160408051601f19818403018152828252805160209182012060008b81529182905291902054632769cd1f60e21b835290925073__$61dd25696c02d5bd2863c8d2c1a2324a87$__91639da7347c9161032b918590879060040161082d565b602060405180830381865af4158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c9190610882565b6103b85760405162461bcd60e51b815260206004820181905260248201527f5468652070726f6f6620636f756c64206e6f742062652076657269666965642e604482015260640161028d565b6001600160a01b0386166000908152600460205260408120805460ff191660011790556103e585856108a4565b6103ef90876108bb565b90506040518060c001604052808781526020018781526020018681526020018581526020018281526020018681525060056000896001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015590505061048b87610495565b5050505050505050565b6001600160a01b03811660009081526004602052604090205460ff1661050d5760405162461bcd60e51b815260206004820152602760248201527f596f75206d75737420696e697469616c697a6520796f7572206163636f756e74604482015266103334b939ba1760c91b606482015260840161028d565b6001600160a01b038116600090815260056020526040902060018101546105765760405162461bcd60e51b815260206004820152601960248201527f4e6f20636f696e73206c65667420746f20776974686472617700000000000000604482015260640161028d565b60008160030154421061058e575060018101546105af565b600482015460058301546105a290426108a4565b6105ac91906108dd565b90505b808260010160008282546105c391906108a4565b909155505042600583015560025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610621573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106459190610882565b506001820154604080516001600160a01b03861681526020810184905280820192909252517f840b2e72ac87c36be7e2e3f300d63bfe13603652df8705edbe38c230313531689181900360600190a1505050565b6000602082840312156106ab57600080fd5b5035919050565b80356001600160a01b03811681146106c957600080fd5b919050565b6000602082840312156106e057600080fd5b6106e9826106b2565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c0878903121561071f57600080fd5b8635955060206107308189016106b2565b955060408801359450606088013593506080880135925060a088013567ffffffffffffffff8082111561076257600080fd5b818a0191508a601f83011261077657600080fd5b813581811115610788576107886106f0565b8060051b604051601f19603f830116810181811085821117156107ad576107ad6106f0565b60405291825284820192508381018501918d8311156107cb57600080fd5b938501935b828510156107e9578435845293850193928501926107d0565b8096505050505050509295509295509295565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610826576108266107fc565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b8181101561087457845183529383019391830191600101610858565b509098975050505050505050565b60006020828403121561089457600080fd5b815180151581146106e957600080fd5b6000828210156108b6576108b66107fc565b500390565b6000826108d857634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156108f7576108f76107fc565b50029056fea2646970667358221220b1241213253f9f89666e8c983b2a4f12671516c021d108a37afe413ef7be106b64736f6c634300080c0033",
  "deployedSourceMap": "129:2651:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;299:26;;;;;;;;;160:25:8;;;148:2;133:18;299:26:2;;;;;;;;903:146;;;;;;:::i;:::-;;:::i;:::-;;570:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1037:25:8;;;1093:2;1078:18;;1071:34;;;;1121:18;;;1114:34;;;;1179:2;1164:18;;1157:34;1222:3;1207:19;;1200:35;1266:3;1251:19;;1244:35;1024:3;1009:19;570:44:2;750:535:8;197:44:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;247:20;;;;;;520:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1822:14:8;;1815:22;1797:41;;1785:2;1770:18;520:44:2;1657:187:8;1055:747:2;;;;;;:::i;:::-;;:::i;273:19::-;;;;;-1:-1:-1;;;;;273:19:2;;;;;;-1:-1:-1;;;;;3629:32:8;;;3611:51;;3599:2;3584:18;273:19:2;3450:218:8;903:146:2;986:7;960:11;:23;974:8;;972:10;;;;;:::i;:::-;;;;;;;960:23;;;;;;;;;;;:33;;;;1024:8;;1008:34;1034:7;1008:34;;;;160:25:8;;148:2;133:18;;14:177;1008:34:2;;;;;;;;903:146;:::o;1055:747::-;-1:-1:-1;;;;;1213:24:2;;;;;;:11;:24;;;;;;;;1212:25;1204:57;;;;-1:-1:-1;;;1204:57:2;;4147:2:8;1204:57:2;;;4129:21:8;4186:2;4166:18;;;4159:30;-1:-1:-1;;;4205:18:8;;;4198:49;4264:18;;1204:57:2;;;;;;;;;1296:61;;-1:-1:-1;;4526:2:8;4522:15;;;4518:53;1296:61:2;;;4506:66:8;4588:12;;;4581:28;;;4625:12;;;4618:28;;;4662:12;;;4655:28;;;1271:12:2;;4699:13:8;;1296:61:2;;;-1:-1:-1;;1296:61:2;;;;;;;;;1286:72;;1296:61;1286:72;;;;1377:11;:24;;;;;;;;;;;-1:-1:-1;;;1377:49:2;;1286:72;;-1:-1:-1;1377:36:2;;;;:49;;1286:72;;1420:5;;1377:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1369:94;;;;-1:-1:-1;;;1369:94:2;;5995:2:8;1369:94:2;;;5977:21:8;;;6014:18;;;6007:30;6073:34;6053:18;;;6046:62;6125:18;;1369:94:2;5793:356:8;1369:94:2;-1:-1:-1;;;;;1473:24:2;;;;;;:11;:24;;;;;:31;;-1:-1:-1;;1473:31:2;1500:4;1473:31;;;1550:19;1560:9;1550:7;:19;:::i;:::-;1536:34;;:10;:34;:::i;:::-;1514:56;;1604:160;;;;;;;;1625:10;1604:160;;;;1649:10;1604:160;;;;1673:9;1604:160;;;;1696:7;1604:160;;;;1717:14;1604:160;;;;1745:9;1604:160;;;1580:8;:21;1589:11;-1:-1:-1;;;;;1580:21:2;-1:-1:-1;;;;;1580:21:2;;;;;;;;;;;;:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:21;1783:11;1774:8;:21::i;:::-;1194:608;;1055:747;;;;;;:::o;1808:969::-;-1:-1:-1;;;;;1874:24:2;;;;;;:11;:24;;;;;;;;1866:76;;;;-1:-1:-1;;;1866:76:2;;6708:2:8;1866:76:2;;;6690:21:8;6747:2;6727:18;;;6720:30;6786:34;6766:18;;;6759:62;-1:-1:-1;;;6837:18:8;;;6830:37;6884:19;;1866:76:2;6506:403:8;1866:76:2;-1:-1:-1;;;;;1978:21:2;;1952:23;1978:21;;;:8;:21;;;;;2017:20;;;;2009:63;;;;-1:-1:-1;;;2009:63:2;;7116:2:8;2009:63:2;;;7098:21:8;7155:2;7135:18;;;7128:30;7194:27;7174:18;;;7167:55;7239:18;;2009:63:2;6914:349:8;2009:63:2;2082:22;2213:7;:15;;;2194;:34;2190:269;;-1:-1:-1;2264:20:2;;;;2190:269;;;2426:22;;;;2396:26;;;;2378:44;;:15;:44;:::i;:::-;2377:71;;;;:::i;:::-;2357:91;;2190:269;2518:17;2494:7;:20;;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;2574:15:2;2545:26;;;:44;2637:5;;:46;;-1:-1:-1;;;2637:46:2;;-1:-1:-1;;;;;7633:32:8;;;2637:46:2;;;7615:51:8;7682:18;;;7675:34;;;2637:5:2;;;;:14;;7588:18:8;;2637:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2749:20:2;;;;2698:72;;;-1:-1:-1;;;;;7940:32:8;;7922:51;;8004:2;7989:18;;7982:34;;;8032:18;;;8025:34;;;;2698:72:2;;;;;;7910:2:8;2698:72:2;;;1856:921;;1808:969;:::o;196:180:8:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:8;;196:180;-1:-1:-1;196:180:8:o;381:173::-;449:20;;-1:-1:-1;;;;;498:31:8;;488:42;;478:70;;544:1;541;534:12;478:70;381:173;;;:::o;559:186::-;618:6;671:2;659:9;650:7;646:23;642:32;639:52;;;687:1;684;677:12;639:52;710:29;729:9;710:29;:::i;:::-;700:39;559:186;-1:-1:-1;;;559:186:8:o;1849:127::-;1910:10;1905:3;1901:20;1898:1;1891:31;1941:4;1938:1;1931:15;1965:4;1962:1;1955:15;1981:1464;2110:6;2118;2126;2134;2142;2150;2203:3;2191:9;2182:7;2178:23;2174:33;2171:53;;;2220:1;2217;2210:12;2171:53;2256:9;2243:23;2233:33;;2285:2;2306:38;2340:2;2329:9;2325:18;2306:38;:::i;:::-;2296:48;;2391:2;2380:9;2376:18;2363:32;2353:42;;2442:2;2431:9;2427:18;2414:32;2404:42;;2493:3;2482:9;2478:19;2465:33;2455:43;;2549:3;2538:9;2534:19;2521:33;2573:18;2614:2;2606:6;2603:14;2600:34;;;2630:1;2627;2620:12;2600:34;2668:6;2657:9;2653:22;2643:32;;2713:7;2706:4;2702:2;2698:13;2694:27;2684:55;;2735:1;2732;2725:12;2684:55;2771:2;2758:16;2793:2;2789;2786:10;2783:36;;;2799:18;;:::i;:::-;2845:2;2842:1;2838:10;2877:2;2871:9;2940:2;2936:7;2931:2;2927;2923:11;2919:25;2911:6;2907:38;2995:6;2983:10;2980:22;2975:2;2963:10;2960:18;2957:46;2954:72;;;3006:18;;:::i;:::-;3042:2;3035:22;3092:18;;;3126:15;;;;-1:-1:-1;3168:11:8;;;3164:20;;;3196:19;;;3193:39;;;3228:1;3225;3218:12;3193:39;3252:11;;;;3272:142;3288:6;3283:3;3280:15;3272:142;;;3354:17;;3342:30;;3305:12;;;;3392;;;;3272:142;;;3433:6;3423:16;;;;;;;;1981:1464;;;;;;;;:::o;3673:127::-;3734:10;3729:3;3725:20;3722:1;3715:31;3765:4;3762:1;3755:15;3789:4;3786:1;3779:15;3805:135;3844:3;-1:-1:-1;;3865:17:8;;3862:43;;;3885:18;;:::i;:::-;-1:-1:-1;3932:1:8;3921:13;;3805:135::o;4723:783::-;4929:4;4977:2;4966:9;4962:18;5007:6;4996:9;4989:25;5033:2;5071:6;5066:2;5055:9;5051:18;5044:34;5114:2;5109;5098:9;5094:18;5087:30;5137:6;5172;5166:13;5203:6;5195;5188:22;5241:3;5230:9;5226:19;5219:26;;5280:2;5272:6;5268:15;5254:29;;5301:1;5311:169;5325:6;5322:1;5319:13;5311:169;;;5386:13;;5374:26;;5455:15;;;;5420:12;;;;5347:1;5340:9;5311:169;;;-1:-1:-1;5497:3:8;;4723:783;-1:-1:-1;;;;;;;;4723:783:8:o;5511:277::-;5578:6;5631:2;5619:9;5610:7;5606:23;5602:32;5599:52;;;5647:1;5644;5637:12;5599:52;5679:9;5673:16;5732:5;5725:13;5718:21;5711:5;5708:32;5698:60;;5754:1;5751;5744:12;6154:125;6194:4;6222:1;6219;6216:8;6213:34;;;6227:18;;:::i;:::-;-1:-1:-1;6264:9:8;;6154:125::o;6284:217::-;6324:1;6350;6340:132;;6394:10;6389:3;6385:20;6382:1;6375:31;6429:4;6426:1;6419:15;6457:4;6454:1;6447:15;6340:132;-1:-1:-1;6486:9:8;;6284:217::o;7268:168::-;7308:7;7374:1;7370;7366:6;7362:14;7359:1;7356:21;7351:1;7344:9;7337:17;7333:45;7330:71;;;7381:18;;:::i;:::-;-1:-1:-1;7421:9:8;;7268:168::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    129,
    2780
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CDA6497 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7CDA6497 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xCBCA47DB EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xF287AD04 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18369A2A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3323C807 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x3BB0170D EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x71C5ECB1 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0xB7 CALLDATASIZE PUSH1 0x4 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x1C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP5 SWAP1 SWAP6 ADD SLOAD SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0xA0 JUMP JUMPDEST PUSH2 0x96 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x96 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST PUSH2 0xBC PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1B0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x812 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH32 0x14AE70B7538CB704D414F634689A12A1B4AC99BCCE8305042069D26EE7FED3F3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x74 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x94 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE SWAP2 DUP3 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD PUSH4 0x2769CD1F PUSH1 0xE2 SHL DUP4 MSTORE SWAP1 SWAP3 POP PUSH20 0x0 SWAP2 PUSH4 0x9DA7347C SWAP2 PUSH2 0x32B SWAP2 DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x82D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x348 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070726F6F6620636F756C64206E6F742062652076657269666965642E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x3E5 DUP6 DUP6 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x3EF SWAP1 DUP8 PUSH2 0x8BB JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP PUSH2 0x48B DUP8 PUSH2 0x495 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D75737420696E697469616C697A6520796F7572206163636F756E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x103334B939BA17 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20636F696E73206C65667420746F20776974686472617700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x58E JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH2 0x5A2 SWAP1 TIMESTAMP PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x621 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0x840B2E72AC87C36BE7E2E3F300D63BFE13603652DF8705EDBE38C23031353168 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E9 DUP3 PUSH2 0x6B2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 PUSH2 0x730 DUP2 DUP10 ADD PUSH2 0x6B2 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x788 JUMPI PUSH2 0x788 PUSH2 0x6F0 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP14 DUP4 GT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x7E9 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x7D0 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x826 JUMPI PUSH2 0x826 PUSH2 0x7FC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 DUP6 DUP2 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x874 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x858 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x8B6 JUMPI PUSH2 0x8B6 PUSH2 0x7FC JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x8F7 JUMPI PUSH2 0x8F7 PUSH2 0x7FC JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0x24 SLT SGT 0x25 EXTCODEHASH SWAP16 DUP10 PUSH7 0x6E8C983B2A4F12 PUSH8 0x1516C021D108A37A INVALID COINBASE RETURNDATACOPY 0xF7 0xBE LT PUSH12 0x64736F6C634300080C003300 ",
  "pcMap": {
    "0": {
      "offset": [
        129,
        2780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7CDA6497"
    },
    "38": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7CDA6497"
    },
    "49": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14E"
    },
    "53": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xCBCA47DB"
    },
    "60": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x157"
    },
    "64": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF287AD04"
    },
    "71": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A"
    },
    "75": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFC0C546A"
    },
    "82": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D"
    },
    "86": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "90": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "REVERT",
      "path": "2"
    },
    "91": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "93": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x18369A2A"
    },
    "98": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "EQ",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "104": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3323C807"
    },
    "109": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "EQ",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9"
    },
    "113": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3BB0170D"
    },
    "120": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE"
    },
    "124": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x71C5ECB1"
    },
    "131": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E"
    },
    "135": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "DUP1",
      "path": "2"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        129,
        2780
      ],
      "op": "REVERT",
      "path": "2"
    },
    "141": {
      "offset": [
        299,
        325
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "142": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x96"
    },
    "145": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "147": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "DUP2",
      "path": "2"
    },
    "149": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "JUMP",
      "path": "2"
    },
    "150": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "153": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "154": {
      "op": "SWAP1"
    },
    "155": {
      "op": "DUP2"
    },
    "156": {
      "op": "MSTORE"
    },
    "157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "159": {
      "op": "ADD"
    },
    "160": {
      "offset": [
        299,
        325
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "163": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "164": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "DUP1",
      "path": "2"
    },
    "165": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "166": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "SUB",
      "path": "2"
    },
    "167": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        299,
        325
      ],
      "op": "RETURN",
      "path": "2"
    },
    "169": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "170": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC"
    },
    "173": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB7"
    },
    "176": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "177": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "179": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x699"
    },
    "182": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        903,
        1049
      ],
      "op": "JUMP",
      "path": "2"
    },
    "183": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "184": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C8"
    },
    "187": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        903,
        1049
      ],
      "op": "JUMP",
      "path": "2"
    },
    "188": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "189": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "STOP",
      "path": "2"
    },
    "190": {
      "offset": [
        570,
        614
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "191": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "194": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "197": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "198": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "200": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CE"
    },
    "203": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        570,
        614
      ],
      "op": "JUMP",
      "path": "2"
    },
    "204": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "205": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "207": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "209": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "DUP2",
      "path": "2"
    },
    "210": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "211": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "212": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "214": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "215": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "DUP3",
      "path": "2"
    },
    "216": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "217": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "219": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "220": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "221": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "222": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "DUP1",
      "path": "2"
    },
    "223": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "224": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "226": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "DUP3",
      "path": "2"
    },
    "227": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "ADD",
      "path": "2"
    },
    "228": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "229": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "231": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "DUP4",
      "path": "2"
    },
    "232": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "ADD",
      "path": "2"
    },
    "233": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "234": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "236": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "DUP5",
      "path": "2"
    },
    "237": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "ADD",
      "path": "2"
    },
    "238": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "239": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "241": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "DUP6",
      "path": "2"
    },
    "242": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "ADD",
      "path": "2"
    },
    "243": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "244": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "245": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "246": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "247": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "ADD",
      "path": "2"
    },
    "248": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "249": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "250": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "251": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "252": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "253": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "254": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "255": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "DUP7",
      "path": "2"
    },
    "256": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "JUMP",
      "path": "2"
    },
    "257": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "258": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "260": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "DUP1",
      "path": "2"
    },
    "261": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        570,
        614
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "262": {
      "op": "SWAP7"
    },
    "263": {
      "op": "DUP8"
    },
    "264": {
      "op": "MSTORE"
    },
    "265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "267": {
      "op": "DUP8"
    },
    "268": {
      "op": "ADD"
    },
    "269": {
      "op": "SWAP6"
    },
    "270": {
      "op": "SWAP1"
    },
    "271": {
      "op": "SWAP6"
    },
    "272": {
      "op": "MSTORE"
    },
    "273": {
      "op": "SWAP4"
    },
    "274": {
      "op": "DUP6"
    },
    "275": {
      "op": "ADD"
    },
    "276": {
      "op": "SWAP3"
    },
    "277": {
      "op": "SWAP1"
    },
    "278": {
      "op": "SWAP3"
    },
    "279": {
      "op": "MSTORE"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "282": {
      "op": "DUP5"
    },
    "283": {
      "op": "ADD"
    },
    "284": {
      "op": "MSTORE"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "287": {
      "op": "DUP4"
    },
    "288": {
      "op": "ADD"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "292": {
      "op": "DUP3"
    },
    "293": {
      "op": "ADD"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "297": {
      "op": "ADD"
    },
    "298": {
      "offset": [
        570,
        614
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "301": {
      "op": "JUMP"
    },
    "302": {
      "offset": [
        197,
        241
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "303": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x96"
    },
    "306": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C"
    },
    "309": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "310": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "312": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x699"
    },
    "315": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        197,
        241
      ],
      "op": "JUMP",
      "path": "2"
    },
    "316": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "317": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "319": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "321": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "DUP2",
      "path": "2"
    },
    "322": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "323": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "324": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "325": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "DUP2",
      "path": "2"
    },
    "326": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "327": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "329": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "330": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "331": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "332": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "DUP2",
      "path": "2"
    },
    "333": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        197,
        241
      ],
      "op": "JUMP",
      "path": "2"
    },
    "334": {
      "offset": [
        247,
        267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "335": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        247,
        267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x96"
    },
    "338": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        247,
        267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "340": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        247,
        267
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "341": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        247,
        267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "342": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        247,
        267
      ],
      "op": "JUMP",
      "path": "2"
    },
    "343": {
      "offset": [
        520,
        564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "344": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "347": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x165"
    },
    "350": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "351": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "353": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CE"
    },
    "356": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        520,
        564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "357": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "358": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "360": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "362": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "363": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "365": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "366": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "367": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "368": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "370": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "371": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "372": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "373": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "375": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "AND",
      "path": "2"
    },
    "376": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "377": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "378": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "379": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "381": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        520,
        564
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "382": {
      "op": "SWAP1"
    },
    "383": {
      "op": "ISZERO"
    },
    "384": {
      "op": "ISZERO"
    },
    "385": {
      "op": "DUP2"
    },
    "386": {
      "op": "MSTORE"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "389": {
      "op": "ADD"
    },
    "390": {
      "offset": [
        520,
        564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "393": {
      "op": "JUMP"
    },
    "394": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "395": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC"
    },
    "398": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x198"
    },
    "401": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "402": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "404": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x706"
    },
    "407": {
      "fn": "DummyMerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1055,
        1802
      ],
      "op": "JUMP",
      "path": "2"
    },
    "408": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "409": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x232"
    },
    "412": {
      "fn": "DummyMerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1055,
        1802
      ],
      "op": "JUMP",
      "path": "2"
    },
    "413": {
      "offset": [
        273,
        292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "414": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        273,
        292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "416": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        273,
        292
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "417": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        273,
        292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B0"
    },
    "420": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        273,
        292
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "427": {
      "op": "SHL"
    },
    "428": {
      "op": "SUB"
    },
    "429": {
      "offset": [
        273,
        292
      ],
      "op": "AND",
      "path": "2"
    },
    "430": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        273,
        292
      ],
      "op": "DUP2",
      "path": "2"
    },
    "431": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        273,
        292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "432": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        273,
        292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "433": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        273,
        292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "435": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        273,
        292
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "442": {
      "op": "SHL"
    },
    "443": {
      "op": "SUB"
    },
    "444": {
      "op": "SWAP1"
    },
    "445": {
      "op": "SWAP2"
    },
    "446": {
      "op": "AND"
    },
    "447": {
      "op": "DUP2"
    },
    "448": {
      "op": "MSTORE"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "451": {
      "op": "ADD"
    },
    "452": {
      "offset": [
        273,
        292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0"
    },
    "455": {
      "op": "JUMP"
    },
    "456": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "457": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        986,
        993
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 0
    },
    "458": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        971
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "460": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "DUP1",
      "path": "2"
    },
    "461": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        974,
        982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "463": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        974,
        982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "465": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "466": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "467": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB"
    },
    "470": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "471": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x812"
    },
    "474": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "jump": "i",
      "offset": [
        972,
        982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "475": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "476": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "477": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "478": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "POP",
      "path": "2"
    },
    "479": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "480": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "481": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        972,
        982
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "482": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "DUP2",
      "path": "2"
    },
    "483": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "484": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "486": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "ADD",
      "path": "2"
    },
    "487": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "488": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "DUP2",
      "path": "2"
    },
    "489": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "490": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "492": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "ADD",
      "path": "2"
    },
    "493": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "495": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        983
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "496": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        993
      ],
      "op": "DUP2",
      "path": "2"
    },
    "497": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "498": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        993
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "499": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        960,
        993
      ],
      "op": "POP",
      "path": "2"
    },
    "500": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1024,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x1"
    },
    "502": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1024,
        1032
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "503": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x14AE70B7538CB704D414F634689A12A1B4AC99BCCE8305042069D26EE7FED3F3"
    },
    "536": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1034,
        1041
      ],
      "op": "DUP3",
      "path": "2"
    },
    "537": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "539": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "540": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227"
    },
    "543": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "544": {
      "op": "DUP2"
    },
    "545": {
      "op": "MSTORE"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "548": {
      "op": "ADD"
    },
    "549": {
      "op": "SWAP1"
    },
    "550": {
      "op": "JUMP"
    },
    "551": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "552": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "554": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "555": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "DUP1",
      "path": "2"
    },
    "556": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "557": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "SUB",
      "path": "2"
    },
    "558": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "559": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        1008,
        1042
      ],
      "op": "LOG2",
      "path": "2"
    },
    "560": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "offset": [
        903,
        1049
      ],
      "op": "POP",
      "path": "2"
    },
    "561": {
      "fn": "DummyMerkleVesting.addMerkleRoot",
      "jump": "o",
      "offset": [
        903,
        1049
      ],
      "op": "JUMP",
      "path": "2"
    },
    "562": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "569": {
      "op": "SHL"
    },
    "570": {
      "op": "SUB"
    },
    "571": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 2
    },
    "572": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "AND",
      "path": "2"
    },
    "573": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "575": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "576": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "DUP2",
      "path": "2"
    },
    "577": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "578": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "580": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "582": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "583": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "585": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "586": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "587": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "588": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "590": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1213,
        1237
      ],
      "op": "AND",
      "path": "2"
    },
    "591": {
      "branch": 15,
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1212,
        1237
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "592": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x296"
    },
    "595": {
      "branch": 15,
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "596": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "598": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "605": {
      "op": "SHL"
    },
    "606": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "DUP2",
      "path": "2"
    },
    "607": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "610": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "612": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "DUP3",
      "path": "2"
    },
    "613": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "ADD",
      "path": "2"
    },
    "614": {
      "op": "MSTORE"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "619": {
      "op": "DUP3"
    },
    "620": {
      "op": "ADD"
    },
    "621": {
      "op": "MSTORE"
    },
    "622": {
      "op": "PUSH19",
      "value": "0x105B1C9958591E481A5B9A5D1A585B1A5E9959"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "644": {
      "op": "SHL"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "647": {
      "op": "DUP3"
    },
    "648": {
      "op": "ADD"
    },
    "649": {
      "op": "MSTORE"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "652": {
      "op": "ADD"
    },
    "653": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "654": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "656": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "657": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "DUP1",
      "path": "2"
    },
    "658": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "659": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "SUB",
      "path": "2"
    },
    "660": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "661": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "662": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1204,
        1261
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "663": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "665": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "666": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "679": {
      "op": "NOT"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "682": {
      "op": "DUP8"
    },
    "683": {
      "op": "SWAP1"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "op": "AND"
    },
    "686": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "688": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "DUP3",
      "path": "2"
    },
    "689": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "ADD",
      "path": "2"
    },
    "690": {
      "op": "MSTORE"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "693": {
      "op": "DUP2"
    },
    "694": {
      "op": "ADD"
    },
    "695": {
      "op": "DUP6"
    },
    "696": {
      "op": "SWAP1"
    },
    "697": {
      "op": "MSTORE"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "700": {
      "op": "DUP2"
    },
    "701": {
      "op": "ADD"
    },
    "702": {
      "op": "DUP5"
    },
    "703": {
      "op": "SWAP1"
    },
    "704": {
      "op": "MSTORE"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "707": {
      "op": "DUP2"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "op": "DUP4"
    },
    "710": {
      "op": "SWAP1"
    },
    "711": {
      "op": "MSTORE"
    },
    "712": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1271,
        1283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "714": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1271,
        1283
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "717": {
      "op": "ADD"
    },
    "718": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "720": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "DUP1",
      "path": "2"
    },
    "721": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "724": {
      "op": "NOT"
    },
    "725": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "726": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "DUP5",
      "path": "2"
    },
    "727": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "SUB",
      "path": "2"
    },
    "728": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "ADD",
      "path": "2"
    },
    "729": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "730": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "731": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "DUP3",
      "path": "2"
    },
    "732": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "DUP3",
      "path": "2"
    },
    "733": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "734": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1286,
        1358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "735": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1286,
        1358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "736": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1296,
        1357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "738": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1286,
        1358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "739": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1286,
        1358
      ],
      "op": "DUP3",
      "path": "2"
    },
    "740": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1286,
        1358
      ],
      "op": "ADD",
      "path": "2"
    },
    "741": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1286,
        1358
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "742": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1388
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x0"
    },
    "744": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "DUP12",
      "path": "2"
    },
    "745": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "DUP2",
      "path": "2"
    },
    "746": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "747": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "748": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "DUP3",
      "path": "2"
    },
    "749": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "750": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "751": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "752": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "753": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "754": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1401
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "755": {
      "op": "PUSH4",
      "value": "0x2769CD1F"
    },
    "760": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "762": {
      "op": "SHL"
    },
    "763": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP4",
      "path": "2"
    },
    "764": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "765": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1286,
        1358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "766": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1286,
        1358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1413
      ],
      "op": "PUSH20",
      "path": "2",
      "value": "0x0"
    },
    "789": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1413
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "790": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1413
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9DA7347C"
    },
    "795": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1413
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "796": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B"
    },
    "799": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "800": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1286,
        1358
      ],
      "op": "DUP6",
      "path": "2"
    },
    "801": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1286,
        1358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "802": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1420,
        1425
      ],
      "op": "DUP8",
      "path": "2"
    },
    "803": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1420,
        1425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "804": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "806": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "ADD",
      "path": "2"
    },
    "807": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82D"
    },
    "810": {
      "fn": "DummyMerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1377,
        1426
      ],
      "op": "JUMP",
      "path": "2"
    },
    "811": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "812": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "814": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "816": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "817": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "818": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP4",
      "path": "2"
    },
    "819": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "SUB",
      "path": "2"
    },
    "820": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP2",
      "path": "2"
    },
    "821": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP7",
      "path": "2"
    },
    "822": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "GAS",
      "path": "2"
    },
    "823": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DELEGATECALL",
      "path": "2"
    },
    "824": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "825": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "826": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "827": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x348"
    },
    "830": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "831": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "832": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "834": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "835": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "836": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "837": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "839": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "REVERT",
      "path": "2"
    },
    "840": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "841": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "POP",
      "path": "2"
    },
    "842": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "POP",
      "path": "2"
    },
    "843": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "POP",
      "path": "2"
    },
    "844": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "POP",
      "path": "2"
    },
    "845": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "847": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "848": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "849": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "851": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "NOT",
      "path": "2"
    },
    "852": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "854": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP3",
      "path": "2"
    },
    "855": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "ADD",
      "path": "2"
    },
    "856": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "AND",
      "path": "2"
    },
    "857": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP3",
      "path": "2"
    },
    "858": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "ADD",
      "path": "2"
    },
    "859": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP1",
      "path": "2"
    },
    "860": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "862": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "863": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "POP",
      "path": "2"
    },
    "864": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "DUP2",
      "path": "2"
    },
    "865": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "ADD",
      "path": "2"
    },
    "866": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "867": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36C"
    },
    "870": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "871": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "872": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x882"
    },
    "875": {
      "fn": "DummyMerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1377,
        1426
      ],
      "op": "JUMP",
      "path": "2"
    },
    "876": {
      "branch": 16,
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1377,
        1426
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "877": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B8"
    },
    "880": {
      "branch": 16,
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "881": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "883": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "890": {
      "op": "SHL"
    },
    "891": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "892": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "895": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "897": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "DUP3",
      "path": "2"
    },
    "898": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "ADD",
      "path": "2"
    },
    "899": {
      "op": "DUP2"
    },
    "900": {
      "op": "SWAP1"
    },
    "901": {
      "op": "MSTORE"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "904": {
      "op": "DUP3"
    },
    "905": {
      "op": "ADD"
    },
    "906": {
      "op": "MSTORE"
    },
    "907": {
      "op": "PUSH32",
      "value": "0x5468652070726F6F6620636F756C64206E6F742062652076657269666965642E"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "942": {
      "op": "DUP3"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "947": {
      "op": "ADD"
    },
    "948": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28D"
    },
    "951": {
      "op": "JUMP"
    },
    "952": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1369,
        1463
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "op": "SUB"
    },
    "961": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 4
    },
    "962": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "AND",
      "path": "2"
    },
    "963": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "965": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "966": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "DUP2",
      "path": "2"
    },
    "967": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "968": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "970": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "972": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "973": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "975": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "DUP2",
      "path": "2"
    },
    "976": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1497
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "977": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1504
      ],
      "op": "DUP1",
      "path": "2"
    },
    "978": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1504
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "979": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "981": {
      "op": "NOT"
    },
    "982": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1504
      ],
      "op": "AND",
      "path": "2"
    },
    "983": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1500,
        1504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "985": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1504
      ],
      "op": "OR",
      "path": "2"
    },
    "986": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "987": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1473,
        1504
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "988": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1550,
        1569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5"
    },
    "991": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1560,
        1569
      ],
      "op": "DUP6",
      "path": "2"
    },
    "992": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1550,
        1557
      ],
      "op": "DUP6",
      "path": "2"
    },
    "993": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1550,
        1569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A4"
    },
    "996": {
      "fn": "DummyMerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1550,
        1569
      ],
      "op": "JUMP",
      "path": "2"
    },
    "997": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1550,
        1569
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "998": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1536,
        1570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EF"
    },
    "1001": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1536,
        1570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1002": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1536,
        1546
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1003": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1536,
        1570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8BB"
    },
    "1006": {
      "fn": "DummyMerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1536,
        1570
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1007": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1536,
        1570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1008": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1514,
        1570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1009": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1514,
        1570
      ],
      "op": "POP",
      "path": "2"
    },
    "1010": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x40"
    },
    "1012": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1013": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1014": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "1016": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1017": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1019": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1020": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1021": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1625,
        1635
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1022": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1023": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1024": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1026": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1027": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1649,
        1659
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1028": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1029": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1030": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1032": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1033": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1673,
        1682
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1034": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1035": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1036": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1038": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1039": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1696,
        1703
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1040": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1041": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1042": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1044": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1045": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1717,
        1731
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1046": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1047": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1048": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1050": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1051": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1745,
        1754
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1052": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1053": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1054": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1604,
        1764
      ],
      "op": "POP",
      "path": "2"
    },
    "1055": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1057": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1059": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1589,
        1600
      ],
      "op": "DUP10",
      "path": "2"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "op": "SUB"
    },
    "1068": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "AND",
      "path": "2"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1075": {
      "op": "SHL"
    },
    "1076": {
      "op": "SUB"
    },
    "1077": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "AND",
      "path": "2"
    },
    "1078": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1079": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1080": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1082": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "ADD",
      "path": "2"
    },
    "1083": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1084": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1085": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1086": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1088": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "ADD",
      "path": "2"
    },
    "1089": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1091": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1601
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1092": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1094": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1095": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1096": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1097": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1098": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1100": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1101": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1102": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1104": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1105": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1106": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1107": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1108": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1110": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1111": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1112": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1114": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1115": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1116": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1117": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1118": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1120": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1121": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1122": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1124": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1125": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1126": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1127": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1128": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1130": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1131": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1132": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "1134": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1135": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1136": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1137": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1138": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1140": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1141": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1142": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "1144": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1145": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1146": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1147": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1148": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1150": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "ADD",
      "path": "2"
    },
    "1151": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1152": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1153": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "POP",
      "path": "2"
    },
    "1154": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1580,
        1764
      ],
      "op": "POP",
      "path": "2"
    },
    "1155": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1774,
        1795
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 6,
      "value": "0x48B"
    },
    "1158": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1783,
        1794
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1159": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1774,
        1782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x495"
    },
    "1162": {
      "fn": "DummyMerkleVesting.initialize",
      "jump": "i",
      "offset": [
        1774,
        1795
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1163": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1774,
        1795
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1164": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1194,
        1802
      ],
      "op": "POP",
      "path": "2"
    },
    "1165": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1194,
        1802
      ],
      "op": "POP",
      "path": "2"
    },
    "1166": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "POP",
      "path": "2"
    },
    "1167": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "POP",
      "path": "2"
    },
    "1168": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "POP",
      "path": "2"
    },
    "1169": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "POP",
      "path": "2"
    },
    "1170": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "POP",
      "path": "2"
    },
    "1171": {
      "fn": "DummyMerkleVesting.initialize",
      "offset": [
        1055,
        1802
      ],
      "op": "POP",
      "path": "2"
    },
    "1172": {
      "fn": "DummyMerkleVesting.initialize",
      "jump": "o",
      "offset": [
        1055,
        1802
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1173": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1808,
        2777
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "SUB"
    },
    "1182": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 7
    },
    "1183": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "AND",
      "path": "2"
    },
    "1184": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1186": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1187": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1188": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1189": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1191": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1193": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1194": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1196": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1197": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1198": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1199": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1201": {
      "branch": 17,
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1874,
        1898
      ],
      "op": "AND",
      "path": "2"
    },
    "1202": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50D"
    },
    "1205": {
      "branch": 17,
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1206": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1208": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1215": {
      "op": "SHL"
    },
    "1216": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1217": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1220": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1222": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1223": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "ADD",
      "path": "2"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1229": {
      "op": "DUP3"
    },
    "1230": {
      "op": "ADD"
    },
    "1231": {
      "op": "MSTORE"
    },
    "1232": {
      "op": "PUSH32",
      "value": "0x596F75206D75737420696E697469616C697A6520796F7572206163636F756E74"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1267": {
      "op": "DUP3"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "op": "MSTORE"
    },
    "1270": {
      "op": "PUSH7",
      "value": "0x103334B939BA17"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1283": {
      "op": "DUP3"
    },
    "1284": {
      "op": "ADD"
    },
    "1285": {
      "op": "MSTORE"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1288": {
      "op": "ADD"
    },
    "1289": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28D"
    },
    "1292": {
      "op": "JUMP"
    },
    "1293": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1866,
        1942
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "op": "SUB"
    },
    "1302": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1303": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1999
      ],
      "op": "AND",
      "path": "2"
    },
    "1304": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1952,
        1975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1306": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1307": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1308": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1309": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1311": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1313": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1314": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1316": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1317": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1978,
        1999
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1318": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2017,
        2037
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x1"
    },
    "1320": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2017,
        2037
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1321": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2017,
        2037
      ],
      "op": "ADD",
      "path": "2"
    },
    "1322": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2017,
        2037
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1323": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x576"
    },
    "1326": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1327": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1329": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1336": {
      "op": "SHL"
    },
    "1337": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1338": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1341": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1343": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1344": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "ADD",
      "path": "2"
    },
    "1345": {
      "op": "MSTORE"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1350": {
      "op": "DUP3"
    },
    "1351": {
      "op": "ADD"
    },
    "1352": {
      "op": "MSTORE"
    },
    "1353": {
      "op": "PUSH32",
      "value": "0x4E6F20636F696E73206C65667420746F20776974686472617700000000000000"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1388": {
      "op": "DUP3"
    },
    "1389": {
      "op": "ADD"
    },
    "1390": {
      "op": "MSTORE"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1393": {
      "op": "ADD"
    },
    "1394": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28D"
    },
    "1397": {
      "op": "JUMP"
    },
    "1398": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2009,
        2072
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1399": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2082,
        2104
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1401": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2213,
        2220
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1402": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2213,
        2228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1404": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2213,
        2228
      ],
      "op": "ADD",
      "path": "2"
    },
    "1405": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2213,
        2228
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1406": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2194,
        2209
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1407": {
      "branch": 18,
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2194,
        2228
      ],
      "op": "LT",
      "path": "2"
    },
    "1408": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2190,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58E"
    },
    "1411": {
      "branch": 18,
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2190,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2264,
        2284
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "1415": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2264,
        2284
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1416": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2264,
        2284
      ],
      "op": "ADD",
      "path": "2"
    },
    "1417": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2264,
        2284
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1418": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2190,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5AF"
    },
    "1421": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2190,
        2459
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1422": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2190,
        2459
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1423": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2426,
        2448
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x4"
    },
    "1425": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2426,
        2448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1426": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2426,
        2448
      ],
      "op": "ADD",
      "path": "2"
    },
    "1427": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2426,
        2448
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1428": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2396,
        2422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1430": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2396,
        2422
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1431": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2396,
        2422
      ],
      "op": "ADD",
      "path": "2"
    },
    "1432": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2396,
        2422
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1433": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2378,
        2422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A2"
    },
    "1436": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2378,
        2422
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1437": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2378,
        2393
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1438": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2378,
        2422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A4"
    },
    "1441": {
      "fn": "DummyMerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2378,
        2422
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1442": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2378,
        2422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1443": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2377,
        2448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5AC"
    },
    "1446": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2377,
        2448
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1447": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2377,
        2448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1448": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2377,
        2448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DD"
    },
    "1451": {
      "fn": "DummyMerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2377,
        2448
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1452": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2377,
        2448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1453": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2357,
        2448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1454": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2357,
        2448
      ],
      "op": "POP",
      "path": "2"
    },
    "1455": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2190,
        2459
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1456": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2518,
        2535
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 11
    },
    "1457": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2501
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1458": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2514
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1460": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2514
      ],
      "op": "ADD",
      "path": "2"
    },
    "1461": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2514
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1463": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1464": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1465": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1466": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C3"
    },
    "1469": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1470": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1471": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A4"
    },
    "1474": {
      "fn": "DummyMerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2494,
        2535
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1475": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1476": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1477": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1478": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2494,
        2535
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1479": {
      "op": "POP"
    },
    "1480": {
      "op": "POP"
    },
    "1481": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2574,
        2589
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 12
    },
    "1482": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2545,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1484": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2545,
        2571
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1485": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2545,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "1486": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2545,
        2589
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1487": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2642
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x2"
    },
    "1489": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1490": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1492": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1493": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1502": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1509": {
      "op": "SHL"
    },
    "1510": {
      "op": "SUB"
    },
    "1511": {
      "op": "DUP6"
    },
    "1512": {
      "op": "DUP2"
    },
    "1513": {
      "op": "AND"
    },
    "1514": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1516": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1517": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "ADD",
      "path": "2"
    },
    "1518": {
      "op": "MSTORE"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1521": {
      "op": "DUP3"
    },
    "1522": {
      "op": "ADD"
    },
    "1523": {
      "op": "DUP5"
    },
    "1524": {
      "op": "SWAP1"
    },
    "1525": {
      "op": "MSTORE"
    },
    "1526": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1527": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1528": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2642
      ],
      "op": "AND",
      "path": "2"
    },
    "1529": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1530": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2651
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "1535": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2651
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1538": {
      "op": "ADD"
    },
    "1539": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1541": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1543": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1544": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1545": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1546": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "SUB",
      "path": "2"
    },
    "1547": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1548": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1550": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1551": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "GAS",
      "path": "2"
    },
    "1552": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "CALL",
      "path": "2"
    },
    "1553": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1554": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1555": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1556": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x621"
    },
    "1559": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1560": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1561": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1563": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1564": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1565": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1566": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1568": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1569": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1570": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "POP",
      "path": "2"
    },
    "1571": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "POP",
      "path": "2"
    },
    "1572": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "POP",
      "path": "2"
    },
    "1573": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "POP",
      "path": "2"
    },
    "1574": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1576": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1577": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1578": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1580": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "NOT",
      "path": "2"
    },
    "1581": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1583": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1584": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "ADD",
      "path": "2"
    },
    "1585": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "AND",
      "path": "2"
    },
    "1586": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1587": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "ADD",
      "path": "2"
    },
    "1588": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1589": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1591": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1592": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "POP",
      "path": "2"
    },
    "1593": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1594": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "ADD",
      "path": "2"
    },
    "1595": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1596": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x645"
    },
    "1599": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1600": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1601": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x882"
    },
    "1604": {
      "fn": "DummyMerkleVesting.withdraw",
      "jump": "i",
      "offset": [
        2637,
        2683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1605": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2637,
        2683
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1606": {
      "op": "POP"
    },
    "1607": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2749,
        2769
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x1"
    },
    "1609": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2749,
        2769
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1610": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2749,
        2769
      ],
      "op": "ADD",
      "path": "2"
    },
    "1611": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2749,
        2769
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1612": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1614": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1615": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "op": "SUB"
    },
    "1624": {
      "op": "DUP7"
    },
    "1625": {
      "op": "AND"
    },
    "1626": {
      "op": "DUP2"
    },
    "1627": {
      "op": "MSTORE"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1630": {
      "op": "DUP2"
    },
    "1631": {
      "op": "ADD"
    },
    "1632": {
      "op": "DUP5"
    },
    "1633": {
      "op": "SWAP1"
    },
    "1634": {
      "op": "MSTORE"
    },
    "1635": {
      "op": "DUP1"
    },
    "1636": {
      "op": "DUP3"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "SWAP3"
    },
    "1639": {
      "op": "SWAP1"
    },
    "1640": {
      "op": "SWAP3"
    },
    "1641": {
      "op": "MSTORE"
    },
    "1642": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1643": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x840B2E72AC87C36BE7E2E3F300D63BFE13603652DF8705EDBE38C23031353168"
    },
    "1676": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1677": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1678": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1679": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "SUB",
      "path": "2"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1682": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "ADD",
      "path": "2"
    },
    "1683": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1684": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        2698,
        2770
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1685": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1856,
        2777
      ],
      "op": "POP",
      "path": "2"
    },
    "1686": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1856,
        2777
      ],
      "op": "POP",
      "path": "2"
    },
    "1687": {
      "fn": "DummyMerkleVesting.withdraw",
      "offset": [
        1808,
        2777
      ],
      "op": "POP",
      "path": "2"
    },
    "1688": {
      "fn": "DummyMerkleVesting.withdraw",
      "jump": "o",
      "offset": [
        1808,
        2777
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1689": {
      "op": "JUMPDEST"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1694": {
      "op": "DUP3"
    },
    "1695": {
      "op": "DUP5"
    },
    "1696": {
      "op": "SUB"
    },
    "1697": {
      "op": "SLT"
    },
    "1698": {
      "op": "ISZERO"
    },
    "1699": {
      "op": "PUSH2",
      "value": "0x6AB"
    },
    "1702": {
      "op": "JUMPI"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1705": {
      "op": "DUP1"
    },
    "1706": {
      "op": "REVERT"
    },
    "1707": {
      "op": "JUMPDEST"
    },
    "1708": {
      "op": "POP"
    },
    "1709": {
      "op": "CALLDATALOAD"
    },
    "1710": {
      "op": "SWAP2"
    },
    "1711": {
      "op": "SWAP1"
    },
    "1712": {
      "op": "POP"
    },
    "1713": {
      "jump": "o",
      "op": "JUMP"
    },
    "1714": {
      "op": "JUMPDEST"
    },
    "1715": {
      "op": "DUP1"
    },
    "1716": {
      "op": "CALLDATALOAD"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1723": {
      "op": "SHL"
    },
    "1724": {
      "op": "SUB"
    },
    "1725": {
      "op": "DUP2"
    },
    "1726": {
      "op": "AND"
    },
    "1727": {
      "op": "DUP2"
    },
    "1728": {
      "op": "EQ"
    },
    "1729": {
      "op": "PUSH2",
      "value": "0x6C9"
    },
    "1732": {
      "op": "JUMPI"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1735": {
      "op": "DUP1"
    },
    "1736": {
      "op": "REVERT"
    },
    "1737": {
      "op": "JUMPDEST"
    },
    "1738": {
      "op": "SWAP2"
    },
    "1739": {
      "op": "SWAP1"
    },
    "1740": {
      "op": "POP"
    },
    "1741": {
      "jump": "o",
      "op": "JUMP"
    },
    "1742": {
      "op": "JUMPDEST"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1747": {
      "op": "DUP3"
    },
    "1748": {
      "op": "DUP5"
    },
    "1749": {
      "op": "SUB"
    },
    "1750": {
      "op": "SLT"
    },
    "1751": {
      "op": "ISZERO"
    },
    "1752": {
      "op": "PUSH2",
      "value": "0x6E0"
    },
    "1755": {
      "op": "JUMPI"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1758": {
      "op": "DUP1"
    },
    "1759": {
      "op": "REVERT"
    },
    "1760": {
      "op": "JUMPDEST"
    },
    "1761": {
      "op": "PUSH2",
      "value": "0x6E9"
    },
    "1764": {
      "op": "DUP3"
    },
    "1765": {
      "op": "PUSH2",
      "value": "0x6B2"
    },
    "1768": {
      "jump": "i",
      "op": "JUMP"
    },
    "1769": {
      "op": "JUMPDEST"
    },
    "1770": {
      "op": "SWAP4"
    },
    "1771": {
      "op": "SWAP3"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "op": "POP"
    },
    "1775": {
      "jump": "o",
      "op": "JUMP"
    },
    "1776": {
      "op": "JUMPDEST"
    },
    "1777": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1784": {
      "op": "SHL"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1787": {
      "op": "MSTORE"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1792": {
      "op": "MSTORE"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1797": {
      "op": "REVERT"
    },
    "1798": {
      "op": "JUMPDEST"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1801": {
      "op": "DUP1"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1804": {
      "op": "DUP1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1807": {
      "op": "DUP1"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1810": {
      "op": "DUP8"
    },
    "1811": {
      "op": "DUP10"
    },
    "1812": {
      "op": "SUB"
    },
    "1813": {
      "op": "SLT"
    },
    "1814": {
      "op": "ISZERO"
    },
    "1815": {
      "op": "PUSH2",
      "value": "0x71F"
    },
    "1818": {
      "op": "JUMPI"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1821": {
      "op": "DUP1"
    },
    "1822": {
      "op": "REVERT"
    },
    "1823": {
      "op": "JUMPDEST"
    },
    "1824": {
      "op": "DUP7"
    },
    "1825": {
      "op": "CALLDATALOAD"
    },
    "1826": {
      "op": "SWAP6"
    },
    "1827": {
      "op": "POP"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1830": {
      "op": "PUSH2",
      "value": "0x730"
    },
    "1833": {
      "op": "DUP2"
    },
    "1834": {
      "op": "DUP10"
    },
    "1835": {
      "op": "ADD"
    },
    "1836": {
      "op": "PUSH2",
      "value": "0x6B2"
    },
    "1839": {
      "jump": "i",
      "op": "JUMP"
    },
    "1840": {
      "op": "JUMPDEST"
    },
    "1841": {
      "op": "SWAP6"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1845": {
      "op": "DUP9"
    },
    "1846": {
      "op": "ADD"
    },
    "1847": {
      "op": "CALLDATALOAD"
    },
    "1848": {
      "op": "SWAP5"
    },
    "1849": {
      "op": "POP"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1852": {
      "op": "DUP9"
    },
    "1853": {
      "op": "ADD"
    },
    "1854": {
      "op": "CALLDATALOAD"
    },
    "1855": {
      "op": "SWAP4"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1859": {
      "op": "DUP9"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "op": "CALLDATALOAD"
    },
    "1862": {
      "op": "SWAP3"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1866": {
      "op": "DUP9"
    },
    "1867": {
      "op": "ADD"
    },
    "1868": {
      "op": "CALLDATALOAD"
    },
    "1869": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1878": {
      "op": "DUP1"
    },
    "1879": {
      "op": "DUP3"
    },
    "1880": {
      "op": "GT"
    },
    "1881": {
      "op": "ISZERO"
    },
    "1882": {
      "op": "PUSH2",
      "value": "0x762"
    },
    "1885": {
      "op": "JUMPI"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1888": {
      "op": "DUP1"
    },
    "1889": {
      "op": "REVERT"
    },
    "1890": {
      "op": "JUMPDEST"
    },
    "1891": {
      "op": "DUP2"
    },
    "1892": {
      "op": "DUP11"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "op": "SWAP2"
    },
    "1895": {
      "op": "POP"
    },
    "1896": {
      "op": "DUP11"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1899": {
      "op": "DUP4"
    },
    "1900": {
      "op": "ADD"
    },
    "1901": {
      "op": "SLT"
    },
    "1902": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "1905": {
      "op": "JUMPI"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1908": {
      "op": "DUP1"
    },
    "1909": {
      "op": "REVERT"
    },
    "1910": {
      "op": "JUMPDEST"
    },
    "1911": {
      "op": "DUP2"
    },
    "1912": {
      "op": "CALLDATALOAD"
    },
    "1913": {
      "op": "DUP2"
    },
    "1914": {
      "op": "DUP2"
    },
    "1915": {
      "op": "GT"
    },
    "1916": {
      "op": "ISZERO"
    },
    "1917": {
      "op": "PUSH2",
      "value": "0x788"
    },
    "1920": {
      "op": "JUMPI"
    },
    "1921": {
      "op": "PUSH2",
      "value": "0x788"
    },
    "1924": {
      "op": "PUSH2",
      "value": "0x6F0"
    },
    "1927": {
      "jump": "i",
      "op": "JUMP"
    },
    "1928": {
      "op": "JUMPDEST"
    },
    "1929": {
      "op": "DUP1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1935": {
      "op": "MLOAD"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1938": {
      "op": "NOT"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1941": {
      "op": "DUP4"
    },
    "1942": {
      "op": "ADD"
    },
    "1943": {
      "op": "AND"
    },
    "1944": {
      "op": "DUP2"
    },
    "1945": {
      "op": "ADD"
    },
    "1946": {
      "op": "DUP2"
    },
    "1947": {
      "op": "DUP2"
    },
    "1948": {
      "op": "LT"
    },
    "1949": {
      "op": "DUP6"
    },
    "1950": {
      "op": "DUP3"
    },
    "1951": {
      "op": "GT"
    },
    "1952": {
      "op": "OR"
    },
    "1953": {
      "op": "ISZERO"
    },
    "1954": {
      "op": "PUSH2",
      "value": "0x7AD"
    },
    "1957": {
      "op": "JUMPI"
    },
    "1958": {
      "op": "PUSH2",
      "value": "0x7AD"
    },
    "1961": {
      "op": "PUSH2",
      "value": "0x6F0"
    },
    "1964": {
      "jump": "i",
      "op": "JUMP"
    },
    "1965": {
      "op": "JUMPDEST"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1968": {
      "op": "MSTORE"
    },
    "1969": {
      "op": "SWAP2"
    },
    "1970": {
      "op": "DUP3"
    },
    "1971": {
      "op": "MSTORE"
    },
    "1972": {
      "op": "DUP5"
    },
    "1973": {
      "op": "DUP3"
    },
    "1974": {
      "op": "ADD"
    },
    "1975": {
      "op": "SWAP3"
    },
    "1976": {
      "op": "POP"
    },
    "1977": {
      "op": "DUP4"
    },
    "1978": {
      "op": "DUP2"
    },
    "1979": {
      "op": "ADD"
    },
    "1980": {
      "op": "DUP6"
    },
    "1981": {
      "op": "ADD"
    },
    "1982": {
      "op": "SWAP2"
    },
    "1983": {
      "op": "DUP14"
    },
    "1984": {
      "op": "DUP4"
    },
    "1985": {
      "op": "GT"
    },
    "1986": {
      "op": "ISZERO"
    },
    "1987": {
      "op": "PUSH2",
      "value": "0x7CB"
    },
    "1990": {
      "op": "JUMPI"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1993": {
      "op": "DUP1"
    },
    "1994": {
      "op": "REVERT"
    },
    "1995": {
      "op": "JUMPDEST"
    },
    "1996": {
      "op": "SWAP4"
    },
    "1997": {
      "op": "DUP6"
    },
    "1998": {
      "op": "ADD"
    },
    "1999": {
      "op": "SWAP4"
    },
    "2000": {
      "op": "JUMPDEST"
    },
    "2001": {
      "op": "DUP3"
    },
    "2002": {
      "op": "DUP6"
    },
    "2003": {
      "op": "LT"
    },
    "2004": {
      "op": "ISZERO"
    },
    "2005": {
      "op": "PUSH2",
      "value": "0x7E9"
    },
    "2008": {
      "op": "JUMPI"
    },
    "2009": {
      "op": "DUP5"
    },
    "2010": {
      "op": "CALLDATALOAD"
    },
    "2011": {
      "op": "DUP5"
    },
    "2012": {
      "op": "MSTORE"
    },
    "2013": {
      "op": "SWAP4"
    },
    "2014": {
      "op": "DUP6"
    },
    "2015": {
      "op": "ADD"
    },
    "2016": {
      "op": "SWAP4"
    },
    "2017": {
      "op": "SWAP3"
    },
    "2018": {
      "op": "DUP6"
    },
    "2019": {
      "op": "ADD"
    },
    "2020": {
      "op": "SWAP3"
    },
    "2021": {
      "op": "PUSH2",
      "value": "0x7D0"
    },
    "2024": {
      "op": "JUMP"
    },
    "2025": {
      "op": "JUMPDEST"
    },
    "2026": {
      "op": "DUP1"
    },
    "2027": {
      "op": "SWAP7"
    },
    "2028": {
      "op": "POP"
    },
    "2029": {
      "op": "POP"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "op": "POP"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "op": "POP"
    },
    "2034": {
      "op": "POP"
    },
    "2035": {
      "op": "SWAP3"
    },
    "2036": {
      "op": "SWAP6"
    },
    "2037": {
      "op": "POP"
    },
    "2038": {
      "op": "SWAP3"
    },
    "2039": {
      "op": "SWAP6"
    },
    "2040": {
      "op": "POP"
    },
    "2041": {
      "op": "SWAP3"
    },
    "2042": {
      "op": "SWAP6"
    },
    "2043": {
      "jump": "o",
      "op": "JUMP"
    },
    "2044": {
      "op": "JUMPDEST"
    },
    "2045": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2052": {
      "op": "SHL"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2055": {
      "op": "MSTORE"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2060": {
      "op": "MSTORE"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2065": {
      "op": "REVERT"
    },
    "2066": {
      "op": "JUMPDEST"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2071": {
      "op": "NOT"
    },
    "2072": {
      "op": "DUP3"
    },
    "2073": {
      "op": "EQ"
    },
    "2074": {
      "op": "ISZERO"
    },
    "2075": {
      "op": "PUSH2",
      "value": "0x826"
    },
    "2078": {
      "op": "JUMPI"
    },
    "2079": {
      "op": "PUSH2",
      "value": "0x826"
    },
    "2082": {
      "op": "PUSH2",
      "value": "0x7FC"
    },
    "2085": {
      "jump": "i",
      "op": "JUMP"
    },
    "2086": {
      "op": "JUMPDEST"
    },
    "2087": {
      "op": "POP"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "op": "SWAP1"
    },
    "2092": {
      "jump": "o",
      "op": "JUMP"
    },
    "2093": {
      "op": "JUMPDEST"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2098": {
      "op": "DUP3"
    },
    "2099": {
      "op": "ADD"
    },
    "2100": {
      "op": "DUP6"
    },
    "2101": {
      "op": "DUP4"
    },
    "2102": {
      "op": "MSTORE"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2105": {
      "op": "DUP6"
    },
    "2106": {
      "op": "DUP2"
    },
    "2107": {
      "op": "DUP6"
    },
    "2108": {
      "op": "ADD"
    },
    "2109": {
      "op": "MSTORE"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2114": {
      "op": "DUP6"
    },
    "2115": {
      "op": "ADD"
    },
    "2116": {
      "op": "MSTORE"
    },
    "2117": {
      "op": "DUP2"
    },
    "2118": {
      "op": "DUP6"
    },
    "2119": {
      "op": "MLOAD"
    },
    "2120": {
      "op": "DUP1"
    },
    "2121": {
      "op": "DUP5"
    },
    "2122": {
      "op": "MSTORE"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2125": {
      "op": "DUP7"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "op": "SWAP2"
    },
    "2128": {
      "op": "POP"
    },
    "2129": {
      "op": "DUP3"
    },
    "2130": {
      "op": "DUP8"
    },
    "2131": {
      "op": "ADD"
    },
    "2132": {
      "op": "SWAP4"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2136": {
      "op": "JUMPDEST"
    },
    "2137": {
      "op": "DUP2"
    },
    "2138": {
      "op": "DUP2"
    },
    "2139": {
      "op": "LT"
    },
    "2140": {
      "op": "ISZERO"
    },
    "2141": {
      "op": "PUSH2",
      "value": "0x874"
    },
    "2144": {
      "op": "JUMPI"
    },
    "2145": {
      "op": "DUP5"
    },
    "2146": {
      "op": "MLOAD"
    },
    "2147": {
      "op": "DUP4"
    },
    "2148": {
      "op": "MSTORE"
    },
    "2149": {
      "op": "SWAP4"
    },
    "2150": {
      "op": "DUP4"
    },
    "2151": {
      "op": "ADD"
    },
    "2152": {
      "op": "SWAP4"
    },
    "2153": {
      "op": "SWAP2"
    },
    "2154": {
      "op": "DUP4"
    },
    "2155": {
      "op": "ADD"
    },
    "2156": {
      "op": "SWAP2"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2159": {
      "op": "ADD"
    },
    "2160": {
      "op": "PUSH2",
      "value": "0x858"
    },
    "2163": {
      "op": "JUMP"
    },
    "2164": {
      "op": "JUMPDEST"
    },
    "2165": {
      "op": "POP"
    },
    "2166": {
      "op": "SWAP1"
    },
    "2167": {
      "op": "SWAP9"
    },
    "2168": {
      "op": "SWAP8"
    },
    "2169": {
      "op": "POP"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "op": "POP"
    },
    "2174": {
      "op": "POP"
    },
    "2175": {
      "op": "POP"
    },
    "2176": {
      "op": "POP"
    },
    "2177": {
      "jump": "o",
      "op": "JUMP"
    },
    "2178": {
      "op": "JUMPDEST"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2183": {
      "op": "DUP3"
    },
    "2184": {
      "op": "DUP5"
    },
    "2185": {
      "op": "SUB"
    },
    "2186": {
      "op": "SLT"
    },
    "2187": {
      "op": "ISZERO"
    },
    "2188": {
      "op": "PUSH2",
      "value": "0x894"
    },
    "2191": {
      "op": "JUMPI"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2194": {
      "op": "DUP1"
    },
    "2195": {
      "op": "REVERT"
    },
    "2196": {
      "op": "JUMPDEST"
    },
    "2197": {
      "op": "DUP2"
    },
    "2198": {
      "op": "MLOAD"
    },
    "2199": {
      "op": "DUP1"
    },
    "2200": {
      "op": "ISZERO"
    },
    "2201": {
      "op": "ISZERO"
    },
    "2202": {
      "op": "DUP2"
    },
    "2203": {
      "op": "EQ"
    },
    "2204": {
      "op": "PUSH2",
      "value": "0x6E9"
    },
    "2207": {
      "op": "JUMPI"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2210": {
      "op": "DUP1"
    },
    "2211": {
      "op": "REVERT"
    },
    "2212": {
      "op": "JUMPDEST"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2215": {
      "op": "DUP3"
    },
    "2216": {
      "op": "DUP3"
    },
    "2217": {
      "op": "LT"
    },
    "2218": {
      "op": "ISZERO"
    },
    "2219": {
      "op": "PUSH2",
      "value": "0x8B6"
    },
    "2222": {
      "op": "JUMPI"
    },
    "2223": {
      "op": "PUSH2",
      "value": "0x8B6"
    },
    "2226": {
      "op": "PUSH2",
      "value": "0x7FC"
    },
    "2229": {
      "jump": "i",
      "op": "JUMP"
    },
    "2230": {
      "op": "JUMPDEST"
    },
    "2231": {
      "op": "POP"
    },
    "2232": {
      "op": "SUB"
    },
    "2233": {
      "op": "SWAP1"
    },
    "2234": {
      "jump": "o",
      "op": "JUMP"
    },
    "2235": {
      "op": "JUMPDEST"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2238": {
      "op": "DUP3"
    },
    "2239": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "2242": {
      "op": "JUMPI"
    },
    "2243": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2250": {
      "op": "SHL"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2253": {
      "op": "MSTORE"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2258": {
      "op": "MSTORE"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2263": {
      "op": "REVERT"
    },
    "2264": {
      "op": "JUMPDEST"
    },
    "2265": {
      "op": "POP"
    },
    "2266": {
      "op": "DIV"
    },
    "2267": {
      "op": "SWAP1"
    },
    "2268": {
      "jump": "o",
      "op": "JUMP"
    },
    "2269": {
      "op": "JUMPDEST"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2272": {
      "op": "DUP2"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2275": {
      "op": "NOT"
    },
    "2276": {
      "op": "DIV"
    },
    "2277": {
      "op": "DUP4"
    },
    "2278": {
      "op": "GT"
    },
    "2279": {
      "op": "DUP3"
    },
    "2280": {
      "op": "ISZERO"
    },
    "2281": {
      "op": "ISZERO"
    },
    "2282": {
      "op": "AND"
    },
    "2283": {
      "op": "ISZERO"
    },
    "2284": {
      "op": "PUSH2",
      "value": "0x8F7"
    },
    "2287": {
      "op": "JUMPI"
    },
    "2288": {
      "op": "PUSH2",
      "value": "0x8F7"
    },
    "2291": {
      "op": "PUSH2",
      "value": "0x7FC"
    },
    "2294": {
      "jump": "i",
      "op": "JUMP"
    },
    "2295": {
      "op": "JUMPDEST"
    },
    "2296": {
      "op": "POP"
    },
    "2297": {
      "op": "MUL"
    },
    "2298": {
      "op": "SWAP1"
    },
    "2299": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "21806c07aa2e72adca5387af10ddcbb1dadac4e9",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\n\npragma solidity 0.8.12;\n\nimport \"../interfaces/IERC20.sol\";\nimport \"./MerkleLib.sol\";\n\ncontract DummyMerkleVesting {\n    using MerkleLib for bytes32;\n\n    mapping (uint => bytes32) public merkleRoots;\n    uint public numRoots;\n    IERC20 public token;\n\n    uint public initialBalance;\n\n    struct Tranche {\n        uint totalCoins;\n        uint currentCoins;\n        uint startTime;\n        uint endTime;\n        uint coinsPerSecond;\n        uint lastWithdrawalTime;\n    }\n\n    mapping (address => bool) public initialized;\n    mapping (address => Tranche) public tranches;\n\n    event WithdrawalOccurred(address destination, uint numTokens, uint tokensLeft);\n    event MerkleRootAdded(uint indexed index, bytes32 newRoot);\n\n    constructor(IERC20 _token, bytes32 _root) {\n        token = _token;\n        merkleRoots[1] = _root;\n        numRoots = 1;\n    }\n\n    function addMerkleRoot(bytes32 newRoot) public {\n        merkleRoots[++numRoots] = newRoot;\n        emit MerkleRootAdded(numRoots, newRoot);\n    }\n\n    function initialize(uint merkleIndex, address destination, uint totalCoins, uint startTime, uint endTime, bytes32[] memory proof) external {\n        require(!initialized[destination], \"Already initialized\");\n        bytes32 leaf = keccak256(abi.encodePacked(destination, totalCoins, startTime, endTime));\n\n        require(merkleRoots[merkleIndex].verifyProof(leaf, proof), \"The proof could not be verified.\");\n        initialized[destination] = true;\n        uint coinsPerSecond = totalCoins / (endTime - startTime);\n        tranches[destination] = Tranche(\n            totalCoins,\n            totalCoins,\n            startTime,\n            endTime,\n            coinsPerSecond,\n            startTime\n        );\n        withdraw(destination);\n    }\n\n    function withdraw(address destination) internal {\n        require(initialized[destination], \"You must initialize your account first.\");\n        Tranche storage tranche = tranches[destination];\n        require(tranche.currentCoins >  0, 'No coins left to withdraw');\n        uint currentWithdrawal = 0;\n\n        // if after vesting period ends, give them the remaining coins\n        if (block.timestamp >= tranche.endTime) {\n            currentWithdrawal = tranche.currentCoins;\n        } else {\n            // compute allowed withdrawal\n            currentWithdrawal = (block.timestamp - tranche.lastWithdrawalTime) * tranche.coinsPerSecond;\n        }\n\n        // update struct\n        tranche.currentCoins -= currentWithdrawal;\n        tranche.lastWithdrawalTime = block.timestamp;\n\n        // transfer the tokens, brah\n        token.transfer(destination, currentWithdrawal);\n        emit WithdrawalOccurred(destination, currentWithdrawal, tranche.currentCoins);\n    }\n\n}",
  "sourceMap": "129:2651:2:-:0;;;770:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;822:5;:14;;-1:-1:-1;;;;;;822:14:2;-1:-1:-1;;;;;822:14:2;;;;;;;;;;;-1:-1:-1;;846:14:2;;;;;;:22;;;;878:12;;129:2651;;14:366:8;108:6;116;169:2;157:9;148:7;144:23;140:32;137:52;;;185:1;182;175:12;137:52;211:16;;-1:-1:-1;;;;;256:31:8;;246:42;;236:70;;302:1;299;292:12;236:70;370:2;355:18;;;;349:25;325:5;;349:25;;-1:-1:-1;;;14:366:8:o;:::-;129:2651:2;;;;;;",
  "sourcePath": "contracts/DummyMerkleVesting.sol",
  "type": "contract"
}