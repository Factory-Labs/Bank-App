{"abi": [{"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"internalType": "uint256", "name": "trancheIndex", "type": "uint256"}], "name": "AccountEmpty", "type": "error"}, {"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"internalType": "uint256", "name": "trancheIndex", "type": "uint256"}], "name": "AccountStillLocked", "type": "error"}, {"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"internalType": "bytes32", "name": "leaf", "type": "bytes32"}], "name": "AlreadyInitialized", "type": "error"}, {"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"internalType": "bytes32", "name": "leaf", "type": "bytes32"}, {"internalType": "bytes32[]", "name": "proof", "type": "bytes32[]"}], "name": "BadProof", "type": "error"}, {"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}], "name": "BadTreeIndex", "type": "error"}, {"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"internalType": "uint256", "name": "trancheIndex", "type": "uint256"}], "name": "UninitializedAccount", "type": "error"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"indexed": true, "internalType": "address", "name": "tokenAddress", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "newRoot", "type": "bytes32"}, {"indexed": false, "internalType": "bytes32", "name": "ipfsHash", "type": "bytes32"}], "name": "MerkleRootAdded", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"indexed": true, "internalType": "address", "name": "tokenAddress", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "TokensDeposited", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"indexed": true, "internalType": "uint256", "name": "trancheIndex", "type": "uint256"}, {"indexed": true, "internalType": "address", "name": "recipient", "type": "address"}, {"indexed": false, "internalType": "bytes32", "name": "leaf", "type": "bytes32"}], "name": "TrancheInitialized", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"indexed": true, "internalType": "address", "name": "destination", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "numTokens", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "tokensLeft", "type": "uint256"}], "name": "WithdrawalOccurred", "type": "event"}, {"inputs": [{"internalType": "bytes32", "name": "newRoot", "type": "bytes32"}, {"internalType": "bytes32", "name": "ipfsHash", "type": "bytes32"}, {"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "uint256", "name": "tokenBalance", "type": "uint256"}], "name": "addMerkleRoot", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"internalType": "uint256", "name": "value", "type": "uint256"}], "name": "depositTokens", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"internalType": "bytes32", "name": "leaf", "type": "bytes32"}], "name": "getInitialized", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"internalType": "uint256", "name": "trancheIndex", "type": "uint256"}], "name": "getTranche", "outputs": [{"internalType": "address", "name": "", "type": "address"}, {"internalType": "uint256", "name": "", "type": "uint256"}, {"internalType": "uint256", "name": "", "type": "uint256"}, {"internalType": "uint256", "name": "", "type": "uint256"}, {"internalType": "uint256", "name": "", "type": "uint256"}, {"internalType": "uint256", "name": "", "type": "uint256"}, {"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"internalType": "address", "name": "destination", "type": "address"}, {"internalType": "uint256", "name": "totalCoins", "type": "uint256"}, {"internalType": "uint256", "name": "startTime", "type": "uint256"}, {"internalType": "uint256", "name": "endTime", "type": "uint256"}, {"internalType": "uint256", "name": "lockPeriodEndTime", "type": "uint256"}, {"internalType": "bytes32[]", "name": "proof", "type": "bytes32[]"}], "name": "initialize", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "merkleTrees", "outputs": [{"internalType": "bytes32", "name": "rootHash", "type": "bytes32"}, {"internalType": "bytes32", "name": "ipfsHash", "type": "bytes32"}, {"internalType": "address", "name": "tokenAddress", "type": "address"}, {"internalType": "uint256", "name": "tokenBalance", "type": "uint256"}, {"internalType": "uint256", "name": "numTranchesInitialized", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "numTrees", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "treeIndex", "type": "uint256"}, {"internalType": "uint256", "name": "trancheIndex", "type": "uint256"}], "name": "withdraw", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"1": "contracts/MerkleLib.sol", "3": "contracts/MerkleVesting.sol", "4": "interfaces/IERC20.sol"}, "ast": {"absolutePath": "contracts/MerkleVesting.sol", "exportedSymbols": {"IERC20": [1999], "MerkleLib": [1921], "MerkleVesting": [1844]}, "id": 1845, "license": "GPL-3.0-only", "nodeType": "SourceUnit", "nodes": [{"id": 1217, "literals": ["solidity", "0.8", ".12"], "nodeType": "PragmaDirective", "src": "42:23:3"}, {"absolutePath": "interfaces/IERC20.sol", "file": "../interfaces/IERC20.sol", "id": 1218, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1845, "sourceUnit": 2000, "src": "67:34:3", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "contracts/MerkleLib.sol", "file": "./MerkleLib.sol", "id": 1219, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 1845, "sourceUnit": 1922, "src": "102:25:3", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "MerkleVesting", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 1220, "nodeType": "StructuredDocumentation", "src": "129:429:3", "text": "@title A factory pattern for merkle-vesting, that is, a time release schedule for tokens, using merkle proofs to scale\n @author metapriest, adrian.wachel, marek.babiarz, radoslaw.gorecki\n @notice This contract is permissionless and public facing. Any fees must be included in the data of the merkle tree.\n @dev The contract cannot introspect into the contents of the merkle tree, except when provided a merkle proof"}, "fullyImplemented": true, "id": 1844, "linearizedBaseContracts": [1844], "name": "MerkleVesting", "nameLocation": "567:13:3", "nodeType": "ContractDefinition", "nodes": [{"id": 1223, "libraryName": {"id": 1221, "name": "MerkleLib", "nodeType": "IdentifierPath", "referencedDeclaration": 1921, "src": "593:9:3"}, "nodeType": "UsingForDirective", "src": "587:28:3", "typeName": {"id": 1222, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "607:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"constant": false, "functionSelector": "390b7c66", "id": 1225, "mutability": "mutable", "name": "numTrees", "nameLocation": "689:8:3", "nodeType": "VariableDeclaration", "scope": 1844, "src": "677:20:3", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1224, "name": "uint", "nodeType": "ElementaryTypeName", "src": "677:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"canonicalName": "MerkleVesting.Tranche", "id": 1242, "members": [{"constant": false, "id": 1227, "mutability": "mutable", "name": "recipient", "nameLocation": "813:9:3", "nodeType": "VariableDeclaration", "scope": 1242, "src": "805:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1226, "name": "address", "nodeType": "ElementaryTypeName", "src": "805:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1229, "mutability": "mutable", "name": "totalCoins", "nameLocation": "837:10:3", "nodeType": "VariableDeclaration", "scope": 1242, "src": "832:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1228, "name": "uint", "nodeType": "ElementaryTypeName", "src": "832:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1231, "mutability": "mutable", "name": "currentCoins", "nameLocation": "938:12:3", "nodeType": "VariableDeclaration", "scope": 1242, "src": "933:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1230, "name": "uint", "nodeType": "ElementaryTypeName", "src": "933:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1233, "mutability": "mutable", "name": "startTime", "nameLocation": "1038:9:3", "nodeType": "VariableDeclaration", "scope": 1242, "src": "1033:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1232, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1033:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1235, "mutability": "mutable", "name": "endTime", "nameLocation": "1129:7:3", "nodeType": "VariableDeclaration", "scope": 1242, "src": "1124:12:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1234, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1124:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1237, "mutability": "mutable", "name": "coinsPerSecond", "nameLocation": "1210:14:3", "nodeType": "VariableDeclaration", "scope": 1242, "src": "1205:19:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1236, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1205:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1239, "mutability": "mutable", "name": "lastWithdrawalTime", "nameLocation": "1329:18:3", "nodeType": "VariableDeclaration", "scope": 1242, "src": "1324:23:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1238, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1324:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1241, "mutability": "mutable", "name": "lockPeriodEndTime", "nameLocation": "1433:17:3", "nodeType": "VariableDeclaration", "scope": 1242, "src": "1428:22:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1240, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1428:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "Tranche", "nameLocation": "787:7:3", "nodeType": "StructDefinition", "scope": 1844, "src": "780:727:3", "visibility": "public"}, {"canonicalName": "MerkleVesting.MerkleTree", "id": 1262, "members": [{"constant": false, "id": 1244, "mutability": "mutable", "name": "rootHash", "nameLocation": "1621:8:3", "nodeType": "VariableDeclaration", "scope": 1262, "src": "1613:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1243, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1613:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1246, "mutability": "mutable", "name": "ipfsHash", "nameLocation": "1748:8:3", "nodeType": "VariableDeclaration", "scope": 1262, "src": "1740:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1245, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1740:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1248, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "1863:12:3", "nodeType": "VariableDeclaration", "scope": 1262, "src": "1855:20:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1247, "name": "address", "nodeType": "ElementaryTypeName", "src": "1855:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1250, "mutability": "mutable", "name": "tokenBalance", "nameLocation": "1949:12:3", "nodeType": "VariableDeclaration", "scope": 1262, "src": "1944:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1249, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1944:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1252, "mutability": "mutable", "name": "numTranchesInitialized", "nameLocation": "2071:22:3", "nodeType": "VariableDeclaration", "scope": 1262, "src": "2066:27:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1251, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2066:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1257, "mutability": "mutable", "name": "tranches", "nameLocation": "2129:8:3", "nodeType": "VariableDeclaration", "scope": 1262, "src": "2103:34:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1242_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.Tranche)"}, "typeName": {"id": 1256, "keyType": {"id": 1253, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2112:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "2103:25:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1242_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.Tranche)"}, "valueType": {"id": 1255, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1254, "name": "Tranche", "nodeType": "IdentifierPath", "referencedDeclaration": 1242, "src": "2120:7:3"}, "referencedDeclaration": 1242, "src": "2120:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche"}}}, "visibility": "internal"}, {"constant": false, "id": 1261, "mutability": "mutable", "name": "initialized", "nameLocation": "2173:11:3", "nodeType": "VariableDeclaration", "scope": 1262, "src": "2147:37:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "typeName": {"id": 1260, "keyType": {"id": 1258, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2156:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Mapping", "src": "2147:25:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}, "valueType": {"id": 1259, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2167:4:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "internal"}], "name": "MerkleTree", "nameLocation": "1592:10:3", "nodeType": "StructDefinition", "scope": 1844, "src": "1585:606:3", "visibility": "public"}, {"constant": false, "functionSelector": "85d88cb1", "id": 1267, "mutability": "mutable", "name": "merkleTrees", "nameLocation": "2296:11:3", "nodeType": "VariableDeclaration", "scope": 1844, "src": "2260:47:3", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1262_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree)"}, "typeName": {"id": 1266, "keyType": {"id": 1263, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2269:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "2260:28:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1262_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree)"}, "valueType": {"id": 1265, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1264, "name": "MerkleTree", "nodeType": "IdentifierPath", "referencedDeclaration": 1262, "src": "2277:10:3"}, "referencedDeclaration": 1262, "src": "2277:10:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree"}}}, "visibility": "public"}, {"anonymous": false, "id": 1277, "name": "WithdrawalOccurred", "nameLocation": "2360:18:3", "nodeType": "EventDefinition", "parameters": {"id": 1276, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1269, "indexed": true, "mutability": "mutable", "name": "treeIndex", "nameLocation": "2392:9:3", "nodeType": "VariableDeclaration", "scope": 1277, "src": "2379:22:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1268, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2379:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1271, "indexed": true, "mutability": "mutable", "name": "destination", "nameLocation": "2419:11:3", "nodeType": "VariableDeclaration", "scope": 1277, "src": "2403:27:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1270, "name": "address", "nodeType": "ElementaryTypeName", "src": "2403:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1273, "indexed": false, "mutability": "mutable", "name": "numTokens", "nameLocation": "2437:9:3", "nodeType": "VariableDeclaration", "scope": 1277, "src": "2432:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1272, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2432:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1275, "indexed": false, "mutability": "mutable", "name": "tokensLeft", "nameLocation": "2453:10:3", "nodeType": "VariableDeclaration", "scope": 1277, "src": "2448:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1274, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2448:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2378:86:3"}, "src": "2354:111:3"}, {"anonymous": false, "id": 1287, "name": "MerkleRootAdded", "nameLocation": "2511:15:3", "nodeType": "EventDefinition", "parameters": {"id": 1286, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1279, "indexed": true, "mutability": "mutable", "name": "treeIndex", "nameLocation": "2540:9:3", "nodeType": "VariableDeclaration", "scope": 1287, "src": "2527:22:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1278, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2527:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1281, "indexed": true, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "2567:12:3", "nodeType": "VariableDeclaration", "scope": 1287, "src": "2551:28:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1280, "name": "address", "nodeType": "ElementaryTypeName", "src": "2551:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1283, "indexed": false, "mutability": "mutable", "name": "newRoot", "nameLocation": "2589:7:3", "nodeType": "VariableDeclaration", "scope": 1287, "src": "2581:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1282, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2581:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1285, "indexed": false, "mutability": "mutable", "name": "ipfsHash", "nameLocation": "2606:8:3", "nodeType": "VariableDeclaration", "scope": 1287, "src": "2598:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1284, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2598:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2526:89:3"}, "src": "2505:111:3"}, {"anonymous": false, "id": 1295, "name": "TokensDeposited", "nameLocation": "2666:15:3", "nodeType": "EventDefinition", "parameters": {"id": 1294, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1289, "indexed": true, "mutability": "mutable", "name": "treeIndex", "nameLocation": "2695:9:3", "nodeType": "VariableDeclaration", "scope": 1295, "src": "2682:22:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1288, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2682:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1291, "indexed": true, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "2722:12:3", "nodeType": "VariableDeclaration", "scope": 1295, "src": "2706:28:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1290, "name": "address", "nodeType": "ElementaryTypeName", "src": "2706:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1293, "indexed": false, "mutability": "mutable", "name": "amount", "nameLocation": "2741:6:3", "nodeType": "VariableDeclaration", "scope": 1295, "src": "2736:11:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1292, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2736:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2681:67:3"}, "src": "2660:89:3"}, {"anonymous": false, "id": 1305, "name": "TrancheInitialized", "nameLocation": "2761:18:3", "nodeType": "EventDefinition", "parameters": {"id": 1304, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1297, "indexed": true, "mutability": "mutable", "name": "treeIndex", "nameLocation": "2793:9:3", "nodeType": "VariableDeclaration", "scope": 1305, "src": "2780:22:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1296, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2780:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1299, "indexed": true, "mutability": "mutable", "name": "trancheIndex", "nameLocation": "2817:12:3", "nodeType": "VariableDeclaration", "scope": 1305, "src": "2804:25:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1298, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2804:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1301, "indexed": true, "mutability": "mutable", "name": "recipient", "nameLocation": "2847:9:3", "nodeType": "VariableDeclaration", "scope": 1305, "src": "2831:25:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1300, "name": "address", "nodeType": "ElementaryTypeName", "src": "2831:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1303, "indexed": false, "mutability": "mutable", "name": "leaf", "nameLocation": "2866:4:3", "nodeType": "VariableDeclaration", "scope": 1305, "src": "2858:12:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1302, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2858:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2779:92:3"}, "src": "2755:117:3"}, {"id": 1309, "name": "BadTreeIndex", "nameLocation": "2884:12:3", "nodeType": "ErrorDefinition", "parameters": {"id": 1308, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1307, "mutability": "mutable", "name": "treeIndex", "nameLocation": "2902:9:3", "nodeType": "VariableDeclaration", "scope": 1309, "src": "2897:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1306, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2897:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2896:16:3"}, "src": "2878:35:3"}, {"id": 1315, "name": "AlreadyInitialized", "nameLocation": "2924:18:3", "nodeType": "ErrorDefinition", "parameters": {"id": 1314, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1311, "mutability": "mutable", "name": "treeIndex", "nameLocation": "2948:9:3", "nodeType": "VariableDeclaration", "scope": 1315, "src": "2943:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1310, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2943:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1313, "mutability": "mutable", "name": "leaf", "nameLocation": "2967:4:3", "nodeType": "VariableDeclaration", "scope": 1315, "src": "2959:12:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1312, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2959:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2942:30:3"}, "src": "2918:55:3"}, {"id": 1324, "name": "BadProof", "nameLocation": "2984:8:3", "nodeType": "ErrorDefinition", "parameters": {"id": 1323, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1317, "mutability": "mutable", "name": "treeIndex", "nameLocation": "2998:9:3", "nodeType": "VariableDeclaration", "scope": 1324, "src": "2993:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1316, "name": "uint", "nodeType": "ElementaryTypeName", "src": "2993:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1319, "mutability": "mutable", "name": "leaf", "nameLocation": "3017:4:3", "nodeType": "VariableDeclaration", "scope": 1324, "src": "3009:12:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1318, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3009:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1322, "mutability": "mutable", "name": "proof", "nameLocation": "3033:5:3", "nodeType": "VariableDeclaration", "scope": 1324, "src": "3023:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 1320, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3023:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1321, "nodeType": "ArrayTypeName", "src": "3023:9:3", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "2992:47:3"}, "src": "2978:62:3"}, {"id": 1330, "name": "UninitializedAccount", "nameLocation": "3051:20:3", "nodeType": "ErrorDefinition", "parameters": {"id": 1329, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1326, "mutability": "mutable", "name": "treeIndex", "nameLocation": "3077:9:3", "nodeType": "VariableDeclaration", "scope": 1330, "src": "3072:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1325, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3072:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1328, "mutability": "mutable", "name": "trancheIndex", "nameLocation": "3093:12:3", "nodeType": "VariableDeclaration", "scope": 1330, "src": "3088:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1327, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3088:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3071:35:3"}, "src": "3045:62:3"}, {"id": 1336, "name": "AccountStillLocked", "nameLocation": "3118:18:3", "nodeType": "ErrorDefinition", "parameters": {"id": 1335, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1332, "mutability": "mutable", "name": "treeIndex", "nameLocation": "3142:9:3", "nodeType": "VariableDeclaration", "scope": 1336, "src": "3137:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1331, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3137:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1334, "mutability": "mutable", "name": "trancheIndex", "nameLocation": "3158:12:3", "nodeType": "VariableDeclaration", "scope": 1336, "src": "3153:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1333, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3153:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3136:35:3"}, "src": "3112:60:3"}, {"id": 1342, "name": "AccountEmpty", "nameLocation": "3183:12:3", "nodeType": "ErrorDefinition", "parameters": {"id": 1341, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1338, "mutability": "mutable", "name": "treeIndex", "nameLocation": "3201:9:3", "nodeType": "VariableDeclaration", "scope": 1342, "src": "3196:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1337, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3196:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1340, "mutability": "mutable", "name": "trancheIndex", "nameLocation": "3217:12:3", "nodeType": "VariableDeclaration", "scope": 1342, "src": "3212:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1339, "name": "uint", "nodeType": "ElementaryTypeName", "src": "3212:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3195:35:3"}, "src": "3177:54:3"}, {"body": {"id": 1392, "nodeType": "Block", "src": "4082:381:3", "statements": [{"assignments": [1356], "declarations": [{"constant": false, "id": 1356, "mutability": "mutable", "name": "tree", "nameLocation": "4167:4:3", "nodeType": "VariableDeclaration", "scope": 1392, "src": "4148:23:3", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree"}, "typeName": {"id": 1355, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1354, "name": "MerkleTree", "nodeType": "IdentifierPath", "referencedDeclaration": 1262, "src": "4148:10:3"}, "referencedDeclaration": 1262, "src": "4148:10:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree"}}, "visibility": "internal"}], "id": 1361, "initialValue": {"baseExpression": {"id": 1357, "name": "merkleTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "4174:11:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1262_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"}}, "id": 1360, "indexExpression": {"id": 1359, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "4186:10:3", "subExpression": {"id": 1358, "name": "numTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1225, "src": "4188:8:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4174:23:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage", "typeString": "struct MerkleVesting.MerkleTree storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "4148:49:3"}, {"expression": {"id": 1366, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1362, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1356, "src": "4207:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1364, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "rootHash", "nodeType": "MemberAccess", "referencedDeclaration": 1244, "src": "4207:13:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1365, "name": "newRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1345, "src": "4223:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4207:23:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1367, "nodeType": "ExpressionStatement", "src": "4207:23:3"}, {"expression": {"id": 1372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1368, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1356, "src": "4240:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1370, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "ipfsHash", "nodeType": "MemberAccess", "referencedDeclaration": 1246, "src": "4240:13:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1371, "name": "ipfsHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1347, "src": "4256:8:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4240:24:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1373, "nodeType": "ExpressionStatement", "src": "4240:24:3"}, {"expression": {"id": 1378, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1374, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1356, "src": "4274:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1376, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1248, "src": "4274:17:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1377, "name": "tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1349, "src": "4294:12:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "4274:32:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1379, "nodeType": "ExpressionStatement", "src": "4274:32:3"}, {"expression": {"arguments": [{"id": 1381, "name": "numTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1225, "src": "4360:8:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1382, "name": "tokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1351, "src": "4370:12:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1380, "name": "depositTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1481, "src": "4346:13:3", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256)"}}, "id": 1383, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4346:37:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1384, "nodeType": "ExpressionStatement", "src": "4346:37:3"}, {"eventCall": {"arguments": [{"id": 1386, "name": "numTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1225, "src": "4414:8:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1387, "name": "tokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1349, "src": "4424:12:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1388, "name": "newRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1345, "src": "4438:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 1389, "name": "ipfsHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1347, "src": "4447:8:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 1385, "name": "MerkleRootAdded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1287, "src": "4398:15:3", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$", "typeString": "function (uint256,address,bytes32,bytes32)"}}, "id": 1390, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4398:58:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1391, "nodeType": "EmitStatement", "src": "4393:63:3"}]}, "documentation": {"id": 1343, "nodeType": "StructuredDocumentation", "src": "3237:734:3", "text": "@notice Add a new merkle tree to the contract, creating a new merkle-vesting-schedule\n @dev Anyone may call this function, therefore we must make sure trees cannot affect each other\n @dev Root hash should be built from (destination, totalCoins, startTime, endTime, lockPeriodEndTime)\n @param newRoot root hash of merkle tree representing vesting schedules\n @param ipfsHash the ipfs hash of the entire dataset, used for redundance so that creator can ensure merkleproof are always computable\n @param tokenAddress the address of the token contract that is being distributed\n @param tokenBalance the amount of tokens user wishes to use to fund the airdrop, note trees can be under/overfunded"}, "functionSelector": "9e18a054", "id": 1393, "implemented": true, "kind": "function", "modifiers": [], "name": "addMerkleRoot", "nameLocation": "3985:13:3", "nodeType": "FunctionDefinition", "parameters": {"id": 1352, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1345, "mutability": "mutable", "name": "newRoot", "nameLocation": "4007:7:3", "nodeType": "VariableDeclaration", "scope": 1393, "src": "3999:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1344, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3999:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1347, "mutability": "mutable", "name": "ipfsHash", "nameLocation": "4024:8:3", "nodeType": "VariableDeclaration", "scope": 1393, "src": "4016:16:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1346, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4016:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 1349, "mutability": "mutable", "name": "tokenAddress", "nameLocation": "4042:12:3", "nodeType": "VariableDeclaration", "scope": 1393, "src": "4034:20:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1348, "name": "address", "nodeType": "ElementaryTypeName", "src": "4034:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1351, "mutability": "mutable", "name": "tokenBalance", "nameLocation": "4061:12:3", "nodeType": "VariableDeclaration", "scope": 1393, "src": "4056:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1350, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4056:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3998:76:3"}, "returnParameters": {"id": 1353, "nodeType": "ParameterList", "parameters": [], "src": "4082:0:3"}, "scope": 1844, "src": "3976:487:3", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 1480, "nodeType": "Block", "src": "5017:1133:3", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1407, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1403, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1401, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1396, "src": "5031:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1402, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5044:1:3", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5031:14:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1406, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1404, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1396, "src": "5049:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 1405, "name": "numTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1225, "src": "5061:8:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5049:20:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5031:38:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1413, "nodeType": "IfStatement", "src": "5027:99:3", "trueBody": {"id": 1412, "nodeType": "Block", "src": "5071:55:3", "statements": [{"errorCall": {"arguments": [{"id": 1409, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1396, "src": "5105:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1408, "name": "BadTreeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1309, "src": "5092:12:3", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1410, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5092:23:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1411, "nodeType": "RevertStatement", "src": "5085:30:3"}]}}, {"assignments": [1416], "declarations": [{"constant": false, "id": 1416, "mutability": "mutable", "name": "merkleTree", "nameLocation": "5195:10:3", "nodeType": "VariableDeclaration", "scope": 1480, "src": "5176:29:3", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree"}, "typeName": {"id": 1415, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1414, "name": "MerkleTree", "nodeType": "IdentifierPath", "referencedDeclaration": 1262, "src": "5176:10:3"}, "referencedDeclaration": 1262, "src": "5176:10:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree"}}, "visibility": "internal"}], "id": 1420, "initialValue": {"baseExpression": {"id": 1417, "name": "merkleTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "5208:11:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1262_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"}}, "id": 1419, "indexExpression": {"id": 1418, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1396, "src": "5220:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5208:22:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage", "typeString": "struct MerkleVesting.MerkleTree storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "5176:54:3"}, {"assignments": [1423], "declarations": [{"constant": false, "id": 1423, "mutability": "mutable", "name": "token", "nameLocation": "5248:5:3", "nodeType": "VariableDeclaration", "scope": 1480, "src": "5241:12:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}, "typeName": {"id": 1422, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1421, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1999, "src": "5241:6:3"}, "referencedDeclaration": 1999, "src": "5241:6:3", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 1428, "initialValue": {"arguments": [{"expression": {"id": 1425, "name": "merkleTree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1416, "src": "5263:10:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1426, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1248, "src": "5263:23:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1424, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1999, "src": "5256:6:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$1999_$", "typeString": "type(contract IERC20)"}}, "id": 1427, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5256:31:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "5241:46:3"}, {"assignments": [1430], "declarations": [{"constant": false, "id": 1430, "mutability": "mutable", "name": "balanceBefore", "nameLocation": "5302:13:3", "nodeType": "VariableDeclaration", "scope": 1480, "src": "5297:18:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1429, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5297:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1438, "initialValue": {"arguments": [{"arguments": [{"id": 1435, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5342:4:3", "typeDescriptions": {"typeIdentifier": "t_contract$_MerkleVesting_$1844", "typeString": "contract MerkleVesting"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MerkleVesting_$1844", "typeString": "contract MerkleVesting"}], "id": 1434, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5334:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1433, "name": "address", "nodeType": "ElementaryTypeName", "src": "5334:7:3", "typeDescriptions": {}}}, "id": 1436, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5334:13:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 1431, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1423, "src": "5318:5:3", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}}, "id": 1432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1938, "src": "5318:15:3", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 1437, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5318:30:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5297:51:3"}, {"expression": {"arguments": [{"expression": {"id": 1442, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5722:3:3", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1443, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5722:10:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 1446, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5742:4:3", "typeDescriptions": {"typeIdentifier": "t_contract$_MerkleVesting_$1844", "typeString": "contract MerkleVesting"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MerkleVesting_$1844", "typeString": "contract MerkleVesting"}], "id": 1445, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5734:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1444, "name": "address", "nodeType": "ElementaryTypeName", "src": "5734:7:3", "typeDescriptions": {}}}, "id": 1447, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5734:13:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1448, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1398, "src": "5749:5:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1439, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1423, "src": "5703:5:3", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}}, "id": 1441, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 1980, "src": "5703:18:3", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,address,uint256) external returns (bool)"}}, "id": 1449, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5703:52:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1450, "nodeType": "ExpressionStatement", "src": "5703:52:3"}, {"assignments": [1452], "declarations": [{"constant": false, "id": 1452, "mutability": "mutable", "name": "balanceAfter", "nameLocation": "5771:12:3", "nodeType": "VariableDeclaration", "scope": 1480, "src": "5766:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1451, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5766:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1460, "initialValue": {"arguments": [{"arguments": [{"id": 1457, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5810:4:3", "typeDescriptions": {"typeIdentifier": "t_contract$_MerkleVesting_$1844", "typeString": "contract MerkleVesting"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MerkleVesting_$1844", "typeString": "contract MerkleVesting"}], "id": 1456, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5802:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1455, "name": "address", "nodeType": "ElementaryTypeName", "src": "5802:7:3", "typeDescriptions": {}}}, "id": 1458, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5802:13:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 1453, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1423, "src": "5786:5:3", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}}, "id": 1454, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1938, "src": "5786:15:3", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 1459, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5786:30:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5766:50:3"}, {"assignments": [1462], "declarations": [{"constant": false, "id": 1462, "mutability": "mutable", "name": "diff", "nameLocation": "5933:4:3", "nodeType": "VariableDeclaration", "scope": 1480, "src": "5928:9:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1461, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5928:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1466, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1465, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1463, "name": "balanceAfter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1452, "src": "5940:12:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 1464, "name": "balanceBefore", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1430, "src": "5955:13:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5940:28:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5928:40:3"}, {"expression": {"id": 1471, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1467, "name": "merkleTree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1416, "src": "6040:10:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1469, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "tokenBalance", "nodeType": "MemberAccess", "referencedDeclaration": 1250, "src": "6040:23:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 1470, "name": "diff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1462, "src": "6067:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6040:31:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1472, "nodeType": "ExpressionStatement", "src": "6040:31:3"}, {"eventCall": {"arguments": [{"id": 1474, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1396, "src": "6102:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1475, "name": "merkleTree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1416, "src": "6113:10:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1476, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1248, "src": "6113:23:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1477, "name": "diff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1462, "src": "6138:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1473, "name": "TokensDeposited", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1295, "src": "6086:15:3", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (uint256,address,uint256)"}}, "id": 1478, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6086:57:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1479, "nodeType": "EmitStatement", "src": "6081:62:3"}]}, "documentation": {"id": 1394, "nodeType": "StructuredDocumentation", "src": "4469:485:3", "text": "@notice Add funds to an existing merkle-vesting-schedule\n @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs\n @param treeIndex index into array-like map of merkleTrees\n @param value the amount of tokens user wishes to use to fund the airdrop, note trees can be underfunded"}, "functionSelector": "f16ad51e", "id": 1481, "implemented": true, "kind": "function", "modifiers": [], "name": "depositTokens", "nameLocation": "4968:13:3", "nodeType": "FunctionDefinition", "parameters": {"id": 1399, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1396, "mutability": "mutable", "name": "treeIndex", "nameLocation": "4987:9:3", "nodeType": "VariableDeclaration", "scope": 1481, "src": "4982:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1395, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4982:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1398, "mutability": "mutable", "name": "value", "nameLocation": "5003:5:3", "nodeType": "VariableDeclaration", "scope": 1481, "src": "4998:10:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1397, "name": "uint", "nodeType": "ElementaryTypeName", "src": "4998:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4981:28:3"}, "returnParameters": {"id": 1400, "nodeType": "ParameterList", "parameters": [], "src": "5017:0:3"}, "scope": 1844, "src": "4959:1191:3", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 1621, "nodeType": "Block", "src": "7440:1989:3", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1508, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1504, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1502, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1484, "src": "7454:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1503, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7467:1:3", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7454:14:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1507, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1505, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1484, "src": "7472:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 1506, "name": "numTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1225, "src": "7484:8:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7472:20:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "7454:38:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1514, "nodeType": "IfStatement", "src": "7450:99:3", "trueBody": {"id": 1513, "nodeType": "Block", "src": "7494:55:3", "statements": [{"errorCall": {"arguments": [{"id": 1510, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1484, "src": "7528:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1509, "name": "BadTreeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1309, "src": "7515:12:3", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$", "typeString": "function (uint256) pure"}}, "id": 1511, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7515:23:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1512, "nodeType": "RevertStatement", "src": "7508:30:3"}]}}, {"assignments": [1516], "declarations": [{"constant": false, "id": 1516, "mutability": "mutable", "name": "leaf", "nameLocation": "7742:4:3", "nodeType": "VariableDeclaration", "scope": 1621, "src": "7734:12:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1515, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "7734:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 1527, "initialValue": {"arguments": [{"arguments": [{"id": 1520, "name": "destination", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1486, "src": "7770:11:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1521, "name": "totalCoins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1488, "src": "7783:10:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1522, "name": "startTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1490, "src": "7795:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1523, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1492, "src": "7806:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1524, "name": "lockPeriodEndTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1494, "src": "7815:17:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1518, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "7759:3:3", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 1519, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "7759:10:3", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 1525, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7759:74:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1517, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "7749:9:3", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 1526, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7749:85:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "7734:100:3"}, {"assignments": [1530], "declarations": [{"constant": false, "id": 1530, "mutability": "mutable", "name": "tree", "nameLocation": "7944:4:3", "nodeType": "VariableDeclaration", "scope": 1621, "src": "7925:23:3", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree"}, "typeName": {"id": 1529, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1528, "name": "MerkleTree", "nodeType": "IdentifierPath", "referencedDeclaration": 1262, "src": "7925:10:3"}, "referencedDeclaration": 1262, "src": "7925:10:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree"}}, "visibility": "internal"}], "id": 1534, "initialValue": {"baseExpression": {"id": 1531, "name": "merkleTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "7951:11:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1262_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"}}, "id": 1533, "indexExpression": {"id": 1532, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1484, "src": "7963:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7951:22:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage", "typeString": "struct MerkleVesting.MerkleTree storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "7925:48:3"}, {"condition": {"baseExpression": {"expression": {"id": 1535, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1530, "src": "8034:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1536, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "initialized", "nodeType": "MemberAccess", "referencedDeclaration": 1261, "src": "8034:16:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 1538, "indexExpression": {"id": 1537, "name": "leaf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1516, "src": "8051:4:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8034:22:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1545, "nodeType": "IfStatement", "src": "8030:95:3", "trueBody": {"id": 1544, "nodeType": "Block", "src": "8058:67:3", "statements": [{"errorCall": {"arguments": [{"id": 1540, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1484, "src": "8098:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1541, "name": "leaf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1516, "src": "8109:4:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 1539, "name": "AlreadyInitialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1315, "src": "8079:18:3", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_bytes32_$returns$__$", "typeString": "function (uint256,bytes32) pure"}}, "id": 1542, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8079:35:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1543, "nodeType": "RevertStatement", "src": "8072:42:3"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1553, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 1549, "name": "leaf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1516, "src": "8236:4:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 1550, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1497, "src": "8242:5:3", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}], "expression": {"expression": {"id": 1546, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1530, "src": "8210:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1547, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "rootHash", "nodeType": "MemberAccess", "referencedDeclaration": 1244, "src": "8210:13:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1548, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "verifyProof", "nodeType": "MemberAccess", "referencedDeclaration": 1893, "src": "8210:25:3", "typeDescriptions": {"typeIdentifier": "t_function_delegatecall_pure$_t_bytes32_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,bytes32,bytes32[] memory) pure returns (bool)"}}, "id": 1551, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8210:38:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "66616c7365", "id": 1552, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8252:5:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "8210:47:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1561, "nodeType": "IfStatement", "src": "8206:117:3", "trueBody": {"id": 1560, "nodeType": "Block", "src": "8259:64:3", "statements": [{"errorCall": {"arguments": [{"id": 1555, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1484, "src": "8289:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1556, "name": "leaf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1516, "src": "8300:4:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 1557, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1497, "src": "8306:5:3", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory"}], "id": 1554, "name": "BadProof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1324, "src": "8280:8:3", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$", "typeString": "function (uint256,bytes32,bytes32[] memory) pure"}}, "id": 1558, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8280:32:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1559, "nodeType": "RevertStatement", "src": "8273:39:3"}]}}, {"expression": {"id": 1568, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"expression": {"id": 1562, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1530, "src": "8394:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1565, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "initialized", "nodeType": "MemberAccess", "referencedDeclaration": 1261, "src": "8394:16:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 1566, "indexExpression": {"id": 1564, "name": "leaf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1516, "src": "8411:4:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8394:22:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 1567, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8419:4:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "8394:29:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1569, "nodeType": "ExpressionStatement", "src": "8394:29:3"}, {"assignments": [1571], "declarations": [{"constant": false, "id": 1571, "mutability": "mutable", "name": "coinsPerSecond", "nameLocation": "8596:14:3", "nodeType": "VariableDeclaration", "scope": 1621, "src": "8591:19:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1570, "name": "uint", "nodeType": "ElementaryTypeName", "src": "8591:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1578, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1577, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1572, "name": "totalCoins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1488, "src": "8613:10:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1575, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1573, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1492, "src": "8627:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 1574, "name": "startTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1490, "src": "8637:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8627:19:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 1576, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8626:21:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8613:34:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8591:56:3"}, {"expression": {"id": 1596, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"expression": {"id": 1579, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1530, "src": "8709:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1584, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tranches", "nodeType": "MemberAccess", "referencedDeclaration": 1257, "src": "8709:13:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1242_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.Tranche storage ref)"}}, "id": 1585, "indexExpression": {"id": 1583, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": true, "src": "8723:29:3", "subExpression": {"expression": {"id": 1581, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1530, "src": "8725:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1582, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "numTranchesInitialized", "nodeType": "MemberAccess", "referencedDeclaration": 1252, "src": "8725:27:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8709:44:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage", "typeString": "struct MerkleVesting.Tranche storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 1587, "name": "destination", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1486, "src": "8777:11:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1588, "name": "totalCoins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1488, "src": "8802:10:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1589, "name": "totalCoins", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1488, "src": "8857:10:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1590, "name": "startTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1490, "src": "8919:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1591, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1492, "src": "8942:7:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1592, "name": "coinsPerSecond", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1571, "src": "8963:14:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1593, "name": "startTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1490, "src": "8991:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1594, "name": "lockPeriodEndTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1494, "src": "9055:17:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1586, "name": "Tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1242, "src": "8756:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Tranche_$1242_storage_ptr_$", "typeString": "type(struct MerkleVesting.Tranche storage pointer)"}}, "id": 1595, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8756:326:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_memory_ptr", "typeString": "struct MerkleVesting.Tranche memory"}}, "src": "8709:373:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage", "typeString": "struct MerkleVesting.Tranche storage ref"}}, "id": 1597, "nodeType": "ExpressionStatement", "src": "8709:373:3"}, {"eventCall": {"arguments": [{"id": 1599, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1484, "src": "9117:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1600, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1530, "src": "9128:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1601, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "numTranchesInitialized", "nodeType": "MemberAccess", "referencedDeclaration": 1252, "src": "9128:27:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1602, "name": "destination", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1486, "src": "9157:11:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1603, "name": "leaf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1516, "src": "9170:4:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 1598, "name": "TrancheInitialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1305, "src": "9098:18:3", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes32_$returns$__$", "typeString": "function (uint256,uint256,address,bytes32)"}}, "id": 1604, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9098:77:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1605, "nodeType": "EmitStatement", "src": "9093:82:3"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1609, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1606, "name": "lockPeriodEndTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1494, "src": "9269:17:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 1607, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "9289:5:3", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1608, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "9289:15:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9269:35:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1617, "nodeType": "IfStatement", "src": "9265:114:3", "trueBody": {"id": 1616, "nodeType": "Block", "src": "9306:73:3", "statements": [{"expression": {"arguments": [{"id": 1611, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1484, "src": "9329:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1612, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1530, "src": "9340:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1613, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "numTranchesInitialized", "nodeType": "MemberAccess", "referencedDeclaration": 1252, "src": "9340:27:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1610, "name": "withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1778, "src": "9320:8:3", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256)"}}, "id": 1614, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9320:48:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1615, "nodeType": "ExpressionStatement", "src": "9320:48:3"}]}}, {"expression": {"expression": {"id": 1618, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1530, "src": "9395:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1619, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "numTranchesInitialized", "nodeType": "MemberAccess", "referencedDeclaration": 1252, "src": "9395:27:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1501, "id": 1620, "nodeType": "Return", "src": "9388:34:3"}]}, "documentation": {"id": 1482, "nodeType": "StructuredDocumentation", "src": "6156:1046:3", "text": "@notice Called once per recipient of a vesting schedule to initialize the vesting schedule\n @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs of global tree stats\n @dev The contract has no knowledge of the vesting schedules until this function is called\n @param treeIndex index into array-like map of merkleTrees\n @param destination address that will receive tokens\n @param totalCoins amount of tokens to be released after vesting completes\n @param startTime time that vesting schedule starts, can be past or future\n @param endTime time vesting schedule completes, can be past or future\n @param lockPeriodEndTime time that coins become unlocked, can be after endTime\n @param proof array of hashes linking leaf hash of (destination, totalCoins, startTime, endTime, lockPeriodEndTime) to root"}, "functionSelector": "a8efa9ba", "id": 1622, "implemented": true, "kind": "function", "modifiers": [], "name": "initialize", "nameLocation": "7216:10:3", "nodeType": "FunctionDefinition", "parameters": {"id": 1498, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1484, "mutability": "mutable", "name": "treeIndex", "nameLocation": "7241:9:3", "nodeType": "VariableDeclaration", "scope": 1622, "src": "7236:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1483, "name": "uint", "nodeType": "ElementaryTypeName", "src": "7236:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1486, "mutability": "mutable", "name": "destination", "nameLocation": "7268:11:3", "nodeType": "VariableDeclaration", "scope": 1622, "src": "7260:19:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1485, "name": "address", "nodeType": "ElementaryTypeName", "src": "7260:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1488, "mutability": "mutable", "name": "totalCoins", "nameLocation": "7294:10:3", "nodeType": "VariableDeclaration", "scope": 1622, "src": "7289:15:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1487, "name": "uint", "nodeType": "ElementaryTypeName", "src": "7289:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1490, "mutability": "mutable", "name": "startTime", "nameLocation": "7319:9:3", "nodeType": "VariableDeclaration", "scope": 1622, "src": "7314:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1489, "name": "uint", "nodeType": "ElementaryTypeName", "src": "7314:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1492, "mutability": "mutable", "name": "endTime", "nameLocation": "7343:7:3", "nodeType": "VariableDeclaration", "scope": 1622, "src": "7338:12:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1491, "name": "uint", "nodeType": "ElementaryTypeName", "src": "7338:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1494, "mutability": "mutable", "name": "lockPeriodEndTime", "nameLocation": "7365:17:3", "nodeType": "VariableDeclaration", "scope": 1622, "src": "7360:22:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1493, "name": "uint", "nodeType": "ElementaryTypeName", "src": "7360:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1497, "mutability": "mutable", "name": "proof", "nameLocation": "7409:5:3", "nodeType": "VariableDeclaration", "scope": 1622, "src": "7392:22:3", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 1495, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "7392:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 1496, "nodeType": "ArrayTypeName", "src": "7392:9:3", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "7226:189:3"}, "returnParameters": {"id": 1501, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1500, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1622, "src": "7434:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1499, "name": "uint", "nodeType": "ElementaryTypeName", "src": "7434:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7433:6:3"}, "scope": 1844, "src": "7207:2222:3", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 1777, "nodeType": "Block", "src": "9927:2248:3", "statements": [{"assignments": [1632], "declarations": [{"constant": false, "id": 1632, "mutability": "mutable", "name": "tree", "nameLocation": "9957:4:3", "nodeType": "VariableDeclaration", "scope": 1777, "src": "9938:23:3", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree"}, "typeName": {"id": 1631, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1630, "name": "MerkleTree", "nodeType": "IdentifierPath", "referencedDeclaration": 1262, "src": "9938:10:3"}, "referencedDeclaration": 1262, "src": "9938:10:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree"}}, "visibility": "internal"}], "id": 1636, "initialValue": {"baseExpression": {"id": 1633, "name": "merkleTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "9964:11:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1262_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"}}, "id": 1635, "indexExpression": {"id": 1634, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1625, "src": "9976:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9964:22:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage", "typeString": "struct MerkleVesting.MerkleTree storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "9938:48:3"}, {"assignments": [1639], "declarations": [{"constant": false, "id": 1639, "mutability": "mutable", "name": "tranche", "nameLocation": "10012:7:3", "nodeType": "VariableDeclaration", "scope": 1777, "src": "9996:23:3", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche"}, "typeName": {"id": 1638, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1637, "name": "Tranche", "nodeType": "IdentifierPath", "referencedDeclaration": 1242, "src": "9996:7:3"}, "referencedDeclaration": 1242, "src": "9996:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche"}}, "visibility": "internal"}], "id": 1644, "initialValue": {"baseExpression": {"expression": {"id": 1640, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1632, "src": "10022:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1641, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tranches", "nodeType": "MemberAccess", "referencedDeclaration": 1257, "src": "10022:13:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1242_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.Tranche storage ref)"}}, "id": 1643, "indexExpression": {"id": 1642, "name": "trancheIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1627, "src": "10036:12:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10022:27:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage", "typeString": "struct MerkleVesting.Tranche storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "9996:53:3"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1648, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1645, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "10133:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1646, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "totalCoins", "nodeType": "MemberAccess", "referencedDeclaration": 1229, "src": "10133:18:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1647, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10155:1:3", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "10133:23:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1655, "nodeType": "IfStatement", "src": "10129:106:3", "trueBody": {"id": 1654, "nodeType": "Block", "src": "10158:77:3", "statements": [{"errorCall": {"arguments": [{"id": 1650, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1625, "src": "10200:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1651, "name": "trancheIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1627, "src": "10211:12:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1649, "name": "UninitializedAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1330, "src": "10179:20:3", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 1652, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10179:45:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1653, "nodeType": "RevertStatement", "src": "10172:52:3"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1660, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1656, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "10297:5:3", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1657, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "10297:15:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 1658, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "10315:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1659, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lockPeriodEndTime", "nodeType": "MemberAccess", "referencedDeclaration": 1241, "src": "10315:25:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10297:43:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1667, "nodeType": "IfStatement", "src": "10293:124:3", "trueBody": {"id": 1666, "nodeType": "Block", "src": "10342:75:3", "statements": [{"errorCall": {"arguments": [{"id": 1662, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1625, "src": "10382:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1663, "name": "trancheIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1627, "src": "10393:12:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1661, "name": "AccountStillLocked", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1336, "src": "10363:18:3", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 1664, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10363:43:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1665, "nodeType": "RevertStatement", "src": "10356:50:3"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1668, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "10473:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1669, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currentCoins", "nodeType": "MemberAccess", "referencedDeclaration": 1231, "src": "10473:20:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1670, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10497:1:3", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "10473:25:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1678, "nodeType": "IfStatement", "src": "10469:100:3", "trueBody": {"id": 1677, "nodeType": "Block", "src": "10500:69:3", "statements": [{"errorCall": {"arguments": [{"id": 1673, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1625, "src": "10534:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1674, "name": "trancheIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1627, "src": "10545:12:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1672, "name": "AccountEmpty", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1342, "src": "10521:12:3", "typeDescriptions": {"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256) pure"}}, "id": 1675, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10521:37:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1676, "nodeType": "RevertStatement", "src": "10514:44:3"}]}}, {"assignments": [1680], "declarations": [{"constant": false, "id": 1680, "mutability": "mutable", "name": "currentWithdrawal", "nameLocation": "10631:17:3", "nodeType": "VariableDeclaration", "scope": 1777, "src": "10626:22:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1679, "name": "uint", "nodeType": "ElementaryTypeName", "src": "10626:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1681, "nodeType": "VariableDeclarationStatement", "src": "10626:22:3"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1686, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1682, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "10734:5:3", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1683, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "10734:15:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 1684, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "10753:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1685, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 1235, "src": "10753:15:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10734:34:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1705, "nodeType": "Block", "src": "10841:158:3", "statements": [{"expression": {"id": 1703, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1693, "name": "currentWithdrawal", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1680, "src": "10897:17:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1702, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1698, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1694, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "10918:5:3", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1695, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "10918:15:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"expression": {"id": 1696, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "10936:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1697, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastWithdrawalTime", "nodeType": "MemberAccess", "referencedDeclaration": 1239, "src": "10936:26:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10918:44:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 1699, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10917:46:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"id": 1700, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "10966:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1701, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "coinsPerSecond", "nodeType": "MemberAccess", "referencedDeclaration": 1237, "src": "10966:22:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10917:71:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10897:91:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1704, "nodeType": "ExpressionStatement", "src": "10897:91:3"}]}, "id": 1706, "nodeType": "IfStatement", "src": "10730:269:3", "trueBody": {"id": 1692, "nodeType": "Block", "src": "10770:65:3", "statements": [{"expression": {"id": 1690, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1687, "name": "currentWithdrawal", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1680, "src": "10784:17:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 1688, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "10804:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1689, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currentCoins", "nodeType": "MemberAccess", "referencedDeclaration": 1231, "src": "10804:20:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10784:40:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1691, "nodeType": "ExpressionStatement", "src": "10784:40:3"}]}}, {"expression": {"id": 1712, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1707, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "11094:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1709, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "lastWithdrawalTime", "nodeType": "MemberAccess", "referencedDeclaration": 1239, "src": "11094:26:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 1710, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "11123:5:3", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 1711, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "11123:15:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11094:44:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1713, "nodeType": "ExpressionStatement", "src": "11094:44:3"}, {"assignments": [1716], "declarations": [{"constant": false, "id": 1716, "mutability": "mutable", "name": "token", "nameLocation": "11156:5:3", "nodeType": "VariableDeclaration", "scope": 1777, "src": "11149:12:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}, "typeName": {"id": 1715, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1714, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 1999, "src": "11149:6:3"}, "referencedDeclaration": 1999, "src": "11149:6:3", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}}, "visibility": "internal"}], "id": 1721, "initialValue": {"arguments": [{"expression": {"id": 1718, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1632, "src": "11171:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1719, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 1248, "src": "11171:17:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1717, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1999, "src": "11164:6:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$1999_$", "typeString": "type(contract IERC20)"}}, "id": 1720, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11164:25:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}}, "nodeType": "VariableDeclarationStatement", "src": "11149:40:3"}, {"assignments": [1723], "declarations": [{"constant": false, "id": 1723, "mutability": "mutable", "name": "balanceBefore", "nameLocation": "11204:13:3", "nodeType": "VariableDeclaration", "scope": 1777, "src": "11199:18:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1722, "name": "uint", "nodeType": "ElementaryTypeName", "src": "11199:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1731, "initialValue": {"arguments": [{"arguments": [{"id": 1728, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "11244:4:3", "typeDescriptions": {"typeIdentifier": "t_contract$_MerkleVesting_$1844", "typeString": "contract MerkleVesting"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MerkleVesting_$1844", "typeString": "contract MerkleVesting"}], "id": 1727, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11236:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1726, "name": "address", "nodeType": "ElementaryTypeName", "src": "11236:7:3", "typeDescriptions": {}}}, "id": 1729, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11236:13:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 1724, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1716, "src": "11220:5:3", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}}, "id": 1725, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1938, "src": "11220:15:3", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 1730, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11220:30:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11199:51:3"}, {"expression": {"arguments": [{"expression": {"id": 1735, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "11647:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1736, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "recipient", "nodeType": "MemberAccess", "referencedDeclaration": 1227, "src": "11647:17:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1737, "name": "currentWithdrawal", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1680, "src": "11666:17:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1732, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1716, "src": "11632:5:3", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}}, "id": 1734, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1948, "src": "11632:14:3", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) external returns (bool)"}}, "id": 1738, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11632:52:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1739, "nodeType": "ExpressionStatement", "src": "11632:52:3"}, {"assignments": [1741], "declarations": [{"constant": false, "id": 1741, "mutability": "mutable", "name": "balanceAfter", "nameLocation": "11791:12:3", "nodeType": "VariableDeclaration", "scope": 1777, "src": "11786:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1740, "name": "uint", "nodeType": "ElementaryTypeName", "src": "11786:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1749, "initialValue": {"arguments": [{"arguments": [{"id": 1746, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "11830:4:3", "typeDescriptions": {"typeIdentifier": "t_contract$_MerkleVesting_$1844", "typeString": "contract MerkleVesting"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_MerkleVesting_$1844", "typeString": "contract MerkleVesting"}], "id": 1745, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11822:7:3", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1744, "name": "address", "nodeType": "ElementaryTypeName", "src": "11822:7:3", "typeDescriptions": {}}}, "id": 1747, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11822:13:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 1742, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1716, "src": "11806:5:3", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$1999", "typeString": "contract IERC20"}}, "id": 1743, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1938, "src": "11806:15:3", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 1748, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11806:30:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11786:50:3"}, {"assignments": [1751], "declarations": [{"constant": false, "id": 1751, "mutability": "mutable", "name": "diff", "nameLocation": "11851:4:3", "nodeType": "VariableDeclaration", "scope": 1777, "src": "11846:9:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1750, "name": "uint", "nodeType": "ElementaryTypeName", "src": "11846:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 1755, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1754, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1752, "name": "balanceBefore", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1723, "src": "11858:13:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 1753, "name": "balanceAfter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1741, "src": "11874:12:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11858:28:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11846:40:3"}, {"expression": {"id": 1760, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1756, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "11937:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1758, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "currentCoins", "nodeType": "MemberAccess", "referencedDeclaration": 1231, "src": "11937:20:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 1759, "name": "diff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1751, "src": "11961:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11937:28:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1761, "nodeType": "ExpressionStatement", "src": "11937:28:3"}, {"expression": {"id": 1766, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 1762, "name": "tree", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1632, "src": "12051:4:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage_ptr", "typeString": "struct MerkleVesting.MerkleTree storage pointer"}}, "id": 1764, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "tokenBalance", "nodeType": "MemberAccess", "referencedDeclaration": 1250, "src": "12051:17:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 1765, "name": "diff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1751, "src": "12072:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12051:25:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1767, "nodeType": "ExpressionStatement", "src": "12051:25:3"}, {"eventCall": {"arguments": [{"id": 1769, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1625, "src": "12111:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1770, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "12122:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1771, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "recipient", "nodeType": "MemberAccess", "referencedDeclaration": 1227, "src": "12122:17:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1772, "name": "diff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1751, "src": "12141:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1773, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1639, "src": "12147:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1774, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currentCoins", "nodeType": "MemberAccess", "referencedDeclaration": 1231, "src": "12147:20:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1768, "name": "WithdrawalOccurred", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1277, "src": "12092:18:3", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,address,uint256,uint256)"}}, "id": 1775, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12092:76:3", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1776, "nodeType": "EmitStatement", "src": "12087:81:3"}]}, "documentation": {"id": 1623, "nodeType": "StructuredDocumentation", "src": "9435:427:3", "text": "@notice Claim funds as a recipient in the merkle-drop\n @dev Anyone may call this function for anyone else, funds go to destination regardless, it's just a question of\n @dev who provides the proof and pays the gas, msg.sender is not used in this function\n @param treeIndex index into array-like map of merkleTrees, which tree should we apply the proof to?\n @param trancheIndex recipient of tokens"}, "functionSelector": "441a3e70", "id": 1778, "implemented": true, "kind": "function", "modifiers": [], "name": "withdraw", "nameLocation": "9876:8:3", "nodeType": "FunctionDefinition", "parameters": {"id": 1628, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1625, "mutability": "mutable", "name": "treeIndex", "nameLocation": "9890:9:3", "nodeType": "VariableDeclaration", "scope": 1778, "src": "9885:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1624, "name": "uint", "nodeType": "ElementaryTypeName", "src": "9885:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1627, "mutability": "mutable", "name": "trancheIndex", "nameLocation": "9906:12:3", "nodeType": "VariableDeclaration", "scope": 1778, "src": "9901:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1626, "name": "uint", "nodeType": "ElementaryTypeName", "src": "9901:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9884:35:3"}, "returnParameters": {"id": 1629, "nodeType": "ParameterList", "parameters": [], "src": "9927:0:3"}, "scope": 1844, "src": "9867:2308:3", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 1825, "nodeType": "Block", "src": "12304:254:3", "statements": [{"assignments": [1801], "declarations": [{"constant": false, "id": 1801, "mutability": "mutable", "name": "tranche", "nameLocation": "12330:7:3", "nodeType": "VariableDeclaration", "scope": 1825, "src": "12314:23:3", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche"}, "typeName": {"id": 1800, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 1799, "name": "Tranche", "nodeType": "IdentifierPath", "referencedDeclaration": 1242, "src": "12314:7:3"}, "referencedDeclaration": 1242, "src": "12314:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche"}}, "visibility": "internal"}], "id": 1808, "initialValue": {"baseExpression": {"expression": {"baseExpression": {"id": 1802, "name": "merkleTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "12340:11:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1262_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"}}, "id": 1804, "indexExpression": {"id": 1803, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1780, "src": "12352:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12340:22:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage", "typeString": "struct MerkleVesting.MerkleTree storage ref"}}, "id": 1805, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tranches", "nodeType": "MemberAccess", "referencedDeclaration": 1257, "src": "12340:31:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1242_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.Tranche storage ref)"}}, "id": 1807, "indexExpression": {"id": 1806, "name": "trancheIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1782, "src": "12372:12:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12340:45:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage", "typeString": "struct MerkleVesting.Tranche storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "12314:71:3"}, {"expression": {"components": [{"expression": {"id": 1809, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1801, "src": "12403:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1810, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "recipient", "nodeType": "MemberAccess", "referencedDeclaration": 1227, "src": "12403:17:3", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 1811, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1801, "src": "12422:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1812, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "totalCoins", "nodeType": "MemberAccess", "referencedDeclaration": 1229, "src": "12422:18:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1813, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1801, "src": "12442:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1814, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currentCoins", "nodeType": "MemberAccess", "referencedDeclaration": 1231, "src": "12442:20:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1815, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1801, "src": "12464:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1816, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "startTime", "nodeType": "MemberAccess", "referencedDeclaration": 1233, "src": "12464:17:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1817, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1801, "src": "12483:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1818, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "endTime", "nodeType": "MemberAccess", "referencedDeclaration": 1235, "src": "12483:15:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1819, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1801, "src": "12500:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1820, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "coinsPerSecond", "nodeType": "MemberAccess", "referencedDeclaration": 1237, "src": "12500:22:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 1821, "name": "tranche", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1801, "src": "12524:7:3", "typeDescriptions": {"typeIdentifier": "t_struct$_Tranche_$1242_storage_ptr", "typeString": "struct MerkleVesting.Tranche storage pointer"}}, "id": 1822, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastWithdrawalTime", "nodeType": "MemberAccess", "referencedDeclaration": 1239, "src": "12524:26:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 1823, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "12402:149:3", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$", "typeString": "tuple(address,uint256,uint256,uint256,uint256,uint256,uint256)"}}, "functionReturnParameters": 1798, "id": 1824, "nodeType": "Return", "src": "12395:156:3"}]}, "functionSelector": "0b42abf2", "id": 1826, "implemented": true, "kind": "function", "modifiers": [], "name": "getTranche", "nameLocation": "12190:10:3", "nodeType": "FunctionDefinition", "parameters": {"id": 1783, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1780, "mutability": "mutable", "name": "treeIndex", "nameLocation": "12206:9:3", "nodeType": "VariableDeclaration", "scope": 1826, "src": "12201:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1779, "name": "uint", "nodeType": "ElementaryTypeName", "src": "12201:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1782, "mutability": "mutable", "name": "trancheIndex", "nameLocation": "12222:12:3", "nodeType": "VariableDeclaration", "scope": 1826, "src": "12217:17:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1781, "name": "uint", "nodeType": "ElementaryTypeName", "src": "12217:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12200:35:3"}, "returnParameters": {"id": 1798, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1785, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1826, "src": "12259:7:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1784, "name": "address", "nodeType": "ElementaryTypeName", "src": "12259:7:3", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1787, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1826, "src": "12268:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1786, "name": "uint", "nodeType": "ElementaryTypeName", "src": "12268:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1789, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1826, "src": "12274:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1788, "name": "uint", "nodeType": "ElementaryTypeName", "src": "12274:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1791, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1826, "src": "12280:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1790, "name": "uint", "nodeType": "ElementaryTypeName", "src": "12280:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1793, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1826, "src": "12286:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1792, "name": "uint", "nodeType": "ElementaryTypeName", "src": "12286:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1795, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1826, "src": "12292:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1794, "name": "uint", "nodeType": "ElementaryTypeName", "src": "12292:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1797, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1826, "src": "12298:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1796, "name": "uint", "nodeType": "ElementaryTypeName", "src": "12298:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12258:45:3"}, "scope": 1844, "src": "12181:377:3", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 1842, "nodeType": "Block", "src": "12647:64:3", "statements": [{"expression": {"baseExpression": {"expression": {"baseExpression": {"id": 1835, "name": "merkleTrees", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "12664:11:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MerkleTree_$1262_storage_$", "typeString": "mapping(uint256 => struct MerkleVesting.MerkleTree storage ref)"}}, "id": 1837, "indexExpression": {"id": 1836, "name": "treeIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1828, "src": "12676:9:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12664:22:3", "typeDescriptions": {"typeIdentifier": "t_struct$_MerkleTree_$1262_storage", "typeString": "struct MerkleVesting.MerkleTree storage ref"}}, "id": 1838, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "initialized", "nodeType": "MemberAccess", "referencedDeclaration": 1261, "src": "12664:34:3", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$", "typeString": "mapping(bytes32 => bool)"}}, "id": 1840, "indexExpression": {"id": 1839, "name": "leaf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1830, "src": "12699:4:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12664:40:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1834, "id": 1841, "nodeType": "Return", "src": "12657:47:3"}]}, "functionSelector": "d6801c2e", "id": 1843, "implemented": true, "kind": "function", "modifiers": [], "name": "getInitialized", "nameLocation": "12573:14:3", "nodeType": "FunctionDefinition", "parameters": {"id": 1831, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1828, "mutability": "mutable", "name": "treeIndex", "nameLocation": "12593:9:3", "nodeType": "VariableDeclaration", "scope": 1843, "src": "12588:14:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1827, "name": "uint", "nodeType": "ElementaryTypeName", "src": "12588:4:3", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1830, "mutability": "mutable", "name": "leaf", "nameLocation": "12612:4:3", "nodeType": "VariableDeclaration", "scope": 1843, "src": "12604:12:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 1829, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "12604:7:3", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "12587:30:3"}, "returnParameters": {"id": 1834, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1833, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1843, "src": "12641:4:3", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1832, "name": "bool", "nodeType": "ElementaryTypeName", "src": "12641:4:3", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "12640:6:3"}, "scope": 1844, "src": "12564:147:3", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 1845, "src": "558:12156:3", "usedErrors": [1309, 1315, 1324, 1330, 1336, 1342]}], "src": "42:12672:3"}, "bytecode": "608060405234801561001057600080fd5b50610e01806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639e18a0541161005b5780639e18a054146101de578063a8efa9ba146101f1578063d6801c2e14610204578063f16ad51e1461024657600080fd5b80630b42abf21461008d578063390b7c6614610136578063441a3e701461014d57806385d88cb114610162575b600080fd5b6100f261009b366004610ae8565b60009182526001602081815260408085209385526005938401909152909220805492810154600282015460038301546004840154948401546006909401546001600160a01b03909616969295919490939092909190565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0015b60405180910390f35b61013f60005481565b60405190815260200161012d565b61016061015b366004610ae8565b610259565b005b6101a8610170366004610b0a565b60016020819052600091825260409091208054918101546002820154600383015460049093015491926001600160a01b039091169185565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a00161012d565b6101606101ec366004610b3f565b61053e565b61013f6101ff366004610b92565b6105ee565b610236610212366004610ae8565b60009182526001602090815260408084209284526006909201905290205460ff1690565b604051901515815260200161012d565b610160610254366004610ae8565b6108da565b600082815260016020818152604080842085855260058101909252909220908101546102a75760405163c085915360e01b815260048101859052602481018490526044015b60405180910390fd5b80600701544210156102d9576040516001624be61f60e11b03198152600481018590526024810184905260440161029e565b6002810154610305576040516318c0dc6760e21b8152600481018590526024810184905260440161029e565b60008160040154421061031d5750600281015461033e565b600582015460068301546103319042610ca9565b61033b9190610cc0565b90505b42600683015560028301546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b79190610cdf565b845460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810186905291925083169063a9059cbb906044016020604051808303816000875af115801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f9190610cf8565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049b9190610cdf565b905060006104a98284610ca9565b9050808660020160008282546104bf9190610ca9565b92505081905550808760030160008282546104da9190610ca9565b9091555050855460028701546040516001600160a01b03909216918b917f1680e4cfe90468085407ef2b599dbe94b0aa30ff9f180f0e41d22eb71c8728729161052b91868252602082015260400190565b60405180910390a3505050505050505050565b600060016000806000815461055290610d21565b9182905550815260208101919091526040016000908120868155600181018690556002810180546001600160a01b0319166001600160a01b038716179055905490915061059f90836108da565b60005460408051878152602081018790526001600160a01b03861692917fb72ea3ed46a7513251023946d5d35916f3e1d76d748bb144e641d1162dee222f910160405180910390a35050505050565b60008715806105fe575060005488115b1561061f5760405163190a97ad60e01b81526004810189905260240161029e565b604080516001600160a01b0389166020820152908101879052606081018690526080810185905260a0810184905260009060c00160408051601f19818403018152918152815160209283012060008c81526001845282812082825260068101909452919091205490925060ff16156106b45760405163a0b0703160e01b8152600481018b90526024810183905260440161029e565b8054604051632769cd1f60e21b815273__MerkleLib_____________________________91639da7347c916106f0919086908990600401610d3c565b602060405180830381865af415801561070d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107319190610cf8565b61075457898285604051630da5a8fd60e41b815260040161029e93929190610d3c565b60008281526006820160205260408120805460ff191660011790556107798888610ca9565b610783908a610d91565b90506040518061010001604052808b6001600160a01b031681526020018a81526020018a81526020018981526020018881526020018281526020018981526020018781525082600501600084600401600081546107df90610d21565b919050819055815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155905050896001600160a01b031682600401548c7fe937d08e98e81d14e69757213935a0ccaf856636fb06fdafc51d7c78cc85e97d866040516108aa91815260200190565b60405180910390a4428610156108c8576108c88b8360040154610259565b50600401549998505050505050505050565b8115806108e8575060005482115b156109095760405163190a97ad60e01b81526004810183905260240161029e565b600082815260016020526040808220600281015491516370a0823160e01b815230600482015290926001600160a01b03909216919082906370a0823190602401602060405180830381865afa158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a9190610cdf565b6040516323b872dd60e01b8152336004820152306024820152604481018690529091506001600160a01b038316906323b872dd906064016020604051808303816000875af11580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a049190610cf8565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190610cdf565b90506000610a7e8383610ca9565b905080856003016000828254610a949190610db3565b909155505060028501546040518281526001600160a01b039091169088907fb162210da7d23d82c18cff5af46d3562661d26b42a6848fa28d64a6bdc70386a9060200160405180910390a350505050505050565b60008060408385031215610afb57600080fd5b50508035926020909101359150565b600060208284031215610b1c57600080fd5b5035919050565b80356001600160a01b0381168114610b3a57600080fd5b919050565b60008060008060808587031215610b5557600080fd5b8435935060208501359250610b6c60408601610b23565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610bad57600080fd5b873596506020610bbe818a01610b23565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff80821115610bf757600080fd5b818b0191508b601f830112610c0b57600080fd5b813581811115610c1d57610c1d610b7c565b8060051b604051601f19603f83011681018181108582111715610c4257610c42610b7c565b60405291825284820192508381018501918e831115610c6057600080fd5b938501935b82851015610c7e57843584529385019392850192610c65565b80965050505050505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b600082821015610cbb57610cbb610c93565b500390565b6000816000190483118215151615610cda57610cda610c93565b500290565b600060208284031215610cf157600080fd5b5051919050565b600060208284031215610d0a57600080fd5b81518015158114610d1a57600080fd5b9392505050565b6000600019821415610d3557610d35610c93565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015610d8357845183529383019391830191600101610d67565b509098975050505050505050565b600082610dae57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610dc657610dc6610c93565b50019056fea2646970667358221220a8823a183ddbc790db32dfe51b603f8da83eb9b9b8042a24627ef7e1c33322e564736f6c634300080c0033", "bytecodeSha1": "6e9faf115e01af89ec2fc65e3c2edab2969bbf27", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.12+commit.f00d7308"}, "contractName": "MerkleVesting", "coverageMap": {"branches": {"1": {}, "3": {"MerkleVesting.depositTokens": {"35": [5031, 5045, true], "36": [5049, 5069, false]}, "MerkleVesting.initialize": {"31": [7454, 7468, true], "32": [7472, 7492, false], "33": [8034, 8056, false], "34": [9269, 9304, false]}, "MerkleVesting.withdraw": {"29": [10297, 10340, false], "30": [10734, 10768, false]}}, "4": {}}, "statements": {"1": {}, "3": {"MerkleVesting.addMerkleRoot": {"12": [4207, 4230], "13": [4240, 4264], "14": [4274, 4306], "15": [4346, 4383], "16": [4393, 4456]}, "MerkleVesting.depositTokens": {"25": [5027, 5126], "26": [5703, 5755], "27": [6040, 6071], "28": [6081, 6143]}, "MerkleVesting.getInitialized": {"1": [12657, 12704]}, "MerkleVesting.getTranche": {"0": [12395, 12551]}, "MerkleVesting.initialize": {"17": [7450, 7549], "18": [8030, 8125], "19": [8206, 8323], "20": [8394, 8423], "21": [8709, 9082], "22": [9093, 9175], "23": [9320, 9368], "24": [9388, 9422]}, "MerkleVesting.withdraw": {"2": [10129, 10235], "3": [10293, 10417], "4": [10469, 10569], "5": [10784, 10824], "6": [10897, 10988], "7": [11094, 11138], "8": [11632, 11684], "9": [11937, 11965], "10": [12051, 12076], "11": [12087, 12168]}}, "4": {}}}, "dependencies": ["IERC20", "MerkleLib"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c80639e18a0541161005b5780639e18a054146101de578063a8efa9ba146101f1578063d6801c2e14610204578063f16ad51e1461024657600080fd5b80630b42abf21461008d578063390b7c6614610136578063441a3e701461014d57806385d88cb114610162575b600080fd5b6100f261009b366004610ae8565b60009182526001602081815260408085209385526005938401909152909220805492810154600282015460038301546004840154948401546006909401546001600160a01b03909616969295919490939092909190565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0015b60405180910390f35b61013f60005481565b60405190815260200161012d565b61016061015b366004610ae8565b610259565b005b6101a8610170366004610b0a565b60016020819052600091825260409091208054918101546002820154600383015460049093015491926001600160a01b039091169185565b6040805195865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a00161012d565b6101606101ec366004610b3f565b61053e565b61013f6101ff366004610b92565b6105ee565b610236610212366004610ae8565b60009182526001602090815260408084209284526006909201905290205460ff1690565b604051901515815260200161012d565b610160610254366004610ae8565b6108da565b600082815260016020818152604080842085855260058101909252909220908101546102a75760405163c085915360e01b815260048101859052602481018490526044015b60405180910390fd5b80600701544210156102d9576040516001624be61f60e11b03198152600481018590526024810184905260440161029e565b6002810154610305576040516318c0dc6760e21b8152600481018590526024810184905260440161029e565b60008160040154421061031d5750600281015461033e565b600582015460068301546103319042610ca9565b61033b9190610cc0565b90505b42600683015560028301546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b79190610cdf565b845460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810186905291925083169063a9059cbb906044016020604051808303816000875af115801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f9190610cf8565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049b9190610cdf565b905060006104a98284610ca9565b9050808660020160008282546104bf9190610ca9565b92505081905550808760030160008282546104da9190610ca9565b9091555050855460028701546040516001600160a01b03909216918b917f1680e4cfe90468085407ef2b599dbe94b0aa30ff9f180f0e41d22eb71c8728729161052b91868252602082015260400190565b60405180910390a3505050505050505050565b600060016000806000815461055290610d21565b9182905550815260208101919091526040016000908120868155600181018690556002810180546001600160a01b0319166001600160a01b038716179055905490915061059f90836108da565b60005460408051878152602081018790526001600160a01b03861692917fb72ea3ed46a7513251023946d5d35916f3e1d76d748bb144e641d1162dee222f910160405180910390a35050505050565b60008715806105fe575060005488115b1561061f5760405163190a97ad60e01b81526004810189905260240161029e565b604080516001600160a01b0389166020820152908101879052606081018690526080810185905260a0810184905260009060c00160408051601f19818403018152918152815160209283012060008c81526001845282812082825260068101909452919091205490925060ff16156106b45760405163a0b0703160e01b8152600481018b90526024810183905260440161029e565b8054604051632769cd1f60e21b815273__$61dd25696c02d5bd2863c8d2c1a2324a87$__91639da7347c916106f0919086908990600401610d3c565b602060405180830381865af415801561070d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107319190610cf8565b61075457898285604051630da5a8fd60e41b815260040161029e93929190610d3c565b60008281526006820160205260408120805460ff191660011790556107798888610ca9565b610783908a610d91565b90506040518061010001604052808b6001600160a01b031681526020018a81526020018a81526020018981526020018881526020018281526020018981526020018781525082600501600084600401600081546107df90610d21565b919050819055815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155905050896001600160a01b031682600401548c7fe937d08e98e81d14e69757213935a0ccaf856636fb06fdafc51d7c78cc85e97d866040516108aa91815260200190565b60405180910390a4428610156108c8576108c88b8360040154610259565b50600401549998505050505050505050565b8115806108e8575060005482115b156109095760405163190a97ad60e01b81526004810183905260240161029e565b600082815260016020526040808220600281015491516370a0823160e01b815230600482015290926001600160a01b03909216919082906370a0823190602401602060405180830381865afa158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a9190610cdf565b6040516323b872dd60e01b8152336004820152306024820152604481018690529091506001600160a01b038316906323b872dd906064016020604051808303816000875af11580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a049190610cf8565b506040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190610cdf565b90506000610a7e8383610ca9565b905080856003016000828254610a949190610db3565b909155505060028501546040518281526001600160a01b039091169088907fb162210da7d23d82c18cff5af46d3562661d26b42a6848fa28d64a6bdc70386a9060200160405180910390a350505050505050565b60008060408385031215610afb57600080fd5b50508035926020909101359150565b600060208284031215610b1c57600080fd5b5035919050565b80356001600160a01b0381168114610b3a57600080fd5b919050565b60008060008060808587031215610b5557600080fd5b8435935060208501359250610b6c60408601610b23565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a031215610bad57600080fd5b873596506020610bbe818a01610b23565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff80821115610bf757600080fd5b818b0191508b601f830112610c0b57600080fd5b813581811115610c1d57610c1d610b7c565b8060051b604051601f19603f83011681018181108582111715610c4257610c42610b7c565b60405291825284820192508381018501918e831115610c6057600080fd5b938501935b82851015610c7e57843584529385019392850192610c65565b80965050505050505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b600082821015610cbb57610cbb610c93565b500390565b6000816000190483118215151615610cda57610cda610c93565b500290565b600060208284031215610cf157600080fd5b5051919050565b600060208284031215610d0a57600080fd5b81518015158114610d1a57600080fd5b9392505050565b6000600019821415610d3557610d35610c93565b5060010190565b6000606082018583526020858185015260606040850152818551808452608086019150828701935060005b81811015610d8357845183529383019391830191600101610d67565b509098975050505050505050565b600082610dae57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610dc657610dc6610c93565b50019056fea2646970667358221220a8823a183ddbc790db32dfe51b603f8da83eb9b9b8042a24627ef7e1c33322e564736f6c634300080c0033", "deployedSourceMap": "558:12156:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12181:377;;;;;;:::i;:::-;12259:7;12340:22;;;:11;:22;;;;;;;;:45;;;:31;;;;:45;;;;;;12403:17;;12422:18;;;;12442:20;;;;12464:17;;;;12483:15;;;;12500:22;;;;12524:26;;;;;-1:-1:-1;;;;;12403:17:3;;;;12422:18;;12442:20;;12464:17;;12483:15;;12500:22;;12524:26;12181:377;;;;;-1:-1:-1;;;;;600:32:5;;;582:51;;664:2;649:18;;642:34;;;;692:18;;;685:34;;;;750:2;735:18;;728:34;;;;793:3;778:19;;771:35;620:3;822:19;;815:35;881:3;866:19;;859:35;569:3;554:19;12181:377:3;;;;;;;;677:20;;;;;;;;;1051:25:5;;;1039:2;1024:18;677:20:3;905:177:5;9867:2308:3;;;;;;:::i;:::-;;:::i;:::-;;2260:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2260:47:3;;;;;;;;;;1531:25:5;;;1587:2;1572:18;;1565:34;;;;-1:-1:-1;;;;;1635:32:5;;;1615:18;;;1608:60;;;;1699:2;1684:18;;1677:34;;;;1742:3;1727:19;;1720:35;1518:3;1503:19;2260:47:3;1272:489:5;3976:487:3;;;;;;:::i;:::-;;:::i;7207:2222::-;;;;;;:::i;:::-;;:::i;12564:147::-;;;;;;:::i;:::-;12641:4;12664:22;;;:11;:22;;;;;;;;:40;;;:34;;;;:40;;;;;;;;12564:147;;;;4428:14:5;;4421:22;4403:41;;4391:2;4376:18;12564:147:3;4263:187:5;4959:1191:3;;;;;;:::i;:::-;;:::i;9867:2308::-;9938:23;9964:22;;;:11;:22;;;;;;;;10022:27;;;:13;;;:27;;;;;;10133:18;;;;10129:106;;10179:45;;-1:-1:-1;;;10179:45:3;;;;;4629:25:5;;;4670:18;;;4663:34;;;4602:18;;10179:45:3;;;;;;;;10129:106;10315:7;:25;;;10297:15;:43;10293:124;;;10363:43;;-1:-1:-1;;;;;;10363:43:3;;;;;4629:25:5;;;4670:18;;;4663:34;;;4602:18;;10363:43:3;4455:248:5;10293:124:3;10473:20;;;;10469:100;;10521:37;;-1:-1:-1;;;10521:37:3;;;;;4629:25:5;;;4670:18;;;4663:34;;;4602:18;;10521:37:3;4455:248:5;10469:100:3;10626:22;10753:7;:15;;;10734;:34;10730:269;;-1:-1:-1;10804:20:3;;;;10730:269;;;10966:22;;;;10936:26;;;;10918:44;;:15;:44;:::i;:::-;10917:71;;;;:::i;:::-;10897:91;;10730:269;11123:15;11094:26;;;:44;11171:17;;;;11220:30;;-1:-1:-1;;;11220:30:3;;11244:4;11220:30;;;5289:51:5;-1:-1:-1;;;;;11171:17:3;;;;11149:12;;11171:17;;11220:15;;5262:18:5;;11220:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11647:17;;11632:52;;-1:-1:-1;;;11632:52:3;;-1:-1:-1;;;;;11647:17:3;;;11632:52;;;5714:51:5;5781:18;;;5774:34;;;11199:51:3;;-1:-1:-1;11632:14:3;;;;;5687:18:5;;11632:52:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11806:30:3;;-1:-1:-1;;;11806:30:3;;11830:4;11806:30;;;5289:51:5;11786:17:3;;-1:-1:-1;;;;;11806:15:3;;;;;5262:18:5;;11806:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11786:50;-1:-1:-1;11846:9:3;11858:28;11786:50;11858:13;:28;:::i;:::-;11846:40;;11961:4;11937:7;:20;;;:28;;;;;;;:::i;:::-;;;;;;;;12072:4;12051;:17;;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;12122:17:3;;12147:20;;;;12092:76;;-1:-1:-1;;;;;12122:17:3;;;;12111:9;;12092:76;;;;12141:4;4629:25:5;;4685:2;4670:18;;4663:34;4617:2;4602:18;;4455:248;12092:76:3;;;;;;;;9927:2248;;;;;;;9867:2308;;:::o;3976:487::-;4148:23;4174:11;:23;4188:8;;4186:10;;;;;:::i;:::-;;;;;-1:-1:-1;4174:23:3;;;;;;;;;;;-1:-1:-1;4174:23:3;;;4207;;;4240:13;;;:24;;;4274:17;;;:32;;-1:-1:-1;;;;;;4274:32:3;-1:-1:-1;;;;;4274:32:3;;;;;4360:8;;4174:23;;-1:-1:-1;4346:37:3;;4370:12;4346:13;:37::i;:::-;4414:8;;4398:58;;;4629:25:5;;;4685:2;4670:18;;4663:34;;;-1:-1:-1;;;;;4398:58:3;;;4414:8;4398:58;;4602:18:5;4398:58:3;;;;;;;4082:381;3976:487;;;;:::o;7207:2222::-;7434:4;7454:14;;;:38;;;7484:8;;7472:9;:20;7454:38;7450:99;;;7515:23;;-1:-1:-1;;;7515:23:3;;;;;1051:25:5;;;1024:18;;7515:23:3;905:177:5;7450:99:3;7759:74;;;-1:-1:-1;;;;;6771:32:5;;7759:74:3;;;6753:51:5;6820:18;;;6813:34;;;6863:18;;;6856:34;;;6906:18;;;6899:34;;;6949:19;;;6942:35;;;7734:12:3;;6725:19:5;;7759:74:3;;;-1:-1:-1;;7759:74:3;;;;;;;;;7749:85;;7759:74;7749:85;;;;7925:23;7951:22;;;:11;:22;;;;;8034;;;:16;;;:22;;;;;;;;7749:85;;-1:-1:-1;8034:22:3;;8030:95;;;8079:35;;-1:-1:-1;;;8079:35:3;;;;;4629:25:5;;;4670:18;;;4663:34;;;4602:18;;8079:35:3;4455:248:5;8030:95:3;8210:13;;:38;;-1:-1:-1;;;8210:38:3;;:25;;;;:38;;:13;8236:4;;8242:5;;8210:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8206:117;;8289:9;8300:4;8306:5;8280:32;;-1:-1:-1;;;8280:32:3;;;;;;;;;;:::i;8206:117::-;8394:22;;;;:16;;;:22;;;;;:29;;-1:-1:-1;;8394:29:3;8419:4;8394:29;;;8627:19;8637:9;8627:7;:19;:::i;:::-;8613:34;;:10;:34;:::i;:::-;8591:56;;8756:326;;;;;;;;8777:11;-1:-1:-1;;;;;8756:326:3;;;;;8802:10;8756:326;;;;8857:10;8756:326;;;;8919:9;8756:326;;;;8942:7;8756:326;;;;8963:14;8756:326;;;;8991:9;8756:326;;;;9055:17;8756:326;;;8709:4;:13;;:44;8725:4;:27;;;8723:29;;;;;:::i;:::-;;;;;;;8709:44;;;;;;;;;;;:373;;;;;;;;;;;;;-1:-1:-1;;;;;8709:373:3;;;;;-1:-1:-1;;;;;8709:373:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9157:11;-1:-1:-1;;;;;9098:77:3;9128:4;:27;;;9117:9;9098:77;9170:4;9098:77;;;;1051:25:5;;1039:2;1024:18;;905:177;9098:77:3;;;;;;;;9289:15;9269:17;:35;9265:114;;;9320:48;9329:9;9340:4;:27;;;9320:8;:48::i;:::-;-1:-1:-1;9395:27:3;;;;7207:2222;-1:-1:-1;;;;;;;;;7207:2222:3:o;4959:1191::-;5031:14;;;:38;;;5061:8;;5049:9;:20;5031:38;5027:99;;;5092:23;;-1:-1:-1;;;5092:23:3;;;;;1051:25:5;;;1024:18;;5092:23:3;905:177:5;5027:99:3;5176:29;5208:22;;;:11;:22;;;;;;5263:23;;;;5318:30;;-1:-1:-1;;;5318:30:3;;5342:4;5318:30;;;5289:51:5;5208:22:3;;-1:-1:-1;;;;;5263:23:3;;;;5176:29;5263:23;;5318:15;;5262:18:5;;5318:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5703:52;;-1:-1:-1;;;5703:52:3;;5722:10;5703:52;;;9453:34:5;5742:4:3;9503:18:5;;;9496:43;9555:18;;;9548:34;;;5297:51:3;;-1:-1:-1;;;;;;5703:18:3;;;;;9388::5;;5703:52:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5786:30:3;;-1:-1:-1;;;5786:30:3;;5810:4;5786:30;;;5289:51:5;5766:17:3;;-1:-1:-1;;;;;5786:15:3;;;;;5262:18:5;;5786:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5766:50;-1:-1:-1;5928:9:3;5940:28;5955:13;5766:50;5940:28;:::i;:::-;5928:40;;6067:4;6040:10;:23;;;:31;;;;;;;:::i;:::-;;;;-1:-1:-1;;6113:23:3;;;;6086:57;;1051:25:5;;;-1:-1:-1;;;;;6113:23:3;;;;6102:9;;6086:57;;1039:2:5;1024:18;6086:57:3;;;;;;;5017:1133;;;;;4959:1191;;:::o;14:248:5:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:5;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:5:o;1087:180::-;1146:6;1199:2;1187:9;1178:7;1174:23;1170:32;1167:52;;;1215:1;1212;1205:12;1167:52;-1:-1:-1;1238:23:5;;1087:180;-1:-1:-1;1087:180:5:o;1766:173::-;1834:20;;-1:-1:-1;;;;;1883:31:5;;1873:42;;1863:70;;1929:1;1926;1919:12;1863:70;1766:173;;;:::o;1944:391::-;2030:6;2038;2046;2054;2107:3;2095:9;2086:7;2082:23;2078:33;2075:53;;;2124:1;2121;2114:12;2075:53;2160:9;2147:23;2137:33;;2217:2;2206:9;2202:18;2189:32;2179:42;;2240:38;2274:2;2263:9;2259:18;2240:38;:::i;:::-;1944:391;;;;-1:-1:-1;2230:48:5;;2325:2;2310:18;2297:32;;-1:-1:-1;;1944:391:5:o;2340:127::-;2401:10;2396:3;2392:20;2389:1;2382:31;2432:4;2429:1;2422:15;2456:4;2453:1;2446:15;2472:1533;2610:6;2618;2626;2634;2642;2650;2658;2711:3;2699:9;2690:7;2686:23;2682:33;2679:53;;;2728:1;2725;2718:12;2679:53;2764:9;2751:23;2741:33;;2793:2;2814:38;2848:2;2837:9;2833:18;2814:38;:::i;:::-;2804:48;;2899:2;2888:9;2884:18;2871:32;2861:42;;2950:2;2939:9;2935:18;2922:32;2912:42;;3001:3;2990:9;2986:19;2973:33;2963:43;;3053:3;3042:9;3038:19;3025:33;3015:43;;3109:3;3098:9;3094:19;3081:33;3133:18;3174:2;3166:6;3163:14;3160:34;;;3190:1;3187;3180:12;3160:34;3228:6;3217:9;3213:22;3203:32;;3273:7;3266:4;3262:2;3258:13;3254:27;3244:55;;3295:1;3292;3285:12;3244:55;3331:2;3318:16;3353:2;3349;3346:10;3343:36;;;3359:18;;:::i;:::-;3405:2;3402:1;3398:10;3437:2;3431:9;3500:2;3496:7;3491:2;3487;3483:11;3479:25;3471:6;3467:38;3555:6;3543:10;3540:22;3535:2;3523:10;3520:18;3517:46;3514:72;;;3566:18;;:::i;:::-;3602:2;3595:22;3652:18;;;3686:15;;;;-1:-1:-1;3728:11:5;;;3724:20;;;3756:19;;;3753:39;;;3788:1;3785;3778:12;3753:39;3812:11;;;;3832:142;3848:6;3843:3;3840:15;3832:142;;;3914:17;;3902:30;;3865:12;;;;3952;;;;3832:142;;;3993:6;3983:16;;;;;;;;2472:1533;;;;;;;;;;:::o;4708:127::-;4769:10;4764:3;4760:20;4757:1;4750:31;4800:4;4797:1;4790:15;4824:4;4821:1;4814:15;4840:125;4880:4;4908:1;4905;4902:8;4899:34;;;4913:18;;:::i;:::-;-1:-1:-1;4950:9:5;;4840:125::o;4970:168::-;5010:7;5076:1;5072;5068:6;5064:14;5061:1;5058:21;5053:1;5046:9;5039:17;5035:45;5032:71;;;5083:18;;:::i;:::-;-1:-1:-1;5123:9:5;;4970:168::o;5351:184::-;5421:6;5474:2;5462:9;5453:7;5449:23;5445:32;5442:52;;;5490:1;5487;5480:12;5442:52;-1:-1:-1;5513:16:5;;5351:184;-1:-1:-1;5351:184:5:o;5819:277::-;5886:6;5939:2;5927:9;5918:7;5914:23;5910:32;5907:52;;;5955:1;5952;5945:12;5907:52;5987:9;5981:16;6040:5;6033:13;6026:21;6019:5;6016:32;6006:60;;6062:1;6059;6052:12;6006:60;6085:5;5819:277;-1:-1:-1;;;5819:277:5:o;6101:135::-;6140:3;-1:-1:-1;;6161:17:5;;6158:43;;;6181:18;;:::i;:::-;-1:-1:-1;6228:1:5;6217:13;;6101:135::o;7241:783::-;7447:4;7495:2;7484:9;7480:18;7525:6;7514:9;7507:25;7551:2;7589:6;7584:2;7573:9;7569:18;7562:34;7632:2;7627;7616:9;7612:18;7605:30;7655:6;7690;7684:13;7721:6;7713;7706:22;7759:3;7748:9;7744:19;7737:26;;7798:2;7790:6;7786:15;7772:29;;7819:1;7829:169;7843:6;7840:1;7837:13;7829:169;;;7904:13;;7892:26;;7973:15;;;;7938:12;;;;7865:1;7858:9;7829:169;;;-1:-1:-1;8015:3:5;;7241:783;-1:-1:-1;;;;;;;;7241:783:5:o;8809:217::-;8849:1;8875;8865:132;;8919:10;8914:3;8910:20;8907:1;8900:31;8954:4;8951:1;8944:15;8982:4;8979:1;8972:15;8865:132;-1:-1:-1;9011:9:5;;8809:217::o;9593:128::-;9633:3;9664:1;9660:6;9657:1;9654:13;9651:39;;;9670:18;;:::i;:::-;-1:-1:-1;9706:9:5;;9593:128::o", "language": "Solidity", "natspec": {"author": "metapriest, adrian.wachel, marek.babiarz, radoslaw.gorecki", "details": "The contract cannot introspect into the contents of the merkle tree, except when provided a merkle proof", "kind": "dev", "methods": {"addMerkleRoot(bytes32,bytes32,address,uint256)": {"details": "Anyone may call this function, therefore we must make sure trees cannot affect each otherRoot hash should be built from (destination, totalCoins, startTime, endTime, lockPeriodEndTime)", "notice": "Add a new merkle tree to the contract, creating a new merkle-vesting-schedule", "params": {"ipfsHash": "the ipfs hash of the entire dataset, used for redundance so that creator can ensure merkleproof are always computable", "newRoot": "root hash of merkle tree representing vesting schedules", "tokenAddress": "the address of the token contract that is being distributed", "tokenBalance": "the amount of tokens user wishes to use to fund the airdrop, note trees can be under/overfunded"}}, "depositTokens(uint256,uint256)": {"details": "Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree maliciousIf the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs", "notice": "Add funds to an existing merkle-vesting-schedule", "params": {"treeIndex": "index into array-like map of merkleTrees", "value": "the amount of tokens user wishes to use to fund the airdrop, note trees can be underfunded"}}, "initialize(uint256,address,uint256,uint256,uint256,uint256,bytes32[])": {"details": "Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree maliciousIf the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs of global tree statsThe contract has no knowledge of the vesting schedules until this function is called", "notice": "Called once per recipient of a vesting schedule to initialize the vesting schedule", "params": {"destination": "address that will receive tokens", "endTime": "time vesting schedule completes, can be past or future", "lockPeriodEndTime": "time that coins become unlocked, can be after endTime", "proof": "array of hashes linking leaf hash of (destination, totalCoins, startTime, endTime, lockPeriodEndTime) to root", "startTime": "time that vesting schedule starts, can be past or future", "totalCoins": "amount of tokens to be released after vesting completes", "treeIndex": "index into array-like map of merkleTrees"}}, "withdraw(uint256,uint256)": {"details": "Anyone may call this function for anyone else, funds go to destination regardless, it's just a question ofwho provides the proof and pays the gas, msg.sender is not used in this function", "notice": "Claim funds as a recipient in the merkle-drop", "params": {"trancheIndex": "recipient of tokens", "treeIndex": "index into array-like map of merkleTrees, which tree should we apply the proof to?"}}}, "notice": "This contract is permissionless and public facing. Any fees must be included in the data of the merkle tree.", "title": "A factory pattern for merkle-vesting, that is, a time release schedule for tokens, using merkle proofs to scale", "version": 1}, "offset": [558, 12714], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E18A054 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9E18A054 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xA8EFA9BA EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xD6801C2E EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xF16AD51E EQ PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB42ABF2 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x390B7C66 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x85D88CB1 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP6 MSTORE PUSH1 0x5 SWAP4 DUP5 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP3 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD SWAP5 DUP5 ADD SLOAD PUSH1 0x6 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x160 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xAE8 JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A8 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x160 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x236 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D JUMP JUMPDEST PUSH2 0x160 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xAE8 JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP6 DUP6 MSTORE PUSH1 0x5 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH2 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC0859153 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH3 0x4BE61F PUSH1 0xE1 SHL SUB NOT DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH4 0x18C0DC67 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0x31D JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x33E JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD PUSH2 0x331 SWAP1 TIMESTAMP PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x33B SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP JUMPDEST TIMESTAMP PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x393 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A9 DUP3 DUP5 PUSH2 0xCA9 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP8 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP6 SLOAD PUSH1 0x2 DUP8 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP12 SWAP2 PUSH32 0x1680E4CFE90468085407EF2B599DBE94B0AA30FF9F180F0E41D22EB71C872872 SWAP2 PUSH2 0x52B SWAP2 DUP7 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD PUSH2 0x552 SWAP1 PUSH2 0xD21 JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE SWAP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x59F SWAP1 DUP4 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 SWAP2 PUSH32 0xB72EA3ED46A7513251023946D5D35916F3E1D76D748BB144E641D1162DEE222F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP8 ISZERO DUP1 PUSH2 0x5FE JUMPI POP PUSH1 0x0 SLOAD DUP9 GT JUMPDEST ISZERO PUSH2 0x61F JUMPI PUSH1 0x40 MLOAD PUSH4 0x190A97AD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x6 DUP2 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH1 0xFF AND ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA0B07031 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x29E JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2769CD1F PUSH1 0xE2 SHL DUP2 MSTORE PUSH20 0x0 SWAP2 PUSH4 0x9DA7347C SWAP2 PUSH2 0x6F0 SWAP2 SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x70D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x731 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x754 JUMPI DUP10 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH4 0xDA5A8FD PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x779 DUP9 DUP9 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x783 SWAP1 DUP11 PUSH2 0xD91 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE POP DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP5 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD PUSH2 0x7DF SWAP1 PUSH2 0xD21 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE SWAP1 POP POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x4 ADD SLOAD DUP13 PUSH32 0xE937D08E98E81D14E69757213935A0CCAF856636FB06FDAFC51D7C78CC85E97D DUP7 PUSH1 0x40 MLOAD PUSH2 0x8AA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 TIMESTAMP DUP7 LT ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x8C8 DUP12 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x259 JUMP JUMPDEST POP PUSH1 0x4 ADD SLOAD SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x8E8 JUMPI POP PUSH1 0x0 SLOAD DUP3 GT JUMPDEST ISZERO PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH4 0x190A97AD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x966 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98A SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA04 SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA7E DUP4 DUP4 PUSH2 0xCA9 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xB162210DA7D23D82C18CFF5AF46D3562661D26B42A6848FA28D64A6BDC70386A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0xB6C PUSH1 0x40 DUP7 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 PUSH2 0xBBE DUP2 DUP11 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0xB7C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC42 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP15 DUP4 GT ISZERO PUSH2 0xC60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xC7E JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xC65 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xCBB JUMPI PUSH2 0xCBB PUSH2 0xC93 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCDA JUMPI PUSH2 0xCDA PUSH2 0xC93 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD35 PUSH2 0xC93 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 DUP6 DUP2 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD83 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD67 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDAE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC6 PUSH2 0xC93 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 DUP3 GASPRICE XOR RETURNDATASIZE 0xDB 0xC7 SWAP1 0xDB ORIGIN 0xDF 0xE5 SHL PUSH1 0x3F DUP14 0xA8 RETURNDATACOPY 0xB9 0xB9 0xB8 DIV 0x2A 0x24 PUSH3 0x7EF7E1 0xC3 CALLER 0x22 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ", "pcMap": {"0": {"offset": [558, 12714], "op": "PUSH1", "path": "3", "value": "0x80"}, "2": {"fn": null, "offset": [558, 12714], "op": "PUSH1", "path": "3", "value": "0x40"}, "4": {"fn": null, "offset": [558, 12714], "op": "MSTORE", "path": "3"}, "5": {"fn": null, "offset": [558, 12714], "op": "CALLVALUE", "path": "3"}, "6": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "7": {"fn": null, "offset": [558, 12714], "op": "ISZERO", "path": "3"}, "8": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x10"}, "11": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "12": {"fn": null, "offset": [558, 12714], "op": "PUSH1", "path": "3", "value": "0x0"}, "14": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [558, 12714], "op": "REVERT", "path": "3"}, "16": {"fn": null, "offset": [558, 12714], "op": "JUMPDEST", "path": "3"}, "17": {"fn": null, "offset": [558, 12714], "op": "POP", "path": "3"}, "18": {"fn": null, "offset": [558, 12714], "op": "PUSH1", "path": "3", "value": "0x4"}, "20": {"fn": null, "offset": [558, 12714], "op": "CALLDATASIZE", "path": "3"}, "21": {"fn": null, "offset": [558, 12714], "op": "LT", "path": "3"}, "22": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x88"}, "25": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "26": {"fn": null, "offset": [558, 12714], "op": "PUSH1", "path": "3", "value": "0x0"}, "28": {"fn": null, "offset": [558, 12714], "op": "CALLDATALOAD", "path": "3"}, "29": {"fn": null, "offset": [558, 12714], "op": "PUSH1", "path": "3", "value": "0xE0"}, "31": {"fn": null, "offset": [558, 12714], "op": "SHR", "path": "3"}, "32": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "33": {"fn": null, "offset": [558, 12714], "op": "PUSH4", "path": "3", "value": "0x9E18A054"}, "38": {"fn": null, "offset": [558, 12714], "op": "GT", "path": "3"}, "39": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x5B"}, "42": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "43": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "44": {"fn": null, "offset": [558, 12714], "op": "PUSH4", "path": "3", "value": "0x9E18A054"}, "49": {"fn": null, "offset": [558, 12714], "op": "EQ", "path": "3"}, "50": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x1DE"}, "53": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "54": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "55": {"fn": null, "offset": [558, 12714], "op": "PUSH4", "path": "3", "value": "0xA8EFA9BA"}, "60": {"fn": null, "offset": [558, 12714], "op": "EQ", "path": "3"}, "61": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x1F1"}, "64": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "65": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "66": {"fn": null, "offset": [558, 12714], "op": "PUSH4", "path": "3", "value": "0xD6801C2E"}, "71": {"fn": null, "offset": [558, 12714], "op": "EQ", "path": "3"}, "72": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x204"}, "75": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "76": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "77": {"fn": null, "offset": [558, 12714], "op": "PUSH4", "path": "3", "value": "0xF16AD51E"}, "82": {"fn": null, "offset": [558, 12714], "op": "EQ", "path": "3"}, "83": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x246"}, "86": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "87": {"fn": null, "offset": [558, 12714], "op": "PUSH1", "path": "3", "value": "0x0"}, "89": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "90": {"fn": null, "offset": [558, 12714], "op": "REVERT", "path": "3"}, "91": {"fn": null, "offset": [558, 12714], "op": "JUMPDEST", "path": "3"}, "92": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "93": {"fn": null, "offset": [558, 12714], "op": "PUSH4", "path": "3", "value": "0xB42ABF2"}, "98": {"fn": null, "offset": [558, 12714], "op": "EQ", "path": "3"}, "99": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x8D"}, "102": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "103": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "104": {"fn": null, "offset": [558, 12714], "op": "PUSH4", "path": "3", "value": "0x390B7C66"}, "109": {"fn": null, "offset": [558, 12714], "op": "EQ", "path": "3"}, "110": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x136"}, "113": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "114": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "115": {"fn": null, "offset": [558, 12714], "op": "PUSH4", "path": "3", "value": "0x441A3E70"}, "120": {"fn": null, "offset": [558, 12714], "op": "EQ", "path": "3"}, "121": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x14D"}, "124": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "125": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "126": {"fn": null, "offset": [558, 12714], "op": "PUSH4", "path": "3", "value": "0x85D88CB1"}, "131": {"fn": null, "offset": [558, 12714], "op": "EQ", "path": "3"}, "132": {"fn": null, "offset": [558, 12714], "op": "PUSH2", "path": "3", "value": "0x162"}, "135": {"fn": null, "offset": [558, 12714], "op": "JUMPI", "path": "3"}, "136": {"fn": null, "offset": [558, 12714], "op": "JUMPDEST", "path": "3"}, "137": {"fn": null, "offset": [558, 12714], "op": "PUSH1", "path": "3", "value": "0x0"}, "139": {"fn": null, "offset": [558, 12714], "op": "DUP1", "path": "3"}, "140": {"first_revert": true, "fn": null, "offset": [558, 12714], "op": "REVERT", "path": "3"}, "141": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "JUMPDEST", "path": "3"}, "142": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "PUSH2", "path": "3", "value": "0xF2"}, "145": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "PUSH2", "path": "3", "value": "0x9B"}, "148": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "CALLDATASIZE", "path": "3"}, "149": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "PUSH1", "path": "3", "value": "0x4"}, "151": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "PUSH2", "path": "3", "value": "0xAE8"}, "154": {"fn": "MerkleVesting.getTranche", "jump": "i", "offset": [12181, 12558], "op": "JUMP", "path": "3"}, "155": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "JUMPDEST", "path": "3"}, "156": {"fn": "MerkleVesting.getTranche", "offset": [12259, 12266], "op": "PUSH1", "path": "3", "value": "0x0"}, "158": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "SWAP2", "path": "3"}, "159": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "DUP3", "path": "3"}, "160": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "MSTORE", "path": "3"}, "161": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12351], "op": "PUSH1", "path": "3", "value": "0x1"}, "163": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "PUSH1", "path": "3", "value": "0x20"}, "165": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "DUP2", "path": "3"}, "166": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "DUP2", "path": "3"}, "167": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "MSTORE", "path": "3"}, "168": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "PUSH1", "path": "3", "value": "0x40"}, "170": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "DUP1", "path": "3"}, "171": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "DUP6", "path": "3"}, "172": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12362], "op": "KECCAK256", "path": "3"}, "173": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12385], "op": "SWAP4", "path": "3"}, "174": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12385], "op": "DUP6", "path": "3"}, "175": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12385], "op": "MSTORE", "path": "3"}, "176": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12371], "op": "PUSH1", "path": "3", "value": "0x5"}, "178": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12371], "op": "SWAP4", "path": "3"}, "179": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12371], "op": "DUP5", "path": "3"}, "180": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12371], "op": "ADD", "path": "3"}, "181": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12385], "op": "SWAP1", "path": "3"}, "182": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12385], "op": "SWAP2", "path": "3"}, "183": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12385], "op": "MSTORE", "path": "3"}, "184": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12385], "op": "SWAP1", "path": "3"}, "185": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12385], "op": "SWAP3", "path": "3"}, "186": {"fn": "MerkleVesting.getTranche", "offset": [12340, 12385], "op": "KECCAK256", "path": "3"}, "187": {"fn": "MerkleVesting.getTranche", "offset": [12403, 12420], "op": "DUP1", "path": "3", "statement": 0}, "188": {"fn": "MerkleVesting.getTranche", "offset": [12403, 12420], "op": "SLOAD", "path": "3"}, "189": {"fn": "MerkleVesting.getTranche", "offset": [12422, 12440], "op": "SWAP3", "path": "3"}, "190": {"fn": "MerkleVesting.getTranche", "offset": [12422, 12440], "op": "DUP2", "path": "3"}, "191": {"fn": "MerkleVesting.getTranche", "offset": [12422, 12440], "op": "ADD", "path": "3"}, "192": {"fn": "MerkleVesting.getTranche", "offset": [12422, 12440], "op": "SLOAD", "path": "3"}, "193": {"fn": "MerkleVesting.getTranche", "offset": [12442, 12462], "op": "PUSH1", "path": "3", "value": "0x2"}, "195": {"fn": "MerkleVesting.getTranche", "offset": [12442, 12462], "op": "DUP3", "path": "3"}, "196": {"fn": "MerkleVesting.getTranche", "offset": [12442, 12462], "op": "ADD", "path": "3"}, "197": {"fn": "MerkleVesting.getTranche", "offset": [12442, 12462], "op": "SLOAD", "path": "3"}, "198": {"fn": "MerkleVesting.getTranche", "offset": [12464, 12481], "op": "PUSH1", "path": "3", "value": "0x3"}, "200": {"fn": "MerkleVesting.getTranche", "offset": [12464, 12481], "op": "DUP4", "path": "3"}, "201": {"fn": "MerkleVesting.getTranche", "offset": [12464, 12481], "op": "ADD", "path": "3"}, "202": {"fn": "MerkleVesting.getTranche", "offset": [12464, 12481], "op": "SLOAD", "path": "3"}, "203": {"fn": "MerkleVesting.getTranche", "offset": [12483, 12498], "op": "PUSH1", "path": "3", "value": "0x4"}, "205": {"fn": "MerkleVesting.getTranche", "offset": [12483, 12498], "op": "DUP5", "path": "3"}, "206": {"fn": "MerkleVesting.getTranche", "offset": [12483, 12498], "op": "ADD", "path": "3"}, "207": {"fn": "MerkleVesting.getTranche", "offset": [12483, 12498], "op": "SLOAD", "path": "3"}, "208": {"fn": "MerkleVesting.getTranche", "offset": [12500, 12522], "op": "SWAP5", "path": "3"}, "209": {"fn": "MerkleVesting.getTranche", "offset": [12500, 12522], "op": "DUP5", "path": "3"}, "210": {"fn": "MerkleVesting.getTranche", "offset": [12500, 12522], "op": "ADD", "path": "3"}, "211": {"fn": "MerkleVesting.getTranche", "offset": [12500, 12522], "op": "SLOAD", "path": "3"}, "212": {"fn": "MerkleVesting.getTranche", "offset": [12524, 12550], "op": "PUSH1", "path": "3", "value": "0x6"}, "214": {"fn": "MerkleVesting.getTranche", "offset": [12524, 12550], "op": "SWAP1", "path": "3"}, "215": {"fn": "MerkleVesting.getTranche", "offset": [12524, 12550], "op": "SWAP5", "path": "3"}, "216": {"fn": "MerkleVesting.getTranche", "offset": [12524, 12550], "op": "ADD", "path": "3"}, "217": {"fn": "MerkleVesting.getTranche", "offset": [12524, 12550], "op": "SLOAD", "path": "3"}, "218": {"op": "PUSH1", "value": "0x1"}, "220": {"op": "PUSH1", "value": "0x1"}, "222": {"op": "PUSH1", "value": "0xA0"}, "224": {"op": "SHL"}, "225": {"op": "SUB"}, "226": {"fn": "MerkleVesting.getTranche", "offset": [12403, 12420], "op": "SWAP1", "path": "3"}, "227": {"fn": "MerkleVesting.getTranche", "offset": [12403, 12420], "op": "SWAP7", "path": "3"}, "228": {"fn": "MerkleVesting.getTranche", "offset": [12403, 12420], "op": "AND", "path": "3"}, "229": {"fn": "MerkleVesting.getTranche", "offset": [12403, 12420], "op": "SWAP7", "path": "3"}, "230": {"fn": "MerkleVesting.getTranche", "offset": [12422, 12440], "op": "SWAP3", "path": "3"}, "231": {"fn": "MerkleVesting.getTranche", "offset": [12422, 12440], "op": "SWAP6", "path": "3"}, "232": {"fn": "MerkleVesting.getTranche", "offset": [12442, 12462], "op": "SWAP2", "path": "3"}, "233": {"fn": "MerkleVesting.getTranche", "offset": [12442, 12462], "op": "SWAP5", "path": "3"}, "234": {"fn": "MerkleVesting.getTranche", "offset": [12464, 12481], "op": "SWAP1", "path": "3"}, "235": {"fn": "MerkleVesting.getTranche", "offset": [12464, 12481], "op": "SWAP4", "path": "3"}, "236": {"fn": "MerkleVesting.getTranche", "offset": [12483, 12498], "op": "SWAP1", "path": "3"}, "237": {"fn": "MerkleVesting.getTranche", "offset": [12483, 12498], "op": "SWAP3", "path": "3"}, "238": {"fn": "MerkleVesting.getTranche", "offset": [12500, 12522], "op": "SWAP1", "path": "3"}, "239": {"fn": "MerkleVesting.getTranche", "offset": [12500, 12522], "op": "SWAP2", "path": "3"}, "240": {"fn": "MerkleVesting.getTranche", "offset": [12524, 12550], "op": "SWAP1", "path": "3"}, "241": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "JUMP", "path": "3"}, "242": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "JUMPDEST", "path": "3"}, "243": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "PUSH1", "path": "3", "value": "0x40"}, "245": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "DUP1", "path": "3"}, "246": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "MLOAD", "path": "3"}, "247": {"op": "PUSH1", "value": "0x1"}, "249": {"op": "PUSH1", "value": "0x1"}, "251": {"op": "PUSH1", "value": "0xA0"}, "253": {"op": "SHL"}, "254": {"op": "SUB"}, "255": {"op": "SWAP1"}, "256": {"op": "SWAP9"}, "257": {"op": "AND"}, "258": {"op": "DUP9"}, "259": {"op": "MSTORE"}, "260": {"op": "PUSH1", "value": "0x20"}, "262": {"op": "DUP9"}, "263": {"op": "ADD"}, "264": {"op": "SWAP7"}, "265": {"op": "SWAP1"}, "266": {"op": "SWAP7"}, "267": {"op": "MSTORE"}, "268": {"op": "SWAP5"}, "269": {"op": "DUP7"}, "270": {"op": "ADD"}, "271": {"op": "SWAP4"}, "272": {"op": "SWAP1"}, "273": {"op": "SWAP4"}, "274": {"op": "MSTORE"}, "275": {"op": "PUSH1", "value": "0x60"}, "277": {"op": "DUP6"}, "278": {"op": "ADD"}, "279": {"op": "SWAP2"}, "280": {"op": "SWAP1"}, "281": {"op": "SWAP2"}, "282": {"op": "MSTORE"}, "283": {"op": "PUSH1", "value": "0x80"}, "285": {"op": "DUP5"}, "286": {"op": "ADD"}, "287": {"op": "MSTORE"}, "288": {"op": "PUSH1", "value": "0xA0"}, "290": {"op": "DUP4"}, "291": {"op": "ADD"}, "292": {"op": "MSTORE"}, "293": {"op": "PUSH1", "value": "0xC0"}, "295": {"op": "DUP3"}, "296": {"op": "ADD"}, "297": {"op": "MSTORE"}, "298": {"op": "PUSH1", "value": "0xE0"}, "300": {"op": "ADD"}, "301": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "JUMPDEST", "path": "3"}, "302": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "PUSH1", "path": "3", "value": "0x40"}, "304": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "MLOAD", "path": "3"}, "305": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "DUP1", "path": "3"}, "306": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "SWAP2", "path": "3"}, "307": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "SUB", "path": "3"}, "308": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "SWAP1", "path": "3"}, "309": {"fn": "MerkleVesting.getTranche", "offset": [12181, 12558], "op": "RETURN", "path": "3"}, "310": {"offset": [677, 697], "op": "JUMPDEST", "path": "3"}, "311": {"fn": "MerkleVesting.getTranche", "offset": [677, 697], "op": "PUSH2", "path": "3", "value": "0x13F"}, "314": {"fn": "MerkleVesting.getTranche", "offset": [677, 697], "op": "PUSH1", "path": "3", "value": "0x0"}, "316": {"fn": "MerkleVesting.getTranche", "offset": [677, 697], "op": "SLOAD", "path": "3"}, "317": {"fn": "MerkleVesting.getTranche", "offset": [677, 697], "op": "DUP2", "path": "3"}, "318": {"fn": "MerkleVesting.getTranche", "offset": [677, 697], "op": "JUMP", "path": "3"}, "319": {"fn": "MerkleVesting.getTranche", "offset": [677, 697], "op": "JUMPDEST", "path": "3"}, "320": {"fn": "MerkleVesting.getTranche", "offset": [677, 697], "op": "PUSH1", "path": "3", "value": "0x40"}, "322": {"fn": "MerkleVesting.getTranche", "offset": [677, 697], "op": "MLOAD", "path": "3"}, "323": {"op": "SWAP1"}, "324": {"op": "DUP2"}, "325": {"op": "MSTORE"}, "326": {"op": "PUSH1", "value": "0x20"}, "328": {"op": "ADD"}, "329": {"offset": [677, 697], "op": "PUSH2", "path": "3", "value": "0x12D"}, "332": {"op": "JUMP"}, "333": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "JUMPDEST", "path": "3"}, "334": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "PUSH2", "path": "3", "value": "0x160"}, "337": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "PUSH2", "path": "3", "value": "0x15B"}, "340": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "CALLDATASIZE", "path": "3"}, "341": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "PUSH1", "path": "3", "value": "0x4"}, "343": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "PUSH2", "path": "3", "value": "0xAE8"}, "346": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [9867, 12175], "op": "JUMP", "path": "3"}, "347": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "JUMPDEST", "path": "3"}, "348": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "PUSH2", "path": "3", "value": "0x259"}, "351": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [9867, 12175], "op": "JUMP", "path": "3"}, "352": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "JUMPDEST", "path": "3"}, "353": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "STOP", "path": "3"}, "354": {"offset": [2260, 2307], "op": "JUMPDEST", "path": "3"}, "355": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH2", "path": "3", "value": "0x1A8"}, "358": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH2", "path": "3", "value": "0x170"}, "361": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "CALLDATASIZE", "path": "3"}, "362": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH1", "path": "3", "value": "0x4"}, "364": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH2", "path": "3", "value": "0xB0A"}, "367": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [2260, 2307], "op": "JUMP", "path": "3"}, "368": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "JUMPDEST", "path": "3"}, "369": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH1", "path": "3", "value": "0x1"}, "371": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH1", "path": "3", "value": "0x20"}, "373": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "DUP2", "path": "3"}, "374": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP1", "path": "3"}, "375": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "MSTORE", "path": "3"}, "376": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH1", "path": "3", "value": "0x0"}, "378": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP2", "path": "3"}, "379": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "DUP3", "path": "3"}, "380": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "MSTORE", "path": "3"}, "381": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH1", "path": "3", "value": "0x40"}, "383": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP1", "path": "3"}, "384": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP2", "path": "3"}, "385": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "KECCAK256", "path": "3"}, "386": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "DUP1", "path": "3"}, "387": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SLOAD", "path": "3"}, "388": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP2", "path": "3"}, "389": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "DUP2", "path": "3"}, "390": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "ADD", "path": "3"}, "391": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SLOAD", "path": "3"}, "392": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH1", "path": "3", "value": "0x2"}, "394": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "DUP3", "path": "3"}, "395": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "ADD", "path": "3"}, "396": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SLOAD", "path": "3"}, "397": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH1", "path": "3", "value": "0x3"}, "399": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "DUP4", "path": "3"}, "400": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "ADD", "path": "3"}, "401": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SLOAD", "path": "3"}, "402": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH1", "path": "3", "value": "0x4"}, "404": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP1", "path": "3"}, "405": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP4", "path": "3"}, "406": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "ADD", "path": "3"}, "407": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SLOAD", "path": "3"}, "408": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP2", "path": "3"}, "409": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP3", "path": "3"}, "410": {"op": "PUSH1", "value": "0x1"}, "412": {"op": "PUSH1", "value": "0x1"}, "414": {"op": "PUSH1", "value": "0xA0"}, "416": {"op": "SHL"}, "417": {"op": "SUB"}, "418": {"offset": [2260, 2307], "op": "SWAP1", "path": "3"}, "419": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP2", "path": "3"}, "420": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "AND", "path": "3"}, "421": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "SWAP2", "path": "3"}, "422": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "DUP6", "path": "3"}, "423": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "JUMP", "path": "3"}, "424": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "JUMPDEST", "path": "3"}, "425": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "PUSH1", "path": "3", "value": "0x40"}, "427": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "DUP1", "path": "3"}, "428": {"fn": "MerkleVesting.withdraw", "offset": [2260, 2307], "op": "MLOAD", "path": "3"}, "429": {"op": "SWAP6"}, "430": {"op": "DUP7"}, "431": {"op": "MSTORE"}, "432": {"op": "PUSH1", "value": "0x20"}, "434": {"op": "DUP7"}, "435": {"op": "ADD"}, "436": {"op": "SWAP5"}, "437": {"op": "SWAP1"}, "438": {"op": "SWAP5"}, "439": {"op": "MSTORE"}, "440": {"op": "PUSH1", "value": "0x1"}, "442": {"op": "PUSH1", "value": "0x1"}, "444": {"op": "PUSH1", "value": "0xA0"}, "446": {"op": "SHL"}, "447": {"op": "SUB"}, "448": {"op": "SWAP1"}, "449": {"op": "SWAP3"}, "450": {"op": "AND"}, "451": {"op": "SWAP3"}, "452": {"op": "DUP5"}, "453": {"op": "ADD"}, "454": {"op": "SWAP3"}, "455": {"op": "SWAP1"}, "456": {"op": "SWAP3"}, "457": {"op": "MSTORE"}, "458": {"op": "PUSH1", "value": "0x60"}, "460": {"op": "DUP4"}, "461": {"op": "ADD"}, "462": {"op": "SWAP2"}, "463": {"op": "SWAP1"}, "464": {"op": "SWAP2"}, "465": {"op": "MSTORE"}, "466": {"op": "PUSH1", "value": "0x80"}, "468": {"op": "DUP3"}, "469": {"op": "ADD"}, "470": {"op": "MSTORE"}, "471": {"op": "PUSH1", "value": "0xA0"}, "473": {"op": "ADD"}, "474": {"offset": [2260, 2307], "op": "PUSH2", "path": "3", "value": "0x12D"}, "477": {"op": "JUMP"}, "478": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "JUMPDEST", "path": "3"}, "479": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "PUSH2", "path": "3", "value": "0x160"}, "482": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "PUSH2", "path": "3", "value": "0x1EC"}, "485": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "CALLDATASIZE", "path": "3"}, "486": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "PUSH1", "path": "3", "value": "0x4"}, "488": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "PUSH2", "path": "3", "value": "0xB3F"}, "491": {"fn": "MerkleVesting.addMerkleRoot", "jump": "i", "offset": [3976, 4463], "op": "JUMP", "path": "3"}, "492": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "JUMPDEST", "path": "3"}, "493": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "PUSH2", "path": "3", "value": "0x53E"}, "496": {"fn": "MerkleVesting.addMerkleRoot", "jump": "i", "offset": [3976, 4463], "op": "JUMP", "path": "3"}, "497": {"fn": "MerkleVesting.initialize", "offset": [7207, 9429], "op": "JUMPDEST", "path": "3"}, "498": {"fn": "MerkleVesting.initialize", "offset": [7207, 9429], "op": "PUSH2", "path": "3", "value": "0x13F"}, "501": {"fn": "MerkleVesting.initialize", "offset": [7207, 9429], "op": "PUSH2", "path": "3", "value": "0x1FF"}, "504": {"fn": "MerkleVesting.initialize", "offset": [7207, 9429], "op": "CALLDATASIZE", "path": "3"}, "505": {"fn": "MerkleVesting.initialize", "offset": [7207, 9429], "op": "PUSH1", "path": "3", "value": "0x4"}, "507": {"fn": "MerkleVesting.initialize", "offset": [7207, 9429], "op": "PUSH2", "path": "3", "value": "0xB92"}, "510": {"fn": "MerkleVesting.initialize", "jump": "i", "offset": [7207, 9429], "op": "JUMP", "path": "3"}, "511": {"fn": "MerkleVesting.initialize", "offset": [7207, 9429], "op": "JUMPDEST", "path": "3"}, "512": {"fn": "MerkleVesting.initialize", "offset": [7207, 9429], "op": "PUSH2", "path": "3", "value": "0x5EE"}, "515": {"fn": "MerkleVesting.initialize", "jump": "i", "offset": [7207, 9429], "op": "JUMP", "path": "3"}, "516": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "JUMPDEST", "path": "3"}, "517": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "PUSH2", "path": "3", "value": "0x236"}, "520": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "PUSH2", "path": "3", "value": "0x212"}, "523": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "CALLDATASIZE", "path": "3"}, "524": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "PUSH1", "path": "3", "value": "0x4"}, "526": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "PUSH2", "path": "3", "value": "0xAE8"}, "529": {"fn": "MerkleVesting.getInitialized", "jump": "i", "offset": [12564, 12711], "op": "JUMP", "path": "3"}, "530": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "JUMPDEST", "path": "3"}, "531": {"fn": "MerkleVesting.getInitialized", "offset": [12641, 12645], "op": "PUSH1", "path": "3", "value": "0x0"}, "533": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "SWAP2", "path": "3", "statement": 1}, "534": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "DUP3", "path": "3"}, "535": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "MSTORE", "path": "3"}, "536": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12675], "op": "PUSH1", "path": "3", "value": "0x1"}, "538": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "PUSH1", "path": "3", "value": "0x20"}, "540": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "SWAP1", "path": "3"}, "541": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "DUP2", "path": "3"}, "542": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "MSTORE", "path": "3"}, "543": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "PUSH1", "path": "3", "value": "0x40"}, "545": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "DUP1", "path": "3"}, "546": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "DUP5", "path": "3"}, "547": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12686], "op": "KECCAK256", "path": "3"}, "548": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "SWAP3", "path": "3"}, "549": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "DUP5", "path": "3"}, "550": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "MSTORE", "path": "3"}, "551": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12698], "op": "PUSH1", "path": "3", "value": "0x6"}, "553": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12698], "op": "SWAP1", "path": "3"}, "554": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12698], "op": "SWAP3", "path": "3"}, "555": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12698], "op": "ADD", "path": "3"}, "556": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "SWAP1", "path": "3"}, "557": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "MSTORE", "path": "3"}, "558": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "SWAP1", "path": "3"}, "559": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "KECCAK256", "path": "3"}, "560": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "SLOAD", "path": "3"}, "561": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "PUSH1", "path": "3", "value": "0xFF"}, "563": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "AND", "path": "3"}, "564": {"fn": "MerkleVesting.getInitialized", "offset": [12664, 12704], "op": "SWAP1", "path": "3"}, "565": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "JUMP", "path": "3"}, "566": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "JUMPDEST", "path": "3"}, "567": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "PUSH1", "path": "3", "value": "0x40"}, "569": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "MLOAD", "path": "3"}, "570": {"op": "SWAP1"}, "571": {"op": "ISZERO"}, "572": {"op": "ISZERO"}, "573": {"op": "DUP2"}, "574": {"op": "MSTORE"}, "575": {"op": "PUSH1", "value": "0x20"}, "577": {"op": "ADD"}, "578": {"fn": "MerkleVesting.getInitialized", "offset": [12564, 12711], "op": "PUSH2", "path": "3", "value": "0x12D"}, "581": {"op": "JUMP"}, "582": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "JUMPDEST", "path": "3"}, "583": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "PUSH2", "path": "3", "value": "0x160"}, "586": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "PUSH2", "path": "3", "value": "0x254"}, "589": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "CALLDATASIZE", "path": "3"}, "590": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "PUSH1", "path": "3", "value": "0x4"}, "592": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "PUSH2", "path": "3", "value": "0xAE8"}, "595": {"fn": "MerkleVesting.depositTokens", "jump": "i", "offset": [4959, 6150], "op": "JUMP", "path": "3"}, "596": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "JUMPDEST", "path": "3"}, "597": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "PUSH2", "path": "3", "value": "0x8DA"}, "600": {"fn": "MerkleVesting.depositTokens", "jump": "i", "offset": [4959, 6150], "op": "JUMP", "path": "3"}, "601": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "JUMPDEST", "path": "3"}, "602": {"fn": "MerkleVesting.withdraw", "offset": [9938, 9961], "op": "PUSH1", "path": "3", "value": "0x0"}, "604": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "DUP3", "path": "3"}, "605": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "DUP2", "path": "3"}, "606": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "MSTORE", "path": "3"}, "607": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9975], "op": "PUSH1", "path": "3", "value": "0x1"}, "609": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "PUSH1", "path": "3", "value": "0x20"}, "611": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "DUP2", "path": "3"}, "612": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "DUP2", "path": "3"}, "613": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "MSTORE", "path": "3"}, "614": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "PUSH1", "path": "3", "value": "0x40"}, "616": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "DUP1", "path": "3"}, "617": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "DUP5", "path": "3"}, "618": {"fn": "MerkleVesting.withdraw", "offset": [9964, 9986], "op": "KECCAK256", "path": "3"}, "619": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10049], "op": "DUP6", "path": "3"}, "620": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10049], "op": "DUP6", "path": "3"}, "621": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10049], "op": "MSTORE", "path": "3"}, "622": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10035], "op": "PUSH1", "path": "3", "value": "0x5"}, "624": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10035], "op": "DUP2", "path": "3"}, "625": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10035], "op": "ADD", "path": "3"}, "626": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10049], "op": "SWAP1", "path": "3"}, "627": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10049], "op": "SWAP3", "path": "3"}, "628": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10049], "op": "MSTORE", "path": "3"}, "629": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10049], "op": "SWAP1", "path": "3"}, "630": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10049], "op": "SWAP3", "path": "3"}, "631": {"fn": "MerkleVesting.withdraw", "offset": [10022, 10049], "op": "KECCAK256", "path": "3"}, "632": {"fn": "MerkleVesting.withdraw", "offset": [10133, 10151], "op": "SWAP1", "path": "3", "statement": 2}, "633": {"fn": "MerkleVesting.withdraw", "offset": [10133, 10151], "op": "DUP2", "path": "3"}, "634": {"fn": "MerkleVesting.withdraw", "offset": [10133, 10151], "op": "ADD", "path": "3"}, "635": {"fn": "MerkleVesting.withdraw", "offset": [10133, 10151], "op": "SLOAD", "path": "3"}, "636": {"fn": "MerkleVesting.withdraw", "offset": [10129, 10235], "op": "PUSH2", "path": "3", "value": "0x2A7"}, "639": {"fn": "MerkleVesting.withdraw", "offset": [10129, 10235], "op": "JUMPI", "path": "3"}, "640": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "PUSH1", "path": "3", "value": "0x40"}, "642": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "MLOAD", "path": "3"}, "643": {"op": "PUSH4", "value": "0xC0859153"}, "648": {"op": "PUSH1", "value": "0xE0"}, "650": {"op": "SHL"}, "651": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "DUP2", "path": "3"}, "652": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "MSTORE", "path": "3"}, "653": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "PUSH1", "path": "3", "value": "0x4"}, "655": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "DUP2", "path": "3"}, "656": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "ADD", "path": "3"}, "657": {"op": "DUP6"}, "658": {"op": "SWAP1"}, "659": {"op": "MSTORE"}, "660": {"op": "PUSH1", "value": "0x24"}, "662": {"op": "DUP2"}, "663": {"op": "ADD"}, "664": {"op": "DUP5"}, "665": {"op": "SWAP1"}, "666": {"op": "MSTORE"}, "667": {"op": "PUSH1", "value": "0x44"}, "669": {"op": "ADD"}, "670": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "JUMPDEST", "path": "3"}, "671": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "PUSH1", "path": "3", "value": "0x40"}, "673": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "MLOAD", "path": "3"}, "674": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "DUP1", "path": "3"}, "675": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "SWAP2", "path": "3"}, "676": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "SUB", "path": "3"}, "677": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "SWAP1", "path": "3"}, "678": {"fn": "MerkleVesting.withdraw", "offset": [10179, 10224], "op": "REVERT", "path": "3"}, "679": {"fn": "MerkleVesting.withdraw", "offset": [10129, 10235], "op": "JUMPDEST", "path": "3"}, "680": {"fn": "MerkleVesting.withdraw", "offset": [10315, 10322], "op": "DUP1", "path": "3", "statement": 3}, "681": {"fn": "MerkleVesting.withdraw", "offset": [10315, 10340], "op": "PUSH1", "path": "3", "value": "0x7"}, "683": {"fn": "MerkleVesting.withdraw", "offset": [10315, 10340], "op": "ADD", "path": "3"}, "684": {"fn": "MerkleVesting.withdraw", "offset": [10315, 10340], "op": "SLOAD", "path": "3"}, "685": {"fn": "MerkleVesting.withdraw", "offset": [10297, 10312], "op": "TIMESTAMP", "path": "3"}, "686": {"branch": 29, "fn": "MerkleVesting.withdraw", "offset": [10297, 10340], "op": "LT", "path": "3"}, "687": {"fn": "MerkleVesting.withdraw", "offset": [10293, 10417], "op": "ISZERO", "path": "3"}, "688": {"fn": "MerkleVesting.withdraw", "offset": [10293, 10417], "op": "PUSH2", "path": "3", "value": "0x2D9"}, "691": {"branch": 29, "fn": "MerkleVesting.withdraw", "offset": [10293, 10417], "op": "JUMPI", "path": "3"}, "692": {"fn": "MerkleVesting.withdraw", "offset": [10363, 10406], "op": "PUSH1", "path": "3", "value": "0x40"}, "694": {"fn": "MerkleVesting.withdraw", "offset": [10363, 10406], "op": "MLOAD", "path": "3"}, "695": {"op": "PUSH1", "value": "0x1"}, "697": {"op": "PUSH3", "value": "0x4BE61F"}, "701": {"op": "PUSH1", "value": "0xE1"}, "703": {"op": "SHL"}, "704": {"op": "SUB"}, "705": {"op": "NOT"}, "706": {"fn": "MerkleVesting.withdraw", "offset": [10363, 10406], "op": "DUP2", "path": "3"}, "707": {"fn": "MerkleVesting.withdraw", "offset": [10363, 10406], "op": "MSTORE", "path": "3"}, "708": {"fn": "MerkleVesting.withdraw", "offset": [10363, 10406], "op": "PUSH1", "path": "3", "value": "0x4"}, "710": {"fn": "MerkleVesting.withdraw", "offset": [10363, 10406], "op": "DUP2", "path": "3"}, "711": {"fn": "MerkleVesting.withdraw", "offset": [10363, 10406], "op": "ADD", "path": "3"}, "712": {"op": "DUP6"}, "713": {"op": "SWAP1"}, "714": {"op": "MSTORE"}, "715": {"op": "PUSH1", "value": "0x24"}, "717": {"op": "DUP2"}, "718": {"op": "ADD"}, "719": {"op": "DUP5"}, "720": {"op": "SWAP1"}, "721": {"op": "MSTORE"}, "722": {"op": "PUSH1", "value": "0x44"}, "724": {"op": "ADD"}, "725": {"fn": "MerkleVesting.withdraw", "offset": [10363, 10406], "op": "PUSH2", "path": "3", "value": "0x29E"}, "728": {"op": "JUMP"}, "729": {"fn": "MerkleVesting.withdraw", "offset": [10293, 10417], "op": "JUMPDEST", "path": "3"}, "730": {"fn": "MerkleVesting.withdraw", "offset": [10473, 10493], "op": "PUSH1", "path": "3", "statement": 4, "value": "0x2"}, "732": {"fn": "MerkleVesting.withdraw", "offset": [10473, 10493], "op": "DUP2", "path": "3"}, "733": {"fn": "MerkleVesting.withdraw", "offset": [10473, 10493], "op": "ADD", "path": "3"}, "734": {"fn": "MerkleVesting.withdraw", "offset": [10473, 10493], "op": "SLOAD", "path": "3"}, "735": {"fn": "MerkleVesting.withdraw", "offset": [10469, 10569], "op": "PUSH2", "path": "3", "value": "0x305"}, "738": {"fn": "MerkleVesting.withdraw", "offset": [10469, 10569], "op": "JUMPI", "path": "3"}, "739": {"fn": "MerkleVesting.withdraw", "offset": [10521, 10558], "op": "PUSH1", "path": "3", "value": "0x40"}, "741": {"fn": "MerkleVesting.withdraw", "offset": [10521, 10558], "op": "MLOAD", "path": "3"}, "742": {"op": "PUSH4", "value": "0x18C0DC67"}, "747": {"op": "PUSH1", "value": "0xE2"}, "749": {"op": "SHL"}, "750": {"fn": "MerkleVesting.withdraw", "offset": [10521, 10558], "op": "DUP2", "path": "3"}, "751": {"fn": "MerkleVesting.withdraw", "offset": [10521, 10558], "op": "MSTORE", "path": "3"}, "752": {"fn": "MerkleVesting.withdraw", "offset": [10521, 10558], "op": "PUSH1", "path": "3", "value": "0x4"}, "754": {"fn": "MerkleVesting.withdraw", "offset": [10521, 10558], "op": "DUP2", "path": "3"}, "755": {"fn": "MerkleVesting.withdraw", "offset": [10521, 10558], "op": "ADD", "path": "3"}, "756": {"op": "DUP6"}, "757": {"op": "SWAP1"}, "758": {"op": "MSTORE"}, "759": {"op": "PUSH1", "value": "0x24"}, "761": {"op": "DUP2"}, "762": {"op": "ADD"}, "763": {"op": "DUP5"}, "764": {"op": "SWAP1"}, "765": {"op": "MSTORE"}, "766": {"op": "PUSH1", "value": "0x44"}, "768": {"op": "ADD"}, "769": {"fn": "MerkleVesting.withdraw", "offset": [10521, 10558], "op": "PUSH2", "path": "3", "value": "0x29E"}, "772": {"op": "JUMP"}, "773": {"fn": "MerkleVesting.withdraw", "offset": [10469, 10569], "op": "JUMPDEST", "path": "3"}, "774": {"fn": "MerkleVesting.withdraw", "offset": [10626, 10648], "op": "PUSH1", "path": "3", "value": "0x0"}, "776": {"fn": "MerkleVesting.withdraw", "offset": [10753, 10760], "op": "DUP2", "path": "3"}, "777": {"fn": "MerkleVesting.withdraw", "offset": [10753, 10768], "op": "PUSH1", "path": "3", "value": "0x4"}, "779": {"fn": "MerkleVesting.withdraw", "offset": [10753, 10768], "op": "ADD", "path": "3"}, "780": {"fn": "MerkleVesting.withdraw", "offset": [10753, 10768], "op": "SLOAD", "path": "3"}, "781": {"fn": "MerkleVesting.withdraw", "offset": [10734, 10749], "op": "TIMESTAMP", "path": "3"}, "782": {"branch": 30, "fn": "MerkleVesting.withdraw", "offset": [10734, 10768], "op": "LT", "path": "3"}, "783": {"fn": "MerkleVesting.withdraw", "offset": [10730, 10999], "op": "PUSH2", "path": "3", "value": "0x31D"}, "786": {"branch": 30, "fn": "MerkleVesting.withdraw", "offset": [10730, 10999], "op": "JUMPI", "path": "3"}, "787": {"op": "POP"}, "788": {"fn": "MerkleVesting.withdraw", "offset": [10804, 10824], "op": "PUSH1", "path": "3", "statement": 5, "value": "0x2"}, "790": {"fn": "MerkleVesting.withdraw", "offset": [10804, 10824], "op": "DUP2", "path": "3"}, "791": {"fn": "MerkleVesting.withdraw", "offset": [10804, 10824], "op": "ADD", "path": "3"}, "792": {"fn": "MerkleVesting.withdraw", "offset": [10804, 10824], "op": "SLOAD", "path": "3"}, "793": {"fn": "MerkleVesting.withdraw", "offset": [10730, 10999], "op": "PUSH2", "path": "3", "value": "0x33E"}, "796": {"fn": "MerkleVesting.withdraw", "offset": [10730, 10999], "op": "JUMP", "path": "3"}, "797": {"fn": "MerkleVesting.withdraw", "offset": [10730, 10999], "op": "JUMPDEST", "path": "3"}, "798": {"fn": "MerkleVesting.withdraw", "offset": [10966, 10988], "op": "PUSH1", "path": "3", "statement": 6, "value": "0x5"}, "800": {"fn": "MerkleVesting.withdraw", "offset": [10966, 10988], "op": "DUP3", "path": "3"}, "801": {"fn": "MerkleVesting.withdraw", "offset": [10966, 10988], "op": "ADD", "path": "3"}, "802": {"fn": "MerkleVesting.withdraw", "offset": [10966, 10988], "op": "SLOAD", "path": "3"}, "803": {"fn": "MerkleVesting.withdraw", "offset": [10936, 10962], "op": "PUSH1", "path": "3", "value": "0x6"}, "805": {"fn": "MerkleVesting.withdraw", "offset": [10936, 10962], "op": "DUP4", "path": "3"}, "806": {"fn": "MerkleVesting.withdraw", "offset": [10936, 10962], "op": "ADD", "path": "3"}, "807": {"fn": "MerkleVesting.withdraw", "offset": [10936, 10962], "op": "SLOAD", "path": "3"}, "808": {"fn": "MerkleVesting.withdraw", "offset": [10918, 10962], "op": "PUSH2", "path": "3", "value": "0x331"}, "811": {"fn": "MerkleVesting.withdraw", "offset": [10918, 10962], "op": "SWAP1", "path": "3"}, "812": {"fn": "MerkleVesting.withdraw", "offset": [10918, 10933], "op": "TIMESTAMP", "path": "3"}, "813": {"fn": "MerkleVesting.withdraw", "offset": [10918, 10962], "op": "PUSH2", "path": "3", "value": "0xCA9"}, "816": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [10918, 10962], "op": "JUMP", "path": "3"}, "817": {"fn": "MerkleVesting.withdraw", "offset": [10918, 10962], "op": "JUMPDEST", "path": "3"}, "818": {"fn": "MerkleVesting.withdraw", "offset": [10917, 10988], "op": "PUSH2", "path": "3", "value": "0x33B"}, "821": {"fn": "MerkleVesting.withdraw", "offset": [10917, 10988], "op": "SWAP2", "path": "3"}, "822": {"fn": "MerkleVesting.withdraw", "offset": [10917, 10988], "op": "SWAP1", "path": "3"}, "823": {"fn": "MerkleVesting.withdraw", "offset": [10917, 10988], "op": "PUSH2", "path": "3", "value": "0xCC0"}, "826": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [10917, 10988], "op": "JUMP", "path": "3"}, "827": {"fn": "MerkleVesting.withdraw", "offset": [10917, 10988], "op": "JUMPDEST", "path": "3"}, "828": {"fn": "MerkleVesting.withdraw", "offset": [10897, 10988], "op": "SWAP1", "path": "3"}, "829": {"fn": "MerkleVesting.withdraw", "offset": [10897, 10988], "op": "POP", "path": "3"}, "830": {"fn": "MerkleVesting.withdraw", "offset": [10730, 10999], "op": "JUMPDEST", "path": "3"}, "831": {"fn": "MerkleVesting.withdraw", "offset": [11123, 11138], "op": "TIMESTAMP", "path": "3", "statement": 7}, "832": {"fn": "MerkleVesting.withdraw", "offset": [11094, 11120], "op": "PUSH1", "path": "3", "value": "0x6"}, "834": {"fn": "MerkleVesting.withdraw", "offset": [11094, 11120], "op": "DUP4", "path": "3"}, "835": {"fn": "MerkleVesting.withdraw", "offset": [11094, 11120], "op": "ADD", "path": "3"}, "836": {"fn": "MerkleVesting.withdraw", "offset": [11094, 11138], "op": "SSTORE", "path": "3"}, "837": {"fn": "MerkleVesting.withdraw", "offset": [11171, 11188], "op": "PUSH1", "path": "3", "value": "0x2"}, "839": {"fn": "MerkleVesting.withdraw", "offset": [11171, 11188], "op": "DUP4", "path": "3"}, "840": {"fn": "MerkleVesting.withdraw", "offset": [11171, 11188], "op": "ADD", "path": "3"}, "841": {"fn": "MerkleVesting.withdraw", "offset": [11171, 11188], "op": "SLOAD", "path": "3"}, "842": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH1", "path": "3", "value": "0x40"}, "844": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "MLOAD", "path": "3"}, "845": {"op": "PUSH4", "value": "0x70A08231"}, "850": {"op": "PUSH1", "value": "0xE0"}, "852": {"op": "SHL"}, "853": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP2", "path": "3"}, "854": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "MSTORE", "path": "3"}, "855": {"fn": "MerkleVesting.withdraw", "offset": [11244, 11248], "op": "ADDRESS", "path": "3"}, "856": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH1", "path": "3", "value": "0x4"}, "858": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP3", "path": "3"}, "859": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "ADD", "path": "3"}, "860": {"op": "MSTORE"}, "861": {"op": "PUSH1", "value": "0x1"}, "863": {"op": "PUSH1", "value": "0x1"}, "865": {"op": "PUSH1", "value": "0xA0"}, "867": {"op": "SHL"}, "868": {"op": "SUB"}, "869": {"fn": "MerkleVesting.withdraw", "offset": [11171, 11188], "op": "SWAP1", "path": "3"}, "870": {"fn": "MerkleVesting.withdraw", "offset": [11171, 11188], "op": "SWAP2", "path": "3"}, "871": {"fn": "MerkleVesting.withdraw", "offset": [11171, 11188], "op": "AND", "path": "3"}, "872": {"fn": "MerkleVesting.withdraw", "offset": [11171, 11188], "op": "SWAP1", "path": "3"}, "873": {"fn": "MerkleVesting.withdraw", "offset": [11149, 11161], "op": "PUSH1", "path": "3", "value": "0x0"}, "875": {"fn": "MerkleVesting.withdraw", "offset": [11149, 11161], "op": "SWAP1", "path": "3"}, "876": {"fn": "MerkleVesting.withdraw", "offset": [11171, 11188], "op": "DUP3", "path": "3"}, "877": {"fn": "MerkleVesting.withdraw", "offset": [11171, 11188], "op": "SWAP1", "path": "3"}, "878": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11235], "op": "PUSH4", "path": "3", "value": "0x70A08231"}, "883": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11235], "op": "SWAP1", "path": "3"}, "884": {"op": "PUSH1", "value": "0x24"}, "886": {"op": "ADD"}, "887": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH1", "path": "3", "value": "0x20"}, "889": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH1", "path": "3", "value": "0x40"}, "891": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "MLOAD", "path": "3"}, "892": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP1", "path": "3"}, "893": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP4", "path": "3"}, "894": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "SUB", "path": "3"}, "895": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP2", "path": "3"}, "896": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP7", "path": "3"}, "897": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "GAS", "path": "3"}, "898": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "STATICCALL", "path": "3"}, "899": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "ISZERO", "path": "3"}, "900": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP1", "path": "3"}, "901": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "ISZERO", "path": "3"}, "902": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH2", "path": "3", "value": "0x393"}, "905": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "JUMPI", "path": "3"}, "906": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "RETURNDATASIZE", "path": "3"}, "907": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH1", "path": "3", "value": "0x0"}, "909": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP1", "path": "3"}, "910": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "RETURNDATACOPY", "path": "3"}, "911": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "RETURNDATASIZE", "path": "3"}, "912": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH1", "path": "3", "value": "0x0"}, "914": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "REVERT", "path": "3"}, "915": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "JUMPDEST", "path": "3"}, "916": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "POP", "path": "3"}, "917": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "POP", "path": "3"}, "918": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "POP", "path": "3"}, "919": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "POP", "path": "3"}, "920": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH1", "path": "3", "value": "0x40"}, "922": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "MLOAD", "path": "3"}, "923": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "RETURNDATASIZE", "path": "3"}, "924": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH1", "path": "3", "value": "0x1F"}, "926": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "NOT", "path": "3"}, "927": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH1", "path": "3", "value": "0x1F"}, "929": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP3", "path": "3"}, "930": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "ADD", "path": "3"}, "931": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "AND", "path": "3"}, "932": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP3", "path": "3"}, "933": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "ADD", "path": "3"}, "934": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP1", "path": "3"}, "935": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH1", "path": "3", "value": "0x40"}, "937": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "MSTORE", "path": "3"}, "938": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "POP", "path": "3"}, "939": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "DUP2", "path": "3"}, "940": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "ADD", "path": "3"}, "941": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "SWAP1", "path": "3"}, "942": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH2", "path": "3", "value": "0x3B7"}, "945": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "SWAP2", "path": "3"}, "946": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "SWAP1", "path": "3"}, "947": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "PUSH2", "path": "3", "value": "0xCDF"}, "950": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [11220, 11250], "op": "JUMP", "path": "3"}, "951": {"fn": "MerkleVesting.withdraw", "offset": [11220, 11250], "op": "JUMPDEST", "path": "3"}, "952": {"fn": "MerkleVesting.withdraw", "offset": [11647, 11664], "op": "DUP5", "path": "3", "statement": 8}, "953": {"fn": "MerkleVesting.withdraw", "offset": [11647, 11664], "op": "SLOAD", "path": "3"}, "954": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x40"}, "956": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "MLOAD", "path": "3"}, "957": {"op": "PUSH4", "value": "0xA9059CBB"}, "962": {"op": "PUSH1", "value": "0xE0"}, "964": {"op": "SHL"}, "965": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP2", "path": "3"}, "966": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "MSTORE", "path": "3"}, "967": {"op": "PUSH1", "value": "0x1"}, "969": {"op": "PUSH1", "value": "0x1"}, "971": {"op": "PUSH1", "value": "0xA0"}, "973": {"op": "SHL"}, "974": {"op": "SUB"}, "975": {"fn": "MerkleVesting.withdraw", "offset": [11647, 11664], "op": "SWAP2", "path": "3"}, "976": {"fn": "MerkleVesting.withdraw", "offset": [11647, 11664], "op": "DUP3", "path": "3"}, "977": {"fn": "MerkleVesting.withdraw", "offset": [11647, 11664], "op": "AND", "path": "3"}, "978": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x4"}, "980": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP3", "path": "3"}, "981": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "ADD", "path": "3"}, "982": {"op": "MSTORE"}, "983": {"op": "PUSH1", "value": "0x24"}, "985": {"op": "DUP2"}, "986": {"op": "ADD"}, "987": {"op": "DUP7"}, "988": {"op": "SWAP1"}, "989": {"op": "MSTORE"}, "990": {"fn": "MerkleVesting.withdraw", "offset": [11199, 11250], "op": "SWAP2", "path": "3"}, "991": {"fn": "MerkleVesting.withdraw", "offset": [11199, 11250], "op": "SWAP3", "path": "3"}, "992": {"op": "POP"}, "993": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11646], "op": "DUP4", "path": "3"}, "994": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11646], "op": "AND", "path": "3"}, "995": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11646], "op": "SWAP1", "path": "3"}, "996": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11646], "op": "PUSH4", "path": "3", "value": "0xA9059CBB"}, "1001": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11646], "op": "SWAP1", "path": "3"}, "1002": {"op": "PUSH1", "value": "0x44"}, "1004": {"op": "ADD"}, "1005": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x20"}, "1007": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x40"}, "1009": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "MLOAD", "path": "3"}, "1010": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP1", "path": "3"}, "1011": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP4", "path": "3"}, "1012": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "SUB", "path": "3"}, "1013": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP2", "path": "3"}, "1014": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x0"}, "1016": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP8", "path": "3"}, "1017": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "GAS", "path": "3"}, "1018": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "CALL", "path": "3"}, "1019": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "ISZERO", "path": "3"}, "1020": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP1", "path": "3"}, "1021": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "ISZERO", "path": "3"}, "1022": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH2", "path": "3", "value": "0x40B"}, "1025": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "JUMPI", "path": "3"}, "1026": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "RETURNDATASIZE", "path": "3"}, "1027": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x0"}, "1029": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP1", "path": "3"}, "1030": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "RETURNDATACOPY", "path": "3"}, "1031": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "RETURNDATASIZE", "path": "3"}, "1032": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x0"}, "1034": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "REVERT", "path": "3"}, "1035": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "JUMPDEST", "path": "3"}, "1036": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "POP", "path": "3"}, "1037": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "POP", "path": "3"}, "1038": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "POP", "path": "3"}, "1039": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "POP", "path": "3"}, "1040": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x40"}, "1042": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "MLOAD", "path": "3"}, "1043": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "RETURNDATASIZE", "path": "3"}, "1044": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x1F"}, "1046": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "NOT", "path": "3"}, "1047": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x1F"}, "1049": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP3", "path": "3"}, "1050": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "ADD", "path": "3"}, "1051": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "AND", "path": "3"}, "1052": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP3", "path": "3"}, "1053": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "ADD", "path": "3"}, "1054": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP1", "path": "3"}, "1055": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH1", "path": "3", "value": "0x40"}, "1057": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "MSTORE", "path": "3"}, "1058": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "POP", "path": "3"}, "1059": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "DUP2", "path": "3"}, "1060": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "ADD", "path": "3"}, "1061": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "SWAP1", "path": "3"}, "1062": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH2", "path": "3", "value": "0x42F"}, "1065": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "SWAP2", "path": "3"}, "1066": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "SWAP1", "path": "3"}, "1067": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "PUSH2", "path": "3", "value": "0xCF8"}, "1070": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [11632, 11684], "op": "JUMP", "path": "3"}, "1071": {"fn": "MerkleVesting.withdraw", "offset": [11632, 11684], "op": "JUMPDEST", "path": "3"}, "1072": {"op": "POP"}, "1073": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH1", "path": "3", "value": "0x40"}, "1075": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "MLOAD", "path": "3"}, "1076": {"op": "PUSH4", "value": "0x70A08231"}, "1081": {"op": "PUSH1", "value": "0xE0"}, "1083": {"op": "SHL"}, "1084": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP2", "path": "3"}, "1085": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "MSTORE", "path": "3"}, "1086": {"fn": "MerkleVesting.withdraw", "offset": [11830, 11834], "op": "ADDRESS", "path": "3"}, "1087": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH1", "path": "3", "value": "0x4"}, "1089": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP3", "path": "3"}, "1090": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "ADD", "path": "3"}, "1091": {"op": "MSTORE"}, "1092": {"fn": "MerkleVesting.withdraw", "offset": [11786, 11803], "op": "PUSH1", "path": "3", "value": "0x0"}, "1094": {"fn": "MerkleVesting.withdraw", "offset": [11786, 11803], "op": "SWAP1", "path": "3"}, "1095": {"op": "PUSH1", "value": "0x1"}, "1097": {"op": "PUSH1", "value": "0x1"}, "1099": {"op": "PUSH1", "value": "0xA0"}, "1101": {"op": "SHL"}, "1102": {"op": "SUB"}, "1103": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11821], "op": "DUP5", "path": "3"}, "1104": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11821], "op": "AND", "path": "3"}, "1105": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11821], "op": "SWAP1", "path": "3"}, "1106": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11821], "op": "PUSH4", "path": "3", "value": "0x70A08231"}, "1111": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11821], "op": "SWAP1", "path": "3"}, "1112": {"op": "PUSH1", "value": "0x24"}, "1114": {"op": "ADD"}, "1115": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH1", "path": "3", "value": "0x20"}, "1117": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH1", "path": "3", "value": "0x40"}, "1119": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "MLOAD", "path": "3"}, "1120": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP1", "path": "3"}, "1121": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP4", "path": "3"}, "1122": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "SUB", "path": "3"}, "1123": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP2", "path": "3"}, "1124": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP7", "path": "3"}, "1125": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "GAS", "path": "3"}, "1126": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "STATICCALL", "path": "3"}, "1127": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "ISZERO", "path": "3"}, "1128": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP1", "path": "3"}, "1129": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "ISZERO", "path": "3"}, "1130": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH2", "path": "3", "value": "0x477"}, "1133": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "JUMPI", "path": "3"}, "1134": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "RETURNDATASIZE", "path": "3"}, "1135": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH1", "path": "3", "value": "0x0"}, "1137": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP1", "path": "3"}, "1138": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "RETURNDATACOPY", "path": "3"}, "1139": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "RETURNDATASIZE", "path": "3"}, "1140": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH1", "path": "3", "value": "0x0"}, "1142": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "REVERT", "path": "3"}, "1143": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "JUMPDEST", "path": "3"}, "1144": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "POP", "path": "3"}, "1145": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "POP", "path": "3"}, "1146": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "POP", "path": "3"}, "1147": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "POP", "path": "3"}, "1148": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH1", "path": "3", "value": "0x40"}, "1150": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "MLOAD", "path": "3"}, "1151": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "RETURNDATASIZE", "path": "3"}, "1152": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH1", "path": "3", "value": "0x1F"}, "1154": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "NOT", "path": "3"}, "1155": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH1", "path": "3", "value": "0x1F"}, "1157": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP3", "path": "3"}, "1158": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "ADD", "path": "3"}, "1159": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "AND", "path": "3"}, "1160": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP3", "path": "3"}, "1161": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "ADD", "path": "3"}, "1162": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP1", "path": "3"}, "1163": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH1", "path": "3", "value": "0x40"}, "1165": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "MSTORE", "path": "3"}, "1166": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "POP", "path": "3"}, "1167": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "DUP2", "path": "3"}, "1168": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "ADD", "path": "3"}, "1169": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "SWAP1", "path": "3"}, "1170": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH2", "path": "3", "value": "0x49B"}, "1173": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "SWAP2", "path": "3"}, "1174": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "SWAP1", "path": "3"}, "1175": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "PUSH2", "path": "3", "value": "0xCDF"}, "1178": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [11806, 11836], "op": "JUMP", "path": "3"}, "1179": {"fn": "MerkleVesting.withdraw", "offset": [11806, 11836], "op": "JUMPDEST", "path": "3"}, "1180": {"fn": "MerkleVesting.withdraw", "offset": [11786, 11836], "op": "SWAP1", "path": "3"}, "1181": {"op": "POP"}, "1182": {"fn": "MerkleVesting.withdraw", "offset": [11846, 11855], "op": "PUSH1", "path": "3", "value": "0x0"}, "1184": {"fn": "MerkleVesting.withdraw", "offset": [11858, 11886], "op": "PUSH2", "path": "3", "value": "0x4A9"}, "1187": {"fn": "MerkleVesting.withdraw", "offset": [11786, 11836], "op": "DUP3", "path": "3"}, "1188": {"fn": "MerkleVesting.withdraw", "offset": [11858, 11871], "op": "DUP5", "path": "3"}, "1189": {"fn": "MerkleVesting.withdraw", "offset": [11858, 11886], "op": "PUSH2", "path": "3", "value": "0xCA9"}, "1192": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [11858, 11886], "op": "JUMP", "path": "3"}, "1193": {"fn": "MerkleVesting.withdraw", "offset": [11858, 11886], "op": "JUMPDEST", "path": "3"}, "1194": {"fn": "MerkleVesting.withdraw", "offset": [11846, 11886], "op": "SWAP1", "path": "3"}, "1195": {"fn": "MerkleVesting.withdraw", "offset": [11846, 11886], "op": "POP", "path": "3"}, "1196": {"fn": "MerkleVesting.withdraw", "offset": [11961, 11965], "op": "DUP1", "path": "3", "statement": 9}, "1197": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11944], "op": "DUP7", "path": "3"}, "1198": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11957], "op": "PUSH1", "path": "3", "value": "0x2"}, "1200": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11957], "op": "ADD", "path": "3"}, "1201": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11957], "op": "PUSH1", "path": "3", "value": "0x0"}, "1203": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "DUP3", "path": "3"}, "1204": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "DUP3", "path": "3"}, "1205": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "SLOAD", "path": "3"}, "1206": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "PUSH2", "path": "3", "value": "0x4BF"}, "1209": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "SWAP2", "path": "3"}, "1210": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "SWAP1", "path": "3"}, "1211": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "PUSH2", "path": "3", "value": "0xCA9"}, "1214": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [11937, 11965], "op": "JUMP", "path": "3"}, "1215": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "JUMPDEST", "path": "3"}, "1216": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "SWAP3", "path": "3"}, "1217": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "POP", "path": "3"}, "1218": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "POP", "path": "3"}, "1219": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "DUP2", "path": "3"}, "1220": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "SWAP1", "path": "3"}, "1221": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "SSTORE", "path": "3"}, "1222": {"fn": "MerkleVesting.withdraw", "offset": [11937, 11965], "op": "POP", "path": "3"}, "1223": {"fn": "MerkleVesting.withdraw", "offset": [12072, 12076], "op": "DUP1", "path": "3", "statement": 10}, "1224": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12055], "op": "DUP8", "path": "3"}, "1225": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12068], "op": "PUSH1", "path": "3", "value": "0x3"}, "1227": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12068], "op": "ADD", "path": "3"}, "1228": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12068], "op": "PUSH1", "path": "3", "value": "0x0"}, "1230": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "DUP3", "path": "3"}, "1231": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "DUP3", "path": "3"}, "1232": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "SLOAD", "path": "3"}, "1233": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "PUSH2", "path": "3", "value": "0x4DA"}, "1236": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "SWAP2", "path": "3"}, "1237": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "SWAP1", "path": "3"}, "1238": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "PUSH2", "path": "3", "value": "0xCA9"}, "1241": {"fn": "MerkleVesting.withdraw", "jump": "i", "offset": [12051, 12076], "op": "JUMP", "path": "3"}, "1242": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "JUMPDEST", "path": "3"}, "1243": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "SWAP1", "path": "3"}, "1244": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "SWAP2", "path": "3"}, "1245": {"fn": "MerkleVesting.withdraw", "offset": [12051, 12076], "op": "SSTORE", "path": "3"}, "1246": {"op": "POP"}, "1247": {"op": "POP"}, "1248": {"fn": "MerkleVesting.withdraw", "offset": [12122, 12139], "op": "DUP6", "path": "3", "statement": 11}, "1249": {"fn": "MerkleVesting.withdraw", "offset": [12122, 12139], "op": "SLOAD", "path": "3"}, "1250": {"fn": "MerkleVesting.withdraw", "offset": [12147, 12167], "op": "PUSH1", "path": "3", "value": "0x2"}, "1252": {"fn": "MerkleVesting.withdraw", "offset": [12147, 12167], "op": "DUP8", "path": "3"}, "1253": {"fn": "MerkleVesting.withdraw", "offset": [12147, 12167], "op": "ADD", "path": "3"}, "1254": {"fn": "MerkleVesting.withdraw", "offset": [12147, 12167], "op": "SLOAD", "path": "3"}, "1255": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "PUSH1", "path": "3", "value": "0x40"}, "1257": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "MLOAD", "path": "3"}, "1258": {"op": "PUSH1", "value": "0x1"}, "1260": {"op": "PUSH1", "value": "0x1"}, "1262": {"op": "PUSH1", "value": "0xA0"}, "1264": {"op": "SHL"}, "1265": {"op": "SUB"}, "1266": {"fn": "MerkleVesting.withdraw", "offset": [12122, 12139], "op": "SWAP1", "path": "3"}, "1267": {"fn": "MerkleVesting.withdraw", "offset": [12122, 12139], "op": "SWAP3", "path": "3"}, "1268": {"fn": "MerkleVesting.withdraw", "offset": [12122, 12139], "op": "AND", "path": "3"}, "1269": {"fn": "MerkleVesting.withdraw", "offset": [12122, 12139], "op": "SWAP2", "path": "3"}, "1270": {"fn": "MerkleVesting.withdraw", "offset": [12111, 12120], "op": "DUP12", "path": "3"}, "1271": {"fn": "MerkleVesting.withdraw", "offset": [12111, 12120], "op": "SWAP2", "path": "3"}, "1272": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "PUSH32", "path": "3", "value": "0x1680E4CFE90468085407EF2B599DBE94B0AA30FF9F180F0E41D22EB71C872872"}, "1305": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "SWAP2", "path": "3"}, "1306": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "PUSH2", "path": "3", "value": "0x52B"}, "1309": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "SWAP2", "path": "3"}, "1310": {"fn": "MerkleVesting.withdraw", "offset": [12141, 12145], "op": "DUP7", "path": "3"}, "1311": {"op": "DUP3"}, "1312": {"op": "MSTORE"}, "1313": {"op": "PUSH1", "value": "0x20"}, "1315": {"op": "DUP3"}, "1316": {"op": "ADD"}, "1317": {"op": "MSTORE"}, "1318": {"op": "PUSH1", "value": "0x40"}, "1320": {"op": "ADD"}, "1321": {"op": "SWAP1"}, "1322": {"op": "JUMP"}, "1323": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "JUMPDEST", "path": "3"}, "1324": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "PUSH1", "path": "3", "value": "0x40"}, "1326": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "MLOAD", "path": "3"}, "1327": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "DUP1", "path": "3"}, "1328": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "SWAP2", "path": "3"}, "1329": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "SUB", "path": "3"}, "1330": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "SWAP1", "path": "3"}, "1331": {"fn": "MerkleVesting.withdraw", "offset": [12092, 12168], "op": "LOG3", "path": "3"}, "1332": {"fn": "MerkleVesting.withdraw", "offset": [9927, 12175], "op": "POP", "path": "3"}, "1333": {"fn": "MerkleVesting.withdraw", "offset": [9927, 12175], "op": "POP", "path": "3"}, "1334": {"fn": "MerkleVesting.withdraw", "offset": [9927, 12175], "op": "POP", "path": "3"}, "1335": {"fn": "MerkleVesting.withdraw", "offset": [9927, 12175], "op": "POP", "path": "3"}, "1336": {"fn": "MerkleVesting.withdraw", "offset": [9927, 12175], "op": "POP", "path": "3"}, "1337": {"fn": "MerkleVesting.withdraw", "offset": [9927, 12175], "op": "POP", "path": "3"}, "1338": {"fn": "MerkleVesting.withdraw", "offset": [9927, 12175], "op": "POP", "path": "3"}, "1339": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "POP", "path": "3"}, "1340": {"fn": "MerkleVesting.withdraw", "offset": [9867, 12175], "op": "POP", "path": "3"}, "1341": {"fn": "MerkleVesting.withdraw", "jump": "o", "offset": [9867, 12175], "op": "JUMP", "path": "3"}, "1342": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "JUMPDEST", "path": "3"}, "1343": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4148, 4171], "op": "PUSH1", "path": "3", "value": "0x0"}, "1345": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4185], "op": "PUSH1", "path": "3", "value": "0x1"}, "1347": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "PUSH1", "path": "3", "value": "0x0"}, "1349": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4188, 4196], "op": "DUP1", "path": "3"}, "1350": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4188, 4196], "op": "PUSH1", "path": "3", "value": "0x0"}, "1352": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4186, 4196], "op": "DUP2", "path": "3"}, "1353": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4186, 4196], "op": "SLOAD", "path": "3"}, "1354": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4186, 4196], "op": "PUSH2", "path": "3", "value": "0x552"}, "1357": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4186, 4196], "op": "SWAP1", "path": "3"}, "1358": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4186, 4196], "op": "PUSH2", "path": "3", "value": "0xD21"}, "1361": {"fn": "MerkleVesting.addMerkleRoot", "jump": "i", "offset": [4186, 4196], "op": "JUMP", "path": "3"}, "1362": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4186, 4196], "op": "JUMPDEST", "path": "3"}, "1363": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4186, 4196], "op": "SWAP2", "path": "3"}, "1364": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4186, 4196], "op": "DUP3", "path": "3"}, "1365": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4186, 4196], "op": "SWAP1", "path": "3"}, "1366": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4186, 4196], "op": "SSTORE", "path": "3"}, "1367": {"op": "POP"}, "1368": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "DUP2", "path": "3"}, "1369": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "MSTORE", "path": "3"}, "1370": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "PUSH1", "path": "3", "value": "0x20"}, "1372": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "DUP2", "path": "3"}, "1373": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "ADD", "path": "3"}, "1374": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "SWAP2", "path": "3"}, "1375": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "SWAP1", "path": "3"}, "1376": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "SWAP2", "path": "3"}, "1377": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "MSTORE", "path": "3"}, "1378": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "PUSH1", "path": "3", "value": "0x40"}, "1380": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "ADD", "path": "3"}, "1381": {"op": "PUSH1", "value": "0x0"}, "1383": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "SWAP1", "path": "3"}, "1384": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "DUP2", "path": "3"}, "1385": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "KECCAK256", "path": "3"}, "1386": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4207, 4230], "op": "DUP7", "path": "3", "statement": 12}, "1387": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4207, 4230], "op": "DUP2", "path": "3"}, "1388": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4207, 4230], "op": "SSTORE", "path": "3"}, "1389": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4240, 4253], "op": "PUSH1", "path": "3", "statement": 13, "value": "0x1"}, "1391": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4240, 4253], "op": "DUP2", "path": "3"}, "1392": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4240, 4253], "op": "ADD", "path": "3"}, "1393": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4240, 4264], "op": "DUP7", "path": "3"}, "1394": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4240, 4264], "op": "SWAP1", "path": "3"}, "1395": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4240, 4264], "op": "SSTORE", "path": "3"}, "1396": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4291], "op": "PUSH1", "path": "3", "statement": 14, "value": "0x2"}, "1398": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4291], "op": "DUP2", "path": "3"}, "1399": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4291], "op": "ADD", "path": "3"}, "1400": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4306], "op": "DUP1", "path": "3"}, "1401": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4306], "op": "SLOAD", "path": "3"}, "1402": {"op": "PUSH1", "value": "0x1"}, "1404": {"op": "PUSH1", "value": "0x1"}, "1406": {"op": "PUSH1", "value": "0xA0"}, "1408": {"op": "SHL"}, "1409": {"op": "SUB"}, "1410": {"op": "NOT"}, "1411": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4306], "op": "AND", "path": "3"}, "1412": {"op": "PUSH1", "value": "0x1"}, "1414": {"op": "PUSH1", "value": "0x1"}, "1416": {"op": "PUSH1", "value": "0xA0"}, "1418": {"op": "SHL"}, "1419": {"op": "SUB"}, "1420": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4306], "op": "DUP8", "path": "3"}, "1421": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4306], "op": "AND", "path": "3"}, "1422": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4306], "op": "OR", "path": "3"}, "1423": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4306], "op": "SWAP1", "path": "3"}, "1424": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4274, 4306], "op": "SSTORE", "path": "3"}, "1425": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4360, 4368], "op": "SWAP1", "path": "3", "statement": 15}, "1426": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4360, 4368], "op": "SLOAD", "path": "3"}, "1427": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "SWAP1", "path": "3"}, "1428": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4174, 4197], "op": "SWAP2", "path": "3"}, "1429": {"op": "POP"}, "1430": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4346, 4383], "op": "PUSH2", "path": "3", "value": "0x59F"}, "1433": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4346, 4383], "op": "SWAP1", "path": "3"}, "1434": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4370, 4382], "op": "DUP4", "path": "3"}, "1435": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4346, 4359], "op": "PUSH2", "path": "3", "value": "0x8DA"}, "1438": {"fn": "MerkleVesting.addMerkleRoot", "jump": "i", "offset": [4346, 4383], "op": "JUMP", "path": "3"}, "1439": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4346, 4383], "op": "JUMPDEST", "path": "3"}, "1440": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4414, 4422], "op": "PUSH1", "path": "3", "statement": 16, "value": "0x0"}, "1442": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4414, 4422], "op": "SLOAD", "path": "3"}, "1443": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "PUSH1", "path": "3", "value": "0x40"}, "1445": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "DUP1", "path": "3"}, "1446": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "MLOAD", "path": "3"}, "1447": {"op": "DUP8"}, "1448": {"op": "DUP2"}, "1449": {"op": "MSTORE"}, "1450": {"op": "PUSH1", "value": "0x20"}, "1452": {"op": "DUP2"}, "1453": {"op": "ADD"}, "1454": {"op": "DUP8"}, "1455": {"op": "SWAP1"}, "1456": {"op": "MSTORE"}, "1457": {"op": "PUSH1", "value": "0x1"}, "1459": {"op": "PUSH1", "value": "0x1"}, "1461": {"op": "PUSH1", "value": "0xA0"}, "1463": {"op": "SHL"}, "1464": {"op": "SUB"}, "1465": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "DUP7", "path": "3"}, "1466": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "AND", "path": "3"}, "1467": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "SWAP3", "path": "3"}, "1468": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4414, 4422], "op": "SWAP2", "path": "3"}, "1469": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "PUSH32", "path": "3", "value": "0xB72EA3ED46A7513251023946D5D35916F3E1D76D748BB144E641D1162DEE222F"}, "1502": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "SWAP2", "path": "3"}, "1503": {"op": "ADD"}, "1504": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "PUSH1", "path": "3", "value": "0x40"}, "1506": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "MLOAD", "path": "3"}, "1507": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "DUP1", "path": "3"}, "1508": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "SWAP2", "path": "3"}, "1509": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "SUB", "path": "3"}, "1510": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "SWAP1", "path": "3"}, "1511": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4398, 4456], "op": "LOG3", "path": "3"}, "1512": {"fn": "MerkleVesting.addMerkleRoot", "offset": [4082, 4463], "op": "POP", "path": "3"}, "1513": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "POP", "path": "3"}, "1514": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "POP", "path": "3"}, "1515": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "POP", "path": "3"}, "1516": {"fn": "MerkleVesting.addMerkleRoot", "offset": [3976, 4463], "op": "POP", "path": "3"}, "1517": {"fn": "MerkleVesting.addMerkleRoot", "jump": "o", "offset": [3976, 4463], "op": "JUMP", "path": "3"}, "1518": {"fn": "MerkleVesting.initialize", "offset": [7207, 9429], "op": "JUMPDEST", "path": "3"}, "1519": {"fn": "MerkleVesting.initialize", "offset": [7434, 7438], "op": "PUSH1", "path": "3", "value": "0x0"}, "1521": {"fn": "MerkleVesting.initialize", "offset": [7454, 7468], "op": "DUP8", "path": "3", "statement": 17}, "1522": {"fn": "MerkleVesting.initialize", "offset": [7454, 7468], "op": "ISZERO", "path": "3"}, "1523": {"branch": 31, "fn": "MerkleVesting.initialize", "offset": [7454, 7468], "op": "DUP1", "path": "3"}, "1524": {"fn": "MerkleVesting.initialize", "offset": [7454, 7492], "op": "PUSH2", "path": "3", "value": "0x5FE"}, "1527": {"branch": 31, "fn": "MerkleVesting.initialize", "offset": [7454, 7492], "op": "JUMPI", "path": "3"}, "1528": {"fn": "MerkleVesting.initialize", "offset": [7454, 7492], "op": "POP", "path": "3"}, "1529": {"fn": "MerkleVesting.initialize", "offset": [7484, 7492], "op": "PUSH1", "path": "3", "value": "0x0"}, "1531": {"fn": "MerkleVesting.initialize", "offset": [7484, 7492], "op": "SLOAD", "path": "3"}, "1532": {"fn": "MerkleVesting.initialize", "offset": [7472, 7481], "op": "DUP9", "path": "3"}, "1533": {"branch": 32, "fn": "MerkleVesting.initialize", "offset": [7472, 7492], "op": "GT", "path": "3"}, "1534": {"fn": "MerkleVesting.initialize", "offset": [7454, 7492], "op": "JUMPDEST", "path": "3"}, "1535": {"fn": "MerkleVesting.initialize", "offset": [7450, 7549], "op": "ISZERO", "path": "3"}, "1536": {"fn": "MerkleVesting.initialize", "offset": [7450, 7549], "op": "PUSH2", "path": "3", "value": "0x61F"}, "1539": {"branch": 32, "fn": "MerkleVesting.initialize", "offset": [7450, 7549], "op": "JUMPI", "path": "3"}, "1540": {"fn": "MerkleVesting.initialize", "offset": [7515, 7538], "op": "PUSH1", "path": "3", "value": "0x40"}, "1542": {"fn": "MerkleVesting.initialize", "offset": [7515, 7538], "op": "MLOAD", "path": "3"}, "1543": {"op": "PUSH4", "value": "0x190A97AD"}, "1548": {"op": "PUSH1", "value": "0xE0"}, "1550": {"op": "SHL"}, "1551": {"fn": "MerkleVesting.initialize", "offset": [7515, 7538], "op": "DUP2", "path": "3"}, "1552": {"fn": "MerkleVesting.initialize", "offset": [7515, 7538], "op": "MSTORE", "path": "3"}, "1553": {"fn": "MerkleVesting.initialize", "offset": [7515, 7538], "op": "PUSH1", "path": "3", "value": "0x4"}, "1555": {"fn": "MerkleVesting.initialize", "offset": [7515, 7538], "op": "DUP2", "path": "3"}, "1556": {"fn": "MerkleVesting.initialize", "offset": [7515, 7538], "op": "ADD", "path": "3"}, "1557": {"op": "DUP10"}, "1558": {"op": "SWAP1"}, "1559": {"op": "MSTORE"}, "1560": {"op": "PUSH1", "value": "0x24"}, "1562": {"op": "ADD"}, "1563": {"fn": "MerkleVesting.initialize", "offset": [7515, 7538], "op": "PUSH2", "path": "3", "value": "0x29E"}, "1566": {"op": "JUMP"}, "1567": {"fn": "MerkleVesting.initialize", "offset": [7450, 7549], "op": "JUMPDEST", "path": "3"}, "1568": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "PUSH1", "path": "3", "value": "0x40"}, "1570": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "DUP1", "path": "3"}, "1571": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "MLOAD", "path": "3"}, "1572": {"op": "PUSH1", "value": "0x1"}, "1574": {"op": "PUSH1", "value": "0x1"}, "1576": {"op": "PUSH1", "value": "0xA0"}, "1578": {"op": "SHL"}, "1579": {"op": "SUB"}, "1580": {"op": "DUP10"}, "1581": {"op": "AND"}, "1582": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "PUSH1", "path": "3", "value": "0x20"}, "1584": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "DUP3", "path": "3"}, "1585": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "ADD", "path": "3"}, "1586": {"op": "MSTORE"}, "1587": {"op": "SWAP1"}, "1588": {"op": "DUP2"}, "1589": {"op": "ADD"}, "1590": {"op": "DUP8"}, "1591": {"op": "SWAP1"}, "1592": {"op": "MSTORE"}, "1593": {"op": "PUSH1", "value": "0x60"}, "1595": {"op": "DUP2"}, "1596": {"op": "ADD"}, "1597": {"op": "DUP7"}, "1598": {"op": "SWAP1"}, "1599": {"op": "MSTORE"}, "1600": {"op": "PUSH1", "value": "0x80"}, "1602": {"op": "DUP2"}, "1603": {"op": "ADD"}, "1604": {"op": "DUP6"}, "1605": {"op": "SWAP1"}, "1606": {"op": "MSTORE"}, "1607": {"op": "PUSH1", "value": "0xA0"}, "1609": {"op": "DUP2"}, "1610": {"op": "ADD"}, "1611": {"op": "DUP5"}, "1612": {"op": "SWAP1"}, "1613": {"op": "MSTORE"}, "1614": {"fn": "MerkleVesting.initialize", "offset": [7734, 7746], "op": "PUSH1", "path": "3", "value": "0x0"}, "1616": {"fn": "MerkleVesting.initialize", "offset": [7734, 7746], "op": "SWAP1", "path": "3"}, "1617": {"op": "PUSH1", "value": "0xC0"}, "1619": {"op": "ADD"}, "1620": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "PUSH1", "path": "3", "value": "0x40"}, "1622": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "DUP1", "path": "3"}, "1623": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "MLOAD", "path": "3"}, "1624": {"op": "PUSH1", "value": "0x1F"}, "1626": {"op": "NOT"}, "1627": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "DUP2", "path": "3"}, "1628": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "DUP5", "path": "3"}, "1629": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "SUB", "path": "3"}, "1630": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "ADD", "path": "3"}, "1631": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "DUP2", "path": "3"}, "1632": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "MSTORE", "path": "3"}, "1633": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "SWAP2", "path": "3"}, "1634": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "DUP2", "path": "3"}, "1635": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "MSTORE", "path": "3"}, "1636": {"fn": "MerkleVesting.initialize", "offset": [7749, 7834], "op": "DUP2", "path": "3"}, "1637": {"fn": "MerkleVesting.initialize", "offset": [7749, 7834], "op": "MLOAD", "path": "3"}, "1638": {"fn": "MerkleVesting.initialize", "offset": [7759, 7833], "op": "PUSH1", "path": "3", "value": "0x20"}, "1640": {"fn": "MerkleVesting.initialize", "offset": [7749, 7834], "op": "SWAP3", "path": "3"}, "1641": {"fn": "MerkleVesting.initialize", "offset": [7749, 7834], "op": "DUP4", "path": "3"}, "1642": {"fn": "MerkleVesting.initialize", "offset": [7749, 7834], "op": "ADD", "path": "3"}, "1643": {"fn": "MerkleVesting.initialize", "offset": [7749, 7834], "op": "KECCAK256", "path": "3"}, "1644": {"fn": "MerkleVesting.initialize", "offset": [7925, 7948], "op": "PUSH1", "path": "3", "value": "0x0"}, "1646": {"fn": "MerkleVesting.initialize", "offset": [7951, 7973], "op": "DUP13", "path": "3"}, "1647": {"fn": "MerkleVesting.initialize", "offset": [7951, 7973], "op": "DUP2", "path": "3"}, "1648": {"fn": "MerkleVesting.initialize", "offset": [7951, 7973], "op": "MSTORE", "path": "3"}, "1649": {"fn": "MerkleVesting.initialize", "offset": [7951, 7962], "op": "PUSH1", "path": "3", "value": "0x1"}, "1651": {"fn": "MerkleVesting.initialize", "offset": [7951, 7973], "op": "DUP5", "path": "3"}, "1652": {"fn": "MerkleVesting.initialize", "offset": [7951, 7973], "op": "MSTORE", "path": "3"}, "1653": {"fn": "MerkleVesting.initialize", "offset": [7951, 7973], "op": "DUP3", "path": "3"}, "1654": {"fn": "MerkleVesting.initialize", "offset": [7951, 7973], "op": "DUP2", "path": "3"}, "1655": {"fn": "MerkleVesting.initialize", "offset": [7951, 7973], "op": "KECCAK256", "path": "3"}, "1656": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "DUP3", "path": "3", "statement": 18}, "1657": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "DUP3", "path": "3"}, "1658": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "MSTORE", "path": "3"}, "1659": {"fn": "MerkleVesting.initialize", "offset": [8034, 8050], "op": "PUSH1", "path": "3", "value": "0x6"}, "1661": {"fn": "MerkleVesting.initialize", "offset": [8034, 8050], "op": "DUP2", "path": "3"}, "1662": {"fn": "MerkleVesting.initialize", "offset": [8034, 8050], "op": "ADD", "path": "3"}, "1663": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "SWAP1", "path": "3"}, "1664": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "SWAP5", "path": "3"}, "1665": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "MSTORE", "path": "3"}, "1666": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "SWAP2", "path": "3"}, "1667": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "SWAP1", "path": "3"}, "1668": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "SWAP2", "path": "3"}, "1669": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "KECCAK256", "path": "3"}, "1670": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "SLOAD", "path": "3"}, "1671": {"fn": "MerkleVesting.initialize", "offset": [7749, 7834], "op": "SWAP1", "path": "3"}, "1672": {"fn": "MerkleVesting.initialize", "offset": [7749, 7834], "op": "SWAP3", "path": "3"}, "1673": {"op": "POP"}, "1674": {"fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "PUSH1", "path": "3", "value": "0xFF"}, "1676": {"branch": 33, "fn": "MerkleVesting.initialize", "offset": [8034, 8056], "op": "AND", "path": "3"}, "1677": {"fn": "MerkleVesting.initialize", "offset": [8030, 8125], "op": "ISZERO", "path": "3"}, "1678": {"fn": "MerkleVesting.initialize", "offset": [8030, 8125], "op": "PUSH2", "path": "3", "value": "0x6B4"}, "1681": {"branch": 33, "fn": "MerkleVesting.initialize", "offset": [8030, 8125], "op": "JUMPI", "path": "3"}, "1682": {"fn": "MerkleVesting.initialize", "offset": [8079, 8114], "op": "PUSH1", "path": "3", "value": "0x40"}, "1684": {"fn": "MerkleVesting.initialize", "offset": [8079, 8114], "op": "MLOAD", "path": "3"}, "1685": {"op": "PUSH4", "value": "0xA0B07031"}, "1690": {"op": "PUSH1", "value": "0xE0"}, "1692": {"op": "SHL"}, "1693": {"fn": "MerkleVesting.initialize", "offset": [8079, 8114], "op": "DUP2", "path": "3"}, "1694": {"fn": "MerkleVesting.initialize", "offset": [8079, 8114], "op": "MSTORE", "path": "3"}, "1695": {"fn": "MerkleVesting.initialize", "offset": [8079, 8114], "op": "PUSH1", "path": "3", "value": "0x4"}, "1697": {"fn": "MerkleVesting.initialize", "offset": [8079, 8114], "op": "DUP2", "path": "3"}, "1698": {"fn": "MerkleVesting.initialize", "offset": [8079, 8114], "op": "ADD", "path": "3"}, "1699": {"op": "DUP12"}, "1700": {"op": "SWAP1"}, "1701": {"op": "MSTORE"}, "1702": {"op": "PUSH1", "value": "0x24"}, "1704": {"op": "DUP2"}, "1705": {"op": "ADD"}, "1706": {"op": "DUP4"}, "1707": {"op": "SWAP1"}, "1708": {"op": "MSTORE"}, "1709": {"op": "PUSH1", "value": "0x44"}, "1711": {"op": "ADD"}, "1712": {"fn": "MerkleVesting.initialize", "offset": [8079, 8114], "op": "PUSH2", "path": "3", "value": "0x29E"}, "1715": {"op": "JUMP"}, "1716": {"fn": "MerkleVesting.initialize", "offset": [8030, 8125], "op": "JUMPDEST", "path": "3"}, "1717": {"fn": "MerkleVesting.initialize", "offset": [8210, 8223], "op": "DUP1", "path": "3", "statement": 19}, "1718": {"fn": "MerkleVesting.initialize", "offset": [8210, 8223], "op": "SLOAD", "path": "3"}, "1719": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH1", "path": "3", "value": "0x40"}, "1721": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "MLOAD", "path": "3"}, "1722": {"op": "PUSH4", "value": "0x2769CD1F"}, "1727": {"op": "PUSH1", "value": "0xE2"}, "1729": {"op": "SHL"}, "1730": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP2", "path": "3"}, "1731": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "MSTORE", "path": "3"}, "1732": {"fn": "MerkleVesting.initialize", "offset": [8210, 8235], "op": "PUSH20", "path": "3", "value": "0x0"}, "1753": {"fn": "MerkleVesting.initialize", "offset": [8210, 8235], "op": "SWAP2", "path": "3"}, "1754": {"fn": "MerkleVesting.initialize", "offset": [8210, 8235], "op": "PUSH4", "path": "3", "value": "0x9DA7347C"}, "1759": {"fn": "MerkleVesting.initialize", "offset": [8210, 8235], "op": "SWAP2", "path": "3"}, "1760": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH2", "path": "3", "value": "0x6F0"}, "1763": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "SWAP2", "path": "3"}, "1764": {"fn": "MerkleVesting.initialize", "offset": [8210, 8223], "op": "SWAP1", "path": "3"}, "1765": {"fn": "MerkleVesting.initialize", "offset": [8236, 8240], "op": "DUP7", "path": "3"}, "1766": {"fn": "MerkleVesting.initialize", "offset": [8236, 8240], "op": "SWAP1", "path": "3"}, "1767": {"fn": "MerkleVesting.initialize", "offset": [8242, 8247], "op": "DUP10", "path": "3"}, "1768": {"fn": "MerkleVesting.initialize", "offset": [8242, 8247], "op": "SWAP1", "path": "3"}, "1769": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH1", "path": "3", "value": "0x4"}, "1771": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "ADD", "path": "3"}, "1772": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH2", "path": "3", "value": "0xD3C"}, "1775": {"fn": "MerkleVesting.initialize", "jump": "i", "offset": [8210, 8248], "op": "JUMP", "path": "3"}, "1776": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "JUMPDEST", "path": "3"}, "1777": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH1", "path": "3", "value": "0x20"}, "1779": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH1", "path": "3", "value": "0x40"}, "1781": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "MLOAD", "path": "3"}, "1782": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP1", "path": "3"}, "1783": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP4", "path": "3"}, "1784": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "SUB", "path": "3"}, "1785": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP2", "path": "3"}, "1786": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP7", "path": "3"}, "1787": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "GAS", "path": "3"}, "1788": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DELEGATECALL", "path": "3"}, "1789": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "ISZERO", "path": "3"}, "1790": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP1", "path": "3"}, "1791": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "ISZERO", "path": "3"}, "1792": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH2", "path": "3", "value": "0x70D"}, "1795": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "JUMPI", "path": "3"}, "1796": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "RETURNDATASIZE", "path": "3"}, "1797": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH1", "path": "3", "value": "0x0"}, "1799": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP1", "path": "3"}, "1800": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "RETURNDATACOPY", "path": "3"}, "1801": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "RETURNDATASIZE", "path": "3"}, "1802": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH1", "path": "3", "value": "0x0"}, "1804": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "REVERT", "path": "3"}, "1805": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "JUMPDEST", "path": "3"}, "1806": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "POP", "path": "3"}, "1807": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "POP", "path": "3"}, "1808": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "POP", "path": "3"}, "1809": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "POP", "path": "3"}, "1810": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH1", "path": "3", "value": "0x40"}, "1812": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "MLOAD", "path": "3"}, "1813": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "RETURNDATASIZE", "path": "3"}, "1814": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH1", "path": "3", "value": "0x1F"}, "1816": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "NOT", "path": "3"}, "1817": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH1", "path": "3", "value": "0x1F"}, "1819": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP3", "path": "3"}, "1820": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "ADD", "path": "3"}, "1821": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "AND", "path": "3"}, "1822": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP3", "path": "3"}, "1823": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "ADD", "path": "3"}, "1824": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP1", "path": "3"}, "1825": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH1", "path": "3", "value": "0x40"}, "1827": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "MSTORE", "path": "3"}, "1828": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "POP", "path": "3"}, "1829": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "DUP2", "path": "3"}, "1830": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "ADD", "path": "3"}, "1831": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "SWAP1", "path": "3"}, "1832": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH2", "path": "3", "value": "0x731"}, "1835": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "SWAP2", "path": "3"}, "1836": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "SWAP1", "path": "3"}, "1837": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "PUSH2", "path": "3", "value": "0xCF8"}, "1840": {"fn": "MerkleVesting.initialize", "jump": "i", "offset": [8210, 8248], "op": "JUMP", "path": "3"}, "1841": {"fn": "MerkleVesting.initialize", "offset": [8210, 8248], "op": "JUMPDEST", "path": "3"}, "1842": {"fn": "MerkleVesting.initialize", "offset": [8206, 8323], "op": "PUSH2", "path": "3", "value": "0x754"}, "1845": {"fn": "MerkleVesting.initialize", "offset": [8206, 8323], "op": "JUMPI", "path": "3"}, "1846": {"fn": "MerkleVesting.initialize", "offset": [8289, 8298], "op": "DUP10", "path": "3"}, "1847": {"fn": "MerkleVesting.initialize", "offset": [8300, 8304], "op": "DUP3", "path": "3"}, "1848": {"fn": "MerkleVesting.initialize", "offset": [8306, 8311], "op": "DUP6", "path": "3"}, "1849": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "PUSH1", "path": "3", "value": "0x40"}, "1851": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "MLOAD", "path": "3"}, "1852": {"op": "PUSH4", "value": "0xDA5A8FD"}, "1857": {"op": "PUSH1", "value": "0xE4"}, "1859": {"op": "SHL"}, "1860": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "DUP2", "path": "3"}, "1861": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "MSTORE", "path": "3"}, "1862": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "PUSH1", "path": "3", "value": "0x4"}, "1864": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "ADD", "path": "3"}, "1865": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "PUSH2", "path": "3", "value": "0x29E"}, "1868": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "SWAP4", "path": "3"}, "1869": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "SWAP3", "path": "3"}, "1870": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "SWAP2", "path": "3"}, "1871": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "SWAP1", "path": "3"}, "1872": {"fn": "MerkleVesting.initialize", "offset": [8280, 8312], "op": "PUSH2", "path": "3", "value": "0xD3C"}, "1875": {"fn": "MerkleVesting.initialize", "jump": "i", "offset": [8280, 8312], "op": "JUMP", "path": "3"}, "1876": {"fn": "MerkleVesting.initialize", "offset": [8206, 8323], "op": "JUMPDEST", "path": "3"}, "1877": {"fn": "MerkleVesting.initialize", "offset": [8394, 8416], "op": "PUSH1", "path": "3", "statement": 20, "value": "0x0"}, "1879": {"fn": "MerkleVesting.initialize", "offset": [8394, 8416], "op": "DUP3", "path": "3"}, "1880": {"fn": "MerkleVesting.initialize", "offset": [8394, 8416], "op": "DUP2", "path": "3"}, "1881": {"fn": "MerkleVesting.initialize", "offset": [8394, 8416], "op": "MSTORE", "path": "3"}, "1882": {"fn": "MerkleVesting.initialize", "offset": [8394, 8410], "op": "PUSH1", "path": "3", "value": "0x6"}, "1884": {"fn": "MerkleVesting.initialize", "offset": [8394, 8410], "op": "DUP3", "path": "3"}, "1885": {"fn": "MerkleVesting.initialize", "offset": [8394, 8410], "op": "ADD", "path": "3"}, "1886": {"fn": "MerkleVesting.initialize", "offset": [8394, 8416], "op": "PUSH1", "path": "3", "value": "0x20"}, "1888": {"fn": "MerkleVesting.initialize", "offset": [8394, 8416], "op": "MSTORE", "path": "3"}, "1889": {"fn": "MerkleVesting.initialize", "offset": [8394, 8416], "op": "PUSH1", "path": "3", "value": "0x40"}, "1891": {"fn": "MerkleVesting.initialize", "offset": [8394, 8416], "op": "DUP2", "path": "3"}, "1892": {"fn": "MerkleVesting.initialize", "offset": [8394, 8416], "op": "KECCAK256", "path": "3"}, "1893": {"fn": "MerkleVesting.initialize", "offset": [8394, 8423], "op": "DUP1", "path": "3"}, "1894": {"fn": "MerkleVesting.initialize", "offset": [8394, 8423], "op": "SLOAD", "path": "3"}, "1895": {"op": "PUSH1", "value": "0xFF"}, "1897": {"op": "NOT"}, "1898": {"fn": "MerkleVesting.initialize", "offset": [8394, 8423], "op": "AND", "path": "3"}, "1899": {"fn": "MerkleVesting.initialize", "offset": [8419, 8423], "op": "PUSH1", "path": "3", "value": "0x1"}, "1901": {"fn": "MerkleVesting.initialize", "offset": [8394, 8423], "op": "OR", "path": "3"}, "1902": {"fn": "MerkleVesting.initialize", "offset": [8394, 8423], "op": "SWAP1", "path": "3"}, "1903": {"fn": "MerkleVesting.initialize", "offset": [8394, 8423], "op": "SSTORE", "path": "3"}, "1904": {"fn": "MerkleVesting.initialize", "offset": [8627, 8646], "op": "PUSH2", "path": "3", "value": "0x779"}, "1907": {"fn": "MerkleVesting.initialize", "offset": [8637, 8646], "op": "DUP9", "path": "3"}, "1908": {"fn": "MerkleVesting.initialize", "offset": [8627, 8634], "op": "DUP9", "path": "3"}, "1909": {"fn": "MerkleVesting.initialize", "offset": [8627, 8646], "op": "PUSH2", "path": "3", "value": "0xCA9"}, "1912": {"fn": "MerkleVesting.initialize", "jump": "i", "offset": [8627, 8646], "op": "JUMP", "path": "3"}, "1913": {"fn": "MerkleVesting.initialize", "offset": [8627, 8646], "op": "JUMPDEST", "path": "3"}, "1914": {"fn": "MerkleVesting.initialize", "offset": [8613, 8647], "op": "PUSH2", "path": "3", "value": "0x783"}, "1917": {"fn": "MerkleVesting.initialize", "offset": [8613, 8647], "op": "SWAP1", "path": "3"}, "1918": {"fn": "MerkleVesting.initialize", "offset": [8613, 8623], "op": "DUP11", "path": "3"}, "1919": {"fn": "MerkleVesting.initialize", "offset": [8613, 8647], "op": "PUSH2", "path": "3", "value": "0xD91"}, "1922": {"fn": "MerkleVesting.initialize", "jump": "i", "offset": [8613, 8647], "op": "JUMP", "path": "3"}, "1923": {"fn": "MerkleVesting.initialize", "offset": [8613, 8647], "op": "JUMPDEST", "path": "3"}, "1924": {"fn": "MerkleVesting.initialize", "offset": [8591, 8647], "op": "SWAP1", "path": "3"}, "1925": {"fn": "MerkleVesting.initialize", "offset": [8591, 8647], "op": "POP", "path": "3"}, "1926": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "PUSH1", "path": "3", "statement": 21, "value": "0x40"}, "1928": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "MLOAD", "path": "3"}, "1929": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "DUP1", "path": "3"}, "1930": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "PUSH2", "path": "3", "value": "0x100"}, "1933": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "ADD", "path": "3"}, "1934": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "PUSH1", "path": "3", "value": "0x40"}, "1936": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "MSTORE", "path": "3"}, "1937": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "DUP1", "path": "3"}, "1938": {"fn": "MerkleVesting.initialize", "offset": [8777, 8788], "op": "DUP12", "path": "3"}, "1939": {"op": "PUSH1", "value": "0x1"}, "1941": {"op": "PUSH1", "value": "0x1"}, "1943": {"op": "PUSH1", "value": "0xA0"}, "1945": {"op": "SHL"}, "1946": {"op": "SUB"}, "1947": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "AND", "path": "3"}, "1948": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "DUP2", "path": "3"}, "1949": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "MSTORE", "path": "3"}, "1950": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "PUSH1", "path": "3", "value": "0x20"}, "1952": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "ADD", "path": "3"}, "1953": {"fn": "MerkleVesting.initialize", "offset": [8802, 8812], "op": "DUP11", "path": "3"}, "1954": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "DUP2", "path": "3"}, "1955": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "MSTORE", "path": "3"}, "1956": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "PUSH1", "path": "3", "value": "0x20"}, "1958": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "ADD", "path": "3"}, "1959": {"fn": "MerkleVesting.initialize", "offset": [8857, 8867], "op": "DUP11", "path": "3"}, "1960": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "DUP2", "path": "3"}, "1961": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "MSTORE", "path": "3"}, "1962": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "PUSH1", "path": "3", "value": "0x20"}, "1964": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "ADD", "path": "3"}, "1965": {"fn": "MerkleVesting.initialize", "offset": [8919, 8928], "op": "DUP10", "path": "3"}, "1966": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "DUP2", "path": "3"}, "1967": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "MSTORE", "path": "3"}, "1968": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "PUSH1", "path": "3", "value": "0x20"}, "1970": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "ADD", "path": "3"}, "1971": {"fn": "MerkleVesting.initialize", "offset": [8942, 8949], "op": "DUP9", "path": "3"}, "1972": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "DUP2", "path": "3"}, "1973": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "MSTORE", "path": "3"}, "1974": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "PUSH1", "path": "3", "value": "0x20"}, "1976": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "ADD", "path": "3"}, "1977": {"fn": "MerkleVesting.initialize", "offset": [8963, 8977], "op": "DUP3", "path": "3"}, "1978": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "DUP2", "path": "3"}, "1979": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "MSTORE", "path": "3"}, "1980": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "PUSH1", "path": "3", "value": "0x20"}, "1982": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "ADD", "path": "3"}, "1983": {"fn": "MerkleVesting.initialize", "offset": [8991, 9000], "op": "DUP10", "path": "3"}, "1984": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "DUP2", "path": "3"}, "1985": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "MSTORE", "path": "3"}, "1986": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "PUSH1", "path": "3", "value": "0x20"}, "1988": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "ADD", "path": "3"}, "1989": {"fn": "MerkleVesting.initialize", "offset": [9055, 9072], "op": "DUP8", "path": "3"}, "1990": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "DUP2", "path": "3"}, "1991": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "MSTORE", "path": "3"}, "1992": {"fn": "MerkleVesting.initialize", "offset": [8756, 9082], "op": "POP", "path": "3"}, "1993": {"fn": "MerkleVesting.initialize", "offset": [8709, 8713], "op": "DUP3", "path": "3"}, "1994": {"fn": "MerkleVesting.initialize", "offset": [8709, 8722], "op": "PUSH1", "path": "3", "value": "0x5"}, "1996": {"fn": "MerkleVesting.initialize", "offset": [8709, 8722], "op": "ADD", "path": "3"}, "1997": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "PUSH1", "path": "3", "value": "0x0"}, "1999": {"fn": "MerkleVesting.initialize", "offset": [8725, 8729], "op": "DUP5", "path": "3"}, "2000": {"fn": "MerkleVesting.initialize", "offset": [8725, 8752], "op": "PUSH1", "path": "3", "value": "0x4"}, "2002": {"fn": "MerkleVesting.initialize", "offset": [8725, 8752], "op": "ADD", "path": "3"}, "2003": {"fn": "MerkleVesting.initialize", "offset": [8725, 8752], "op": "PUSH1", "path": "3", "value": "0x0"}, "2005": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "DUP2", "path": "3"}, "2006": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "SLOAD", "path": "3"}, "2007": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "PUSH2", "path": "3", "value": "0x7DF"}, "2010": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "SWAP1", "path": "3"}, "2011": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "PUSH2", "path": "3", "value": "0xD21"}, "2014": {"fn": "MerkleVesting.initialize", "jump": "i", "offset": [8723, 8752], "op": "JUMP", "path": "3"}, "2015": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "JUMPDEST", "path": "3"}, "2016": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "SWAP2", "path": "3"}, "2017": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "SWAP1", "path": "3"}, "2018": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "POP", "path": "3"}, "2019": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "DUP2", "path": "3"}, "2020": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "SWAP1", "path": "3"}, "2021": {"fn": "MerkleVesting.initialize", "offset": [8723, 8752], "op": "SSTORE", "path": "3"}, "2022": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "DUP2", "path": "3"}, "2023": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "MSTORE", "path": "3"}, "2024": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "PUSH1", "path": "3", "value": "0x20"}, "2026": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "ADD", "path": "3"}, "2027": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "SWAP1", "path": "3"}, "2028": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "DUP2", "path": "3"}, "2029": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "MSTORE", "path": "3"}, "2030": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "PUSH1", "path": "3", "value": "0x20"}, "2032": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "ADD", "path": "3"}, "2033": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "PUSH1", "path": "3", "value": "0x0"}, "2035": {"fn": "MerkleVesting.initialize", "offset": [8709, 8753], "op": "KECCAK256", "path": "3"}, "2036": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x0"}, "2038": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP3", "path": "3"}, "2039": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2040": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "MLOAD", "path": "3"}, "2041": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP2", "path": "3"}, "2042": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x0"}, "2044": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2045": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x0"}, "2047": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH2", "path": "3", "value": "0x100"}, "2050": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "EXP", "path": "3"}, "2051": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP2", "path": "3"}, "2052": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SLOAD", "path": "3"}, "2053": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP2", "path": "3"}, "2054": {"op": "PUSH1", "value": "0x1"}, "2056": {"op": "PUSH1", "value": "0x1"}, "2058": {"op": "PUSH1", "value": "0xA0"}, "2060": {"op": "SHL"}, "2061": {"op": "SUB"}, "2062": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "MUL", "path": "3"}, "2063": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "NOT", "path": "3"}, "2064": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "AND", "path": "3"}, "2065": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SWAP1", "path": "3"}, "2066": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP4", "path": "3"}, "2067": {"op": "PUSH1", "value": "0x1"}, "2069": {"op": "PUSH1", "value": "0x1"}, "2071": {"op": "PUSH1", "value": "0xA0"}, "2073": {"op": "SHL"}, "2074": {"op": "SUB"}, "2075": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "AND", "path": "3"}, "2076": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "MUL", "path": "3"}, "2077": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "OR", "path": "3"}, "2078": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SWAP1", "path": "3"}, "2079": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SSTORE", "path": "3"}, "2080": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "POP", "path": "3"}, "2081": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x20"}, "2083": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP3", "path": "3"}, "2084": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2085": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "MLOAD", "path": "3"}, "2086": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP2", "path": "3"}, "2087": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x1"}, "2089": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2090": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SSTORE", "path": "3"}, "2091": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x40"}, "2093": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP3", "path": "3"}, "2094": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2095": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "MLOAD", "path": "3"}, "2096": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP2", "path": "3"}, "2097": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x2"}, "2099": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2100": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SSTORE", "path": "3"}, "2101": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x60"}, "2103": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP3", "path": "3"}, "2104": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2105": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "MLOAD", "path": "3"}, "2106": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP2", "path": "3"}, "2107": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x3"}, "2109": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2110": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SSTORE", "path": "3"}, "2111": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x80"}, "2113": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP3", "path": "3"}, "2114": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2115": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "MLOAD", "path": "3"}, "2116": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP2", "path": "3"}, "2117": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x4"}, "2119": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2120": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SSTORE", "path": "3"}, "2121": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0xA0"}, "2123": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP3", "path": "3"}, "2124": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2125": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "MLOAD", "path": "3"}, "2126": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP2", "path": "3"}, "2127": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x5"}, "2129": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2130": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SSTORE", "path": "3"}, "2131": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0xC0"}, "2133": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP3", "path": "3"}, "2134": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2135": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "MLOAD", "path": "3"}, "2136": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP2", "path": "3"}, "2137": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x6"}, "2139": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2140": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SSTORE", "path": "3"}, "2141": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0xE0"}, "2143": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP3", "path": "3"}, "2144": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2145": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "MLOAD", "path": "3"}, "2146": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "DUP2", "path": "3"}, "2147": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "PUSH1", "path": "3", "value": "0x7"}, "2149": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "ADD", "path": "3"}, "2150": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SSTORE", "path": "3"}, "2151": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "SWAP1", "path": "3"}, "2152": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "POP", "path": "3"}, "2153": {"fn": "MerkleVesting.initialize", "offset": [8709, 9082], "op": "POP", "path": "3"}, "2154": {"fn": "MerkleVesting.initialize", "offset": [9157, 9168], "op": "DUP10", "path": "3", "statement": 22}, "2155": {"op": "PUSH1", "value": "0x1"}, "2157": {"op": "PUSH1", "value": "0x1"}, "2159": {"op": "PUSH1", "value": "0xA0"}, "2161": {"op": "SHL"}, "2162": {"op": "SUB"}, "2163": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "AND", "path": "3"}, "2164": {"fn": "MerkleVesting.initialize", "offset": [9128, 9132], "op": "DUP3", "path": "3"}, "2165": {"fn": "MerkleVesting.initialize", "offset": [9128, 9155], "op": "PUSH1", "path": "3", "value": "0x4"}, "2167": {"fn": "MerkleVesting.initialize", "offset": [9128, 9155], "op": "ADD", "path": "3"}, "2168": {"fn": "MerkleVesting.initialize", "offset": [9128, 9155], "op": "SLOAD", "path": "3"}, "2169": {"fn": "MerkleVesting.initialize", "offset": [9117, 9126], "op": "DUP13", "path": "3"}, "2170": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "PUSH32", "path": "3", "value": "0xE937D08E98E81D14E69757213935A0CCAF856636FB06FDAFC51D7C78CC85E97D"}, "2203": {"fn": "MerkleVesting.initialize", "offset": [9170, 9174], "op": "DUP7", "path": "3"}, "2204": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "PUSH1", "path": "3", "value": "0x40"}, "2206": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "MLOAD", "path": "3"}, "2207": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "PUSH2", "path": "3", "value": "0x8AA"}, "2210": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "SWAP2", "path": "3"}, "2211": {"op": "DUP2"}, "2212": {"op": "MSTORE"}, "2213": {"op": "PUSH1", "value": "0x20"}, "2215": {"op": "ADD"}, "2216": {"op": "SWAP1"}, "2217": {"op": "JUMP"}, "2218": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "JUMPDEST", "path": "3"}, "2219": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "PUSH1", "path": "3", "value": "0x40"}, "2221": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "MLOAD", "path": "3"}, "2222": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "DUP1", "path": "3"}, "2223": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "SWAP2", "path": "3"}, "2224": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "SUB", "path": "3"}, "2225": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "SWAP1", "path": "3"}, "2226": {"fn": "MerkleVesting.initialize", "offset": [9098, 9175], "op": "LOG4", "path": "3"}, "2227": {"fn": "MerkleVesting.initialize", "offset": [9289, 9304], "op": "TIMESTAMP", "path": "3"}, "2228": {"fn": "MerkleVesting.initialize", "offset": [9269, 9286], "op": "DUP7", "path": "3"}, "2229": {"branch": 34, "fn": "MerkleVesting.initialize", "offset": [9269, 9304], "op": "LT", "path": "3"}, "2230": {"fn": "MerkleVesting.initialize", "offset": [9265, 9379], "op": "ISZERO", "path": "3"}, "2231": {"fn": "MerkleVesting.initialize", "offset": [9265, 9379], "op": "PUSH2", "path": "3", "value": "0x8C8"}, "2234": {"branch": 34, "fn": "MerkleVesting.initialize", "offset": [9265, 9379], "op": "JUMPI", "path": "3"}, "2235": {"fn": "MerkleVesting.initialize", "offset": [9320, 9368], "op": "PUSH2", "path": "3", "statement": 23, "value": "0x8C8"}, "2238": {"fn": "MerkleVesting.initialize", "offset": [9329, 9338], "op": "DUP12", "path": "3"}, "2239": {"fn": "MerkleVesting.initialize", "offset": [9340, 9344], "op": "DUP4", "path": "3"}, "2240": {"fn": "MerkleVesting.initialize", "offset": [9340, 9367], "op": "PUSH1", "path": "3", "value": "0x4"}, "2242": {"fn": "MerkleVesting.initialize", "offset": [9340, 9367], "op": "ADD", "path": "3"}, "2243": {"fn": "MerkleVesting.initialize", "offset": [9340, 9367], "op": "SLOAD", "path": "3"}, "2244": {"fn": "MerkleVesting.initialize", "offset": [9320, 9328], "op": "PUSH2", "path": "3", "value": "0x259"}, "2247": {"fn": "MerkleVesting.initialize", "jump": "i", "offset": [9320, 9368], "op": "JUMP", "path": "3"}, "2248": {"fn": "MerkleVesting.initialize", "offset": [9320, 9368], "op": "JUMPDEST", "path": "3"}, "2249": {"op": "POP"}, "2250": {"fn": "MerkleVesting.initialize", "offset": [9395, 9422], "op": "PUSH1", "path": "3", "statement": 24, "value": "0x4"}, "2252": {"fn": "MerkleVesting.initialize", "offset": [9395, 9422], "op": "ADD", "path": "3"}, "2253": {"fn": "MerkleVesting.initialize", "offset": [9395, 9422], "op": "SLOAD", "path": "3"}, "2254": {"fn": "MerkleVesting.initialize", "offset": [9395, 9422], "op": "SWAP10", "path": "3"}, "2255": {"fn": "MerkleVesting.initialize", "offset": [7207, 9429], "op": "SWAP9", "path": "3"}, "2256": {"op": "POP"}, "2257": {"op": "POP"}, "2258": {"op": "POP"}, "2259": {"op": "POP"}, "2260": {"op": "POP"}, "2261": {"op": "POP"}, "2262": {"op": "POP"}, "2263": {"op": "POP"}, "2264": {"op": "POP"}, "2265": {"fn": "MerkleVesting.initialize", "jump": "o", "offset": [7207, 9429], "op": "JUMP", "path": "3"}, "2266": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "JUMPDEST", "path": "3"}, "2267": {"fn": "MerkleVesting.depositTokens", "offset": [5031, 5045], "op": "DUP2", "path": "3", "statement": 25}, "2268": {"fn": "MerkleVesting.depositTokens", "offset": [5031, 5045], "op": "ISZERO", "path": "3"}, "2269": {"branch": 35, "fn": "MerkleVesting.depositTokens", "offset": [5031, 5045], "op": "DUP1", "path": "3"}, "2270": {"fn": "MerkleVesting.depositTokens", "offset": [5031, 5069], "op": "PUSH2", "path": "3", "value": "0x8E8"}, "2273": {"branch": 35, "fn": "MerkleVesting.depositTokens", "offset": [5031, 5069], "op": "JUMPI", "path": "3"}, "2274": {"fn": "MerkleVesting.depositTokens", "offset": [5031, 5069], "op": "POP", "path": "3"}, "2275": {"fn": "MerkleVesting.depositTokens", "offset": [5061, 5069], "op": "PUSH1", "path": "3", "value": "0x0"}, "2277": {"fn": "MerkleVesting.depositTokens", "offset": [5061, 5069], "op": "SLOAD", "path": "3"}, "2278": {"fn": "MerkleVesting.depositTokens", "offset": [5049, 5058], "op": "DUP3", "path": "3"}, "2279": {"branch": 36, "fn": "MerkleVesting.depositTokens", "offset": [5049, 5069], "op": "GT", "path": "3"}, "2280": {"fn": "MerkleVesting.depositTokens", "offset": [5031, 5069], "op": "JUMPDEST", "path": "3"}, "2281": {"fn": "MerkleVesting.depositTokens", "offset": [5027, 5126], "op": "ISZERO", "path": "3"}, "2282": {"fn": "MerkleVesting.depositTokens", "offset": [5027, 5126], "op": "PUSH2", "path": "3", "value": "0x909"}, "2285": {"branch": 36, "fn": "MerkleVesting.depositTokens", "offset": [5027, 5126], "op": "JUMPI", "path": "3"}, "2286": {"fn": "MerkleVesting.depositTokens", "offset": [5092, 5115], "op": "PUSH1", "path": "3", "value": "0x40"}, "2288": {"fn": "MerkleVesting.depositTokens", "offset": [5092, 5115], "op": "MLOAD", "path": "3"}, "2289": {"op": "PUSH4", "value": "0x190A97AD"}, "2294": {"op": "PUSH1", "value": "0xE0"}, "2296": {"op": "SHL"}, "2297": {"fn": "MerkleVesting.depositTokens", "offset": [5092, 5115], "op": "DUP2", "path": "3"}, "2298": {"fn": "MerkleVesting.depositTokens", "offset": [5092, 5115], "op": "MSTORE", "path": "3"}, "2299": {"fn": "MerkleVesting.depositTokens", "offset": [5092, 5115], "op": "PUSH1", "path": "3", "value": "0x4"}, "2301": {"fn": "MerkleVesting.depositTokens", "offset": [5092, 5115], "op": "DUP2", "path": "3"}, "2302": {"fn": "MerkleVesting.depositTokens", "offset": [5092, 5115], "op": "ADD", "path": "3"}, "2303": {"op": "DUP4"}, "2304": {"op": "SWAP1"}, "2305": {"op": "MSTORE"}, "2306": {"op": "PUSH1", "value": "0x24"}, "2308": {"op": "ADD"}, "2309": {"fn": "MerkleVesting.depositTokens", "offset": [5092, 5115], "op": "PUSH2", "path": "3", "value": "0x29E"}, "2312": {"op": "JUMP"}, "2313": {"fn": "MerkleVesting.depositTokens", "offset": [5027, 5126], "op": "JUMPDEST", "path": "3"}, "2314": {"fn": "MerkleVesting.depositTokens", "offset": [5176, 5205], "op": "PUSH1", "path": "3", "value": "0x0"}, "2316": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "DUP3", "path": "3"}, "2317": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "DUP2", "path": "3"}, "2318": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "MSTORE", "path": "3"}, "2319": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5219], "op": "PUSH1", "path": "3", "value": "0x1"}, "2321": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "PUSH1", "path": "3", "value": "0x20"}, "2323": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "MSTORE", "path": "3"}, "2324": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "PUSH1", "path": "3", "value": "0x40"}, "2326": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "DUP1", "path": "3"}, "2327": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "DUP3", "path": "3"}, "2328": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "KECCAK256", "path": "3"}, "2329": {"fn": "MerkleVesting.depositTokens", "offset": [5263, 5286], "op": "PUSH1", "path": "3", "value": "0x2"}, "2331": {"fn": "MerkleVesting.depositTokens", "offset": [5263, 5286], "op": "DUP2", "path": "3"}, "2332": {"fn": "MerkleVesting.depositTokens", "offset": [5263, 5286], "op": "ADD", "path": "3"}, "2333": {"fn": "MerkleVesting.depositTokens", "offset": [5263, 5286], "op": "SLOAD", "path": "3"}, "2334": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "SWAP2", "path": "3"}, "2335": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "MLOAD", "path": "3"}, "2336": {"op": "PUSH4", "value": "0x70A08231"}, "2341": {"op": "PUSH1", "value": "0xE0"}, "2343": {"op": "SHL"}, "2344": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP2", "path": "3"}, "2345": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "MSTORE", "path": "3"}, "2346": {"fn": "MerkleVesting.depositTokens", "offset": [5342, 5346], "op": "ADDRESS", "path": "3"}, "2347": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH1", "path": "3", "value": "0x4"}, "2349": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP3", "path": "3"}, "2350": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "ADD", "path": "3"}, "2351": {"op": "MSTORE"}, "2352": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "SWAP1", "path": "3"}, "2353": {"fn": "MerkleVesting.depositTokens", "offset": [5208, 5230], "op": "SWAP3", "path": "3"}, "2354": {"op": "PUSH1", "value": "0x1"}, "2356": {"op": "PUSH1", "value": "0x1"}, "2358": {"op": "PUSH1", "value": "0xA0"}, "2360": {"op": "SHL"}, "2361": {"op": "SUB"}, "2362": {"fn": "MerkleVesting.depositTokens", "offset": [5263, 5286], "op": "SWAP1", "path": "3"}, "2363": {"fn": "MerkleVesting.depositTokens", "offset": [5263, 5286], "op": "SWAP3", "path": "3"}, "2364": {"fn": "MerkleVesting.depositTokens", "offset": [5263, 5286], "op": "AND", "path": "3"}, "2365": {"fn": "MerkleVesting.depositTokens", "offset": [5263, 5286], "op": "SWAP2", "path": "3"}, "2366": {"fn": "MerkleVesting.depositTokens", "offset": [5176, 5205], "op": "SWAP1", "path": "3"}, "2367": {"fn": "MerkleVesting.depositTokens", "offset": [5263, 5286], "op": "DUP3", "path": "3"}, "2368": {"fn": "MerkleVesting.depositTokens", "offset": [5263, 5286], "op": "SWAP1", "path": "3"}, "2369": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5333], "op": "PUSH4", "path": "3", "value": "0x70A08231"}, "2374": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5333], "op": "SWAP1", "path": "3"}, "2375": {"op": "PUSH1", "value": "0x24"}, "2377": {"op": "ADD"}, "2378": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH1", "path": "3", "value": "0x20"}, "2380": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH1", "path": "3", "value": "0x40"}, "2382": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "MLOAD", "path": "3"}, "2383": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP1", "path": "3"}, "2384": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP4", "path": "3"}, "2385": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "SUB", "path": "3"}, "2386": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP2", "path": "3"}, "2387": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP7", "path": "3"}, "2388": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "GAS", "path": "3"}, "2389": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "STATICCALL", "path": "3"}, "2390": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "ISZERO", "path": "3"}, "2391": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP1", "path": "3"}, "2392": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "ISZERO", "path": "3"}, "2393": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH2", "path": "3", "value": "0x966"}, "2396": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "JUMPI", "path": "3"}, "2397": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "RETURNDATASIZE", "path": "3"}, "2398": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH1", "path": "3", "value": "0x0"}, "2400": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP1", "path": "3"}, "2401": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "RETURNDATACOPY", "path": "3"}, "2402": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "RETURNDATASIZE", "path": "3"}, "2403": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH1", "path": "3", "value": "0x0"}, "2405": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "REVERT", "path": "3"}, "2406": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "JUMPDEST", "path": "3"}, "2407": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "POP", "path": "3"}, "2408": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "POP", "path": "3"}, "2409": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "POP", "path": "3"}, "2410": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "POP", "path": "3"}, "2411": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH1", "path": "3", "value": "0x40"}, "2413": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "MLOAD", "path": "3"}, "2414": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "RETURNDATASIZE", "path": "3"}, "2415": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH1", "path": "3", "value": "0x1F"}, "2417": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "NOT", "path": "3"}, "2418": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH1", "path": "3", "value": "0x1F"}, "2420": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP3", "path": "3"}, "2421": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "ADD", "path": "3"}, "2422": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "AND", "path": "3"}, "2423": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP3", "path": "3"}, "2424": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "ADD", "path": "3"}, "2425": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP1", "path": "3"}, "2426": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH1", "path": "3", "value": "0x40"}, "2428": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "MSTORE", "path": "3"}, "2429": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "POP", "path": "3"}, "2430": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "DUP2", "path": "3"}, "2431": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "ADD", "path": "3"}, "2432": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "SWAP1", "path": "3"}, "2433": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH2", "path": "3", "value": "0x98A"}, "2436": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "SWAP2", "path": "3"}, "2437": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "SWAP1", "path": "3"}, "2438": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "PUSH2", "path": "3", "value": "0xCDF"}, "2441": {"fn": "MerkleVesting.depositTokens", "jump": "i", "offset": [5318, 5348], "op": "JUMP", "path": "3"}, "2442": {"fn": "MerkleVesting.depositTokens", "offset": [5318, 5348], "op": "JUMPDEST", "path": "3"}, "2443": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "statement": 26, "value": "0x40"}, "2445": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "MLOAD", "path": "3"}, "2446": {"op": "PUSH4", "value": "0x23B872DD"}, "2451": {"op": "PUSH1", "value": "0xE0"}, "2453": {"op": "SHL"}, "2454": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP2", "path": "3"}, "2455": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "MSTORE", "path": "3"}, "2456": {"fn": "MerkleVesting.depositTokens", "offset": [5722, 5732], "op": "CALLER", "path": "3"}, "2457": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "value": "0x4"}, "2459": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP3", "path": "3"}, "2460": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "ADD", "path": "3"}, "2461": {"op": "MSTORE"}, "2462": {"fn": "MerkleVesting.depositTokens", "offset": [5742, 5746], "op": "ADDRESS", "path": "3"}, "2463": {"op": "PUSH1", "value": "0x24"}, "2465": {"op": "DUP3"}, "2466": {"op": "ADD"}, "2467": {"op": "MSTORE"}, "2468": {"op": "PUSH1", "value": "0x44"}, "2470": {"op": "DUP2"}, "2471": {"op": "ADD"}, "2472": {"op": "DUP7"}, "2473": {"op": "SWAP1"}, "2474": {"op": "MSTORE"}, "2475": {"fn": "MerkleVesting.depositTokens", "offset": [5297, 5348], "op": "SWAP1", "path": "3"}, "2476": {"fn": "MerkleVesting.depositTokens", "offset": [5297, 5348], "op": "SWAP2", "path": "3"}, "2477": {"op": "POP"}, "2478": {"op": "PUSH1", "value": "0x1"}, "2480": {"op": "PUSH1", "value": "0x1"}, "2482": {"op": "PUSH1", "value": "0xA0"}, "2484": {"op": "SHL"}, "2485": {"op": "SUB"}, "2486": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5721], "op": "DUP4", "path": "3"}, "2487": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5721], "op": "AND", "path": "3"}, "2488": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5721], "op": "SWAP1", "path": "3"}, "2489": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5721], "op": "PUSH4", "path": "3", "value": "0x23B872DD"}, "2494": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5721], "op": "SWAP1", "path": "3"}, "2495": {"op": "PUSH1", "value": "0x64"}, "2497": {"op": "ADD"}, "2498": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "value": "0x20"}, "2500": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "value": "0x40"}, "2502": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "MLOAD", "path": "3"}, "2503": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP1", "path": "3"}, "2504": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP4", "path": "3"}, "2505": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "SUB", "path": "3"}, "2506": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP2", "path": "3"}, "2507": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "value": "0x0"}, "2509": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP8", "path": "3"}, "2510": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "GAS", "path": "3"}, "2511": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "CALL", "path": "3"}, "2512": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "ISZERO", "path": "3"}, "2513": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP1", "path": "3"}, "2514": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "ISZERO", "path": "3"}, "2515": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH2", "path": "3", "value": "0x9E0"}, "2518": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "JUMPI", "path": "3"}, "2519": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "RETURNDATASIZE", "path": "3"}, "2520": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "value": "0x0"}, "2522": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP1", "path": "3"}, "2523": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "RETURNDATACOPY", "path": "3"}, "2524": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "RETURNDATASIZE", "path": "3"}, "2525": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "value": "0x0"}, "2527": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "REVERT", "path": "3"}, "2528": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "JUMPDEST", "path": "3"}, "2529": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "POP", "path": "3"}, "2530": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "POP", "path": "3"}, "2531": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "POP", "path": "3"}, "2532": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "POP", "path": "3"}, "2533": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "value": "0x40"}, "2535": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "MLOAD", "path": "3"}, "2536": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "RETURNDATASIZE", "path": "3"}, "2537": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "value": "0x1F"}, "2539": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "NOT", "path": "3"}, "2540": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "value": "0x1F"}, "2542": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP3", "path": "3"}, "2543": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "ADD", "path": "3"}, "2544": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "AND", "path": "3"}, "2545": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP3", "path": "3"}, "2546": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "ADD", "path": "3"}, "2547": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP1", "path": "3"}, "2548": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH1", "path": "3", "value": "0x40"}, "2550": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "MSTORE", "path": "3"}, "2551": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "POP", "path": "3"}, "2552": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "DUP2", "path": "3"}, "2553": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "ADD", "path": "3"}, "2554": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "SWAP1", "path": "3"}, "2555": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH2", "path": "3", "value": "0xA04"}, "2558": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "SWAP2", "path": "3"}, "2559": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "SWAP1", "path": "3"}, "2560": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "PUSH2", "path": "3", "value": "0xCF8"}, "2563": {"fn": "MerkleVesting.depositTokens", "jump": "i", "offset": [5703, 5755], "op": "JUMP", "path": "3"}, "2564": {"fn": "MerkleVesting.depositTokens", "offset": [5703, 5755], "op": "JUMPDEST", "path": "3"}, "2565": {"op": "POP"}, "2566": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH1", "path": "3", "value": "0x40"}, "2568": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "MLOAD", "path": "3"}, "2569": {"op": "PUSH4", "value": "0x70A08231"}, "2574": {"op": "PUSH1", "value": "0xE0"}, "2576": {"op": "SHL"}, "2577": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP2", "path": "3"}, "2578": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "MSTORE", "path": "3"}, "2579": {"fn": "MerkleVesting.depositTokens", "offset": [5810, 5814], "op": "ADDRESS", "path": "3"}, "2580": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH1", "path": "3", "value": "0x4"}, "2582": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP3", "path": "3"}, "2583": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "ADD", "path": "3"}, "2584": {"op": "MSTORE"}, "2585": {"fn": "MerkleVesting.depositTokens", "offset": [5766, 5783], "op": "PUSH1", "path": "3", "value": "0x0"}, "2587": {"fn": "MerkleVesting.depositTokens", "offset": [5766, 5783], "op": "SWAP1", "path": "3"}, "2588": {"op": "PUSH1", "value": "0x1"}, "2590": {"op": "PUSH1", "value": "0x1"}, "2592": {"op": "PUSH1", "value": "0xA0"}, "2594": {"op": "SHL"}, "2595": {"op": "SUB"}, "2596": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5801], "op": "DUP5", "path": "3"}, "2597": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5801], "op": "AND", "path": "3"}, "2598": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5801], "op": "SWAP1", "path": "3"}, "2599": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5801], "op": "PUSH4", "path": "3", "value": "0x70A08231"}, "2604": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5801], "op": "SWAP1", "path": "3"}, "2605": {"op": "PUSH1", "value": "0x24"}, "2607": {"op": "ADD"}, "2608": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH1", "path": "3", "value": "0x20"}, "2610": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH1", "path": "3", "value": "0x40"}, "2612": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "MLOAD", "path": "3"}, "2613": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP1", "path": "3"}, "2614": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP4", "path": "3"}, "2615": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "SUB", "path": "3"}, "2616": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP2", "path": "3"}, "2617": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP7", "path": "3"}, "2618": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "GAS", "path": "3"}, "2619": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "STATICCALL", "path": "3"}, "2620": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "ISZERO", "path": "3"}, "2621": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP1", "path": "3"}, "2622": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "ISZERO", "path": "3"}, "2623": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH2", "path": "3", "value": "0xA4C"}, "2626": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "JUMPI", "path": "3"}, "2627": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "RETURNDATASIZE", "path": "3"}, "2628": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH1", "path": "3", "value": "0x0"}, "2630": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP1", "path": "3"}, "2631": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "RETURNDATACOPY", "path": "3"}, "2632": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "RETURNDATASIZE", "path": "3"}, "2633": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH1", "path": "3", "value": "0x0"}, "2635": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "REVERT", "path": "3"}, "2636": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "JUMPDEST", "path": "3"}, "2637": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "POP", "path": "3"}, "2638": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "POP", "path": "3"}, "2639": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "POP", "path": "3"}, "2640": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "POP", "path": "3"}, "2641": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH1", "path": "3", "value": "0x40"}, "2643": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "MLOAD", "path": "3"}, "2644": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "RETURNDATASIZE", "path": "3"}, "2645": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH1", "path": "3", "value": "0x1F"}, "2647": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "NOT", "path": "3"}, "2648": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH1", "path": "3", "value": "0x1F"}, "2650": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP3", "path": "3"}, "2651": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "ADD", "path": "3"}, "2652": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "AND", "path": "3"}, "2653": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP3", "path": "3"}, "2654": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "ADD", "path": "3"}, "2655": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP1", "path": "3"}, "2656": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH1", "path": "3", "value": "0x40"}, "2658": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "MSTORE", "path": "3"}, "2659": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "POP", "path": "3"}, "2660": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "DUP2", "path": "3"}, "2661": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "ADD", "path": "3"}, "2662": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "SWAP1", "path": "3"}, "2663": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH2", "path": "3", "value": "0xA70"}, "2666": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "SWAP2", "path": "3"}, "2667": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "SWAP1", "path": "3"}, "2668": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "PUSH2", "path": "3", "value": "0xCDF"}, "2671": {"fn": "MerkleVesting.depositTokens", "jump": "i", "offset": [5786, 5816], "op": "JUMP", "path": "3"}, "2672": {"fn": "MerkleVesting.depositTokens", "offset": [5786, 5816], "op": "JUMPDEST", "path": "3"}, "2673": {"fn": "MerkleVesting.depositTokens", "offset": [5766, 5816], "op": "SWAP1", "path": "3"}, "2674": {"op": "POP"}, "2675": {"fn": "MerkleVesting.depositTokens", "offset": [5928, 5937], "op": "PUSH1", "path": "3", "value": "0x0"}, "2677": {"fn": "MerkleVesting.depositTokens", "offset": [5940, 5968], "op": "PUSH2", "path": "3", "value": "0xA7E"}, "2680": {"fn": "MerkleVesting.depositTokens", "offset": [5955, 5968], "op": "DUP4", "path": "3"}, "2681": {"fn": "MerkleVesting.depositTokens", "offset": [5766, 5816], "op": "DUP4", "path": "3"}, "2682": {"fn": "MerkleVesting.depositTokens", "offset": [5940, 5968], "op": "PUSH2", "path": "3", "value": "0xCA9"}, "2685": {"fn": "MerkleVesting.depositTokens", "jump": "i", "offset": [5940, 5968], "op": "JUMP", "path": "3"}, "2686": {"fn": "MerkleVesting.depositTokens", "offset": [5940, 5968], "op": "JUMPDEST", "path": "3"}, "2687": {"fn": "MerkleVesting.depositTokens", "offset": [5928, 5968], "op": "SWAP1", "path": "3"}, "2688": {"fn": "MerkleVesting.depositTokens", "offset": [5928, 5968], "op": "POP", "path": "3"}, "2689": {"fn": "MerkleVesting.depositTokens", "offset": [6067, 6071], "op": "DUP1", "path": "3", "statement": 27}, "2690": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6050], "op": "DUP6", "path": "3"}, "2691": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6063], "op": "PUSH1", "path": "3", "value": "0x3"}, "2693": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6063], "op": "ADD", "path": "3"}, "2694": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6063], "op": "PUSH1", "path": "3", "value": "0x0"}, "2696": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "DUP3", "path": "3"}, "2697": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "DUP3", "path": "3"}, "2698": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "SLOAD", "path": "3"}, "2699": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "PUSH2", "path": "3", "value": "0xA94"}, "2702": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "SWAP2", "path": "3"}, "2703": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "SWAP1", "path": "3"}, "2704": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "PUSH2", "path": "3", "value": "0xDB3"}, "2707": {"fn": "MerkleVesting.depositTokens", "jump": "i", "offset": [6040, 6071], "op": "JUMP", "path": "3"}, "2708": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "JUMPDEST", "path": "3"}, "2709": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "SWAP1", "path": "3"}, "2710": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "SWAP2", "path": "3"}, "2711": {"fn": "MerkleVesting.depositTokens", "offset": [6040, 6071], "op": "SSTORE", "path": "3"}, "2712": {"op": "POP"}, "2713": {"op": "POP"}, "2714": {"fn": "MerkleVesting.depositTokens", "offset": [6113, 6136], "op": "PUSH1", "path": "3", "statement": 28, "value": "0x2"}, "2716": {"fn": "MerkleVesting.depositTokens", "offset": [6113, 6136], "op": "DUP6", "path": "3"}, "2717": {"fn": "MerkleVesting.depositTokens", "offset": [6113, 6136], "op": "ADD", "path": "3"}, "2718": {"fn": "MerkleVesting.depositTokens", "offset": [6113, 6136], "op": "SLOAD", "path": "3"}, "2719": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "PUSH1", "path": "3", "value": "0x40"}, "2721": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "MLOAD", "path": "3"}, "2722": {"op": "DUP3"}, "2723": {"op": "DUP2"}, "2724": {"op": "MSTORE"}, "2725": {"op": "PUSH1", "value": "0x1"}, "2727": {"op": "PUSH1", "value": "0x1"}, "2729": {"op": "PUSH1", "value": "0xA0"}, "2731": {"op": "SHL"}, "2732": {"op": "SUB"}, "2733": {"fn": "MerkleVesting.depositTokens", "offset": [6113, 6136], "op": "SWAP1", "path": "3"}, "2734": {"fn": "MerkleVesting.depositTokens", "offset": [6113, 6136], "op": "SWAP2", "path": "3"}, "2735": {"fn": "MerkleVesting.depositTokens", "offset": [6113, 6136], "op": "AND", "path": "3"}, "2736": {"fn": "MerkleVesting.depositTokens", "offset": [6113, 6136], "op": "SWAP1", "path": "3"}, "2737": {"fn": "MerkleVesting.depositTokens", "offset": [6102, 6111], "op": "DUP9", "path": "3"}, "2738": {"fn": "MerkleVesting.depositTokens", "offset": [6102, 6111], "op": "SWAP1", "path": "3"}, "2739": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "PUSH32", "path": "3", "value": "0xB162210DA7D23D82C18CFF5AF46D3562661D26B42A6848FA28D64A6BDC70386A"}, "2772": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "SWAP1", "path": "3"}, "2773": {"op": "PUSH1", "value": "0x20"}, "2775": {"op": "ADD"}, "2776": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "PUSH1", "path": "3", "value": "0x40"}, "2778": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "MLOAD", "path": "3"}, "2779": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "DUP1", "path": "3"}, "2780": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "SWAP2", "path": "3"}, "2781": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "SUB", "path": "3"}, "2782": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "SWAP1", "path": "3"}, "2783": {"fn": "MerkleVesting.depositTokens", "offset": [6086, 6143], "op": "LOG3", "path": "3"}, "2784": {"fn": "MerkleVesting.depositTokens", "offset": [5017, 6150], "op": "POP", "path": "3"}, "2785": {"fn": "MerkleVesting.depositTokens", "offset": [5017, 6150], "op": "POP", "path": "3"}, "2786": {"fn": "MerkleVesting.depositTokens", "offset": [5017, 6150], "op": "POP", "path": "3"}, "2787": {"fn": "MerkleVesting.depositTokens", "offset": [5017, 6150], "op": "POP", "path": "3"}, "2788": {"fn": "MerkleVesting.depositTokens", "offset": [5017, 6150], "op": "POP", "path": "3"}, "2789": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "POP", "path": "3"}, "2790": {"fn": "MerkleVesting.depositTokens", "offset": [4959, 6150], "op": "POP", "path": "3"}, "2791": {"fn": "MerkleVesting.depositTokens", "jump": "o", "offset": [4959, 6150], "op": "JUMP", "path": "3"}, "2792": {"op": "JUMPDEST"}, "2793": {"op": "PUSH1", "value": "0x0"}, "2795": {"op": "DUP1"}, "2796": {"op": "PUSH1", "value": "0x40"}, "2798": {"op": "DUP4"}, "2799": {"op": "DUP6"}, "2800": {"op": "SUB"}, "2801": {"op": "SLT"}, "2802": {"op": "ISZERO"}, "2803": {"op": "PUSH2", "value": "0xAFB"}, "2806": {"op": "JUMPI"}, "2807": {"op": "PUSH1", "value": "0x0"}, "2809": {"op": "DUP1"}, "2810": {"op": "REVERT"}, "2811": {"op": "JUMPDEST"}, "2812": {"op": "POP"}, "2813": {"op": "POP"}, "2814": {"op": "DUP1"}, "2815": {"op": "CALLDATALOAD"}, "2816": {"op": "SWAP3"}, "2817": {"op": "PUSH1", "value": "0x20"}, "2819": {"op": "SWAP1"}, "2820": {"op": "SWAP2"}, "2821": {"op": "ADD"}, "2822": {"op": "CALLDATALOAD"}, "2823": {"op": "SWAP2"}, "2824": {"op": "POP"}, "2825": {"jump": "o", "op": "JUMP"}, "2826": {"op": "JUMPDEST"}, "2827": {"op": "PUSH1", "value": "0x0"}, "2829": {"op": "PUSH1", "value": "0x20"}, "2831": {"op": "DUP3"}, "2832": {"op": "DUP5"}, "2833": {"op": "SUB"}, "2834": {"op": "SLT"}, "2835": {"op": "ISZERO"}, "2836": {"op": "PUSH2", "value": "0xB1C"}, "2839": {"op": "JUMPI"}, "2840": {"op": "PUSH1", "value": "0x0"}, "2842": {"op": "DUP1"}, "2843": {"op": "REVERT"}, "2844": {"op": "JUMPDEST"}, "2845": {"op": "POP"}, "2846": {"op": "CALLDATALOAD"}, "2847": {"op": "SWAP2"}, "2848": {"op": "SWAP1"}, "2849": {"op": "POP"}, "2850": {"jump": "o", "op": "JUMP"}, "2851": {"op": "JUMPDEST"}, "2852": {"op": "DUP1"}, "2853": {"op": "CALLDATALOAD"}, "2854": {"op": "PUSH1", "value": "0x1"}, "2856": {"op": "PUSH1", "value": "0x1"}, "2858": {"op": "PUSH1", "value": "0xA0"}, "2860": {"op": "SHL"}, "2861": {"op": "SUB"}, "2862": {"op": "DUP2"}, "2863": {"op": "AND"}, "2864": {"op": "DUP2"}, "2865": {"op": "EQ"}, "2866": {"op": "PUSH2", "value": "0xB3A"}, "2869": {"op": "JUMPI"}, "2870": {"op": "PUSH1", "value": "0x0"}, "2872": {"op": "DUP1"}, "2873": {"op": "REVERT"}, "2874": {"op": "JUMPDEST"}, "2875": {"op": "SWAP2"}, "2876": {"op": "SWAP1"}, "2877": {"op": "POP"}, "2878": {"jump": "o", "op": "JUMP"}, "2879": {"op": "JUMPDEST"}, "2880": {"op": "PUSH1", "value": "0x0"}, "2882": {"op": "DUP1"}, "2883": {"op": "PUSH1", "value": "0x0"}, "2885": {"op": "DUP1"}, "2886": {"op": "PUSH1", "value": "0x80"}, "2888": {"op": "DUP6"}, "2889": {"op": "DUP8"}, "2890": {"op": "SUB"}, "2891": {"op": "SLT"}, "2892": {"op": "ISZERO"}, "2893": {"op": "PUSH2", "value": "0xB55"}, "2896": {"op": "JUMPI"}, "2897": {"op": "PUSH1", "value": "0x0"}, "2899": {"op": "DUP1"}, "2900": {"op": "REVERT"}, "2901": {"op": "JUMPDEST"}, "2902": {"op": "DUP5"}, "2903": {"op": "CALLDATALOAD"}, "2904": {"op": "SWAP4"}, "2905": {"op": "POP"}, "2906": {"op": "PUSH1", "value": "0x20"}, "2908": {"op": "DUP6"}, "2909": {"op": "ADD"}, "2910": {"op": "CALLDATALOAD"}, "2911": {"op": "SWAP3"}, "2912": {"op": "POP"}, "2913": {"op": "PUSH2", "value": "0xB6C"}, "2916": {"op": "PUSH1", "value": "0x40"}, "2918": {"op": "DUP7"}, "2919": {"op": "ADD"}, "2920": {"op": "PUSH2", "value": "0xB23"}, "2923": {"jump": "i", "op": "JUMP"}, "2924": {"op": "JUMPDEST"}, "2925": {"op": "SWAP4"}, "2926": {"op": "SWAP7"}, "2927": {"op": "SWAP3"}, "2928": {"op": "SWAP6"}, "2929": {"op": "POP"}, "2930": {"op": "SWAP3"}, "2931": {"op": "SWAP4"}, "2932": {"op": "PUSH1", "value": "0x60"}, "2934": {"op": "ADD"}, "2935": {"op": "CALLDATALOAD"}, "2936": {"op": "SWAP3"}, "2937": {"op": "POP"}, "2938": {"op": "POP"}, "2939": {"jump": "o", "op": "JUMP"}, "2940": {"op": "JUMPDEST"}, "2941": {"op": "PUSH4", "value": "0x4E487B71"}, "2946": {"op": "PUSH1", "value": "0xE0"}, "2948": {"op": "SHL"}, "2949": {"op": "PUSH1", "value": "0x0"}, "2951": {"op": "MSTORE"}, "2952": {"op": "PUSH1", "value": "0x41"}, "2954": {"op": "PUSH1", "value": "0x4"}, "2956": {"op": "MSTORE"}, "2957": {"op": "PUSH1", "value": "0x24"}, "2959": {"op": "PUSH1", "value": "0x0"}, "2961": {"op": "REVERT"}, "2962": {"op": "JUMPDEST"}, "2963": {"op": "PUSH1", "value": "0x0"}, "2965": {"op": "DUP1"}, "2966": {"op": "PUSH1", "value": "0x0"}, "2968": {"op": "DUP1"}, "2969": {"op": "PUSH1", "value": "0x0"}, "2971": {"op": "DUP1"}, "2972": {"op": "PUSH1", "value": "0x0"}, "2974": {"op": "PUSH1", "value": "0xE0"}, "2976": {"op": "DUP9"}, "2977": {"op": "DUP11"}, "2978": {"op": "SUB"}, "2979": {"op": "SLT"}, "2980": {"op": "ISZERO"}, "2981": {"op": "PUSH2", "value": "0xBAD"}, "2984": {"op": "JUMPI"}, "2985": {"op": "PUSH1", "value": "0x0"}, "2987": {"op": "DUP1"}, "2988": {"op": "REVERT"}, "2989": {"op": "JUMPDEST"}, "2990": {"op": "DUP8"}, "2991": {"op": "CALLDATALOAD"}, "2992": {"op": "SWAP7"}, "2993": {"op": "POP"}, "2994": {"op": "PUSH1", "value": "0x20"}, "2996": {"op": "PUSH2", "value": "0xBBE"}, "2999": {"op": "DUP2"}, "3000": {"op": "DUP11"}, "3001": {"op": "ADD"}, "3002": {"op": "PUSH2", "value": "0xB23"}, "3005": {"jump": "i", "op": "JUMP"}, "3006": {"op": "JUMPDEST"}, "3007": {"op": "SWAP7"}, "3008": {"op": "POP"}, "3009": {"op": "PUSH1", "value": "0x40"}, "3011": {"op": "DUP10"}, "3012": {"op": "ADD"}, "3013": {"op": "CALLDATALOAD"}, "3014": {"op": "SWAP6"}, "3015": {"op": "POP"}, "3016": {"op": "PUSH1", "value": "0x60"}, "3018": {"op": "DUP10"}, "3019": {"op": "ADD"}, "3020": {"op": "CALLDATALOAD"}, "3021": {"op": "SWAP5"}, "3022": {"op": "POP"}, "3023": {"op": "PUSH1", "value": "0x80"}, "3025": {"op": "DUP10"}, "3026": {"op": "ADD"}, "3027": {"op": "CALLDATALOAD"}, "3028": {"op": "SWAP4"}, "3029": {"op": "POP"}, "3030": {"op": "PUSH1", "value": "0xA0"}, "3032": {"op": "DUP10"}, "3033": {"op": "ADD"}, "3034": {"op": "CALLDATALOAD"}, "3035": {"op": "SWAP3"}, "3036": {"op": "POP"}, "3037": {"op": "PUSH1", "value": "0xC0"}, "3039": {"op": "DUP10"}, "3040": {"op": "ADD"}, "3041": {"op": "CALLDATALOAD"}, "3042": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "3051": {"op": "DUP1"}, "3052": {"op": "DUP3"}, "3053": {"op": "GT"}, "3054": {"op": "ISZERO"}, "3055": {"op": "PUSH2", "value": "0xBF7"}, "3058": {"op": "JUMPI"}, "3059": {"op": "PUSH1", "value": "0x0"}, "3061": {"op": "DUP1"}, "3062": {"op": "REVERT"}, "3063": {"op": "JUMPDEST"}, "3064": {"op": "DUP2"}, "3065": {"op": "DUP12"}, "3066": {"op": "ADD"}, "3067": {"op": "SWAP2"}, "3068": {"op": "POP"}, "3069": {"op": "DUP12"}, "3070": {"op": "PUSH1", "value": "0x1F"}, "3072": {"op": "DUP4"}, "3073": {"op": "ADD"}, "3074": {"op": "SLT"}, "3075": {"op": "PUSH2", "value": "0xC0B"}, "3078": {"op": "JUMPI"}, "3079": {"op": "PUSH1", "value": "0x0"}, "3081": {"op": "DUP1"}, "3082": {"op": "REVERT"}, "3083": {"op": "JUMPDEST"}, "3084": {"op": "DUP2"}, "3085": {"op": "CALLDATALOAD"}, "3086": {"op": "DUP2"}, "3087": {"op": "DUP2"}, "3088": {"op": "GT"}, "3089": {"op": "ISZERO"}, "3090": {"op": "PUSH2", "value": "0xC1D"}, "3093": {"op": "JUMPI"}, "3094": {"op": "PUSH2", "value": "0xC1D"}, "3097": {"op": "PUSH2", "value": "0xB7C"}, "3100": {"jump": "i", "op": "JUMP"}, "3101": {"op": "JUMPDEST"}, "3102": {"op": "DUP1"}, "3103": {"op": "PUSH1", "value": "0x5"}, "3105": {"op": "SHL"}, "3106": {"op": "PUSH1", "value": "0x40"}, "3108": {"op": "MLOAD"}, "3109": {"op": "PUSH1", "value": "0x1F"}, "3111": {"op": "NOT"}, "3112": {"op": "PUSH1", "value": "0x3F"}, "3114": {"op": "DUP4"}, "3115": {"op": "ADD"}, "3116": {"op": "AND"}, "3117": {"op": "DUP2"}, "3118": {"op": "ADD"}, "3119": {"op": "DUP2"}, "3120": {"op": "DUP2"}, "3121": {"op": "LT"}, "3122": {"op": "DUP6"}, "3123": {"op": "DUP3"}, "3124": {"op": "GT"}, "3125": {"op": "OR"}, "3126": {"op": "ISZERO"}, "3127": {"op": "PUSH2", "value": "0xC42"}, "3130": {"op": "JUMPI"}, "3131": {"op": "PUSH2", "value": "0xC42"}, "3134": {"op": "PUSH2", "value": "0xB7C"}, "3137": {"jump": "i", "op": "JUMP"}, "3138": {"op": "JUMPDEST"}, "3139": {"op": "PUSH1", "value": "0x40"}, "3141": {"op": "MSTORE"}, "3142": {"op": "SWAP2"}, "3143": {"op": "DUP3"}, "3144": {"op": "MSTORE"}, "3145": {"op": "DUP5"}, "3146": {"op": "DUP3"}, "3147": {"op": "ADD"}, "3148": {"op": "SWAP3"}, "3149": {"op": "POP"}, "3150": {"op": "DUP4"}, "3151": {"op": "DUP2"}, "3152": {"op": "ADD"}, "3153": {"op": "DUP6"}, "3154": {"op": "ADD"}, "3155": {"op": "SWAP2"}, "3156": {"op": "DUP15"}, "3157": {"op": "DUP4"}, "3158": {"op": "GT"}, "3159": {"op": "ISZERO"}, "3160": {"op": "PUSH2", "value": "0xC60"}, "3163": {"op": "JUMPI"}, "3164": {"op": "PUSH1", "value": "0x0"}, "3166": {"op": "DUP1"}, "3167": {"op": "REVERT"}, "3168": {"op": "JUMPDEST"}, "3169": {"op": "SWAP4"}, "3170": {"op": "DUP6"}, "3171": {"op": "ADD"}, "3172": {"op": "SWAP4"}, "3173": {"op": "JUMPDEST"}, "3174": {"op": "DUP3"}, "3175": {"op": "DUP6"}, "3176": {"op": "LT"}, "3177": {"op": "ISZERO"}, "3178": {"op": "PUSH2", "value": "0xC7E"}, "3181": {"op": "JUMPI"}, "3182": {"op": "DUP5"}, "3183": {"op": "CALLDATALOAD"}, "3184": {"op": "DUP5"}, "3185": {"op": "MSTORE"}, "3186": {"op": "SWAP4"}, "3187": {"op": "DUP6"}, "3188": {"op": "ADD"}, "3189": {"op": "SWAP4"}, "3190": {"op": "SWAP3"}, "3191": {"op": "DUP6"}, "3192": {"op": "ADD"}, "3193": {"op": "SWAP3"}, "3194": {"op": "PUSH2", "value": "0xC65"}, "3197": {"op": "JUMP"}, "3198": {"op": "JUMPDEST"}, "3199": {"op": "DUP1"}, "3200": {"op": "SWAP7"}, "3201": {"op": "POP"}, "3202": {"op": "POP"}, "3203": {"op": "POP"}, "3204": {"op": "POP"}, "3205": {"op": "POP"}, "3206": {"op": "POP"}, "3207": {"op": "POP"}, "3208": {"op": "SWAP3"}, "3209": {"op": "SWAP6"}, "3210": {"op": "SWAP9"}, "3211": {"op": "SWAP2"}, "3212": {"op": "SWAP5"}, "3213": {"op": "SWAP8"}, "3214": {"op": "POP"}, "3215": {"op": "SWAP3"}, "3216": {"op": "SWAP6"}, "3217": {"op": "POP"}, "3218": {"jump": "o", "op": "JUMP"}, "3219": {"op": "JUMPDEST"}, "3220": {"op": "PUSH4", "value": "0x4E487B71"}, "3225": {"op": "PUSH1", "value": "0xE0"}, "3227": {"op": "SHL"}, "3228": {"op": "PUSH1", "value": "0x0"}, "3230": {"op": "MSTORE"}, "3231": {"op": "PUSH1", "value": "0x11"}, "3233": {"op": "PUSH1", "value": "0x4"}, "3235": {"op": "MSTORE"}, "3236": {"op": "PUSH1", "value": "0x24"}, "3238": {"op": "PUSH1", "value": "0x0"}, "3240": {"op": "REVERT"}, "3241": {"op": "JUMPDEST"}, "3242": {"op": "PUSH1", "value": "0x0"}, "3244": {"op": "DUP3"}, "3245": {"op": "DUP3"}, "3246": {"op": "LT"}, "3247": {"op": "ISZERO"}, "3248": {"op": "PUSH2", "value": "0xCBB"}, "3251": {"op": "JUMPI"}, "3252": {"op": "PUSH2", "value": "0xCBB"}, "3255": {"op": "PUSH2", "value": "0xC93"}, "3258": {"jump": "i", "op": "JUMP"}, "3259": {"op": "JUMPDEST"}, "3260": {"op": "POP"}, "3261": {"op": "SUB"}, "3262": {"op": "SWAP1"}, "3263": {"jump": "o", "op": "JUMP"}, "3264": {"op": "JUMPDEST"}, "3265": {"op": "PUSH1", "value": "0x0"}, "3267": {"op": "DUP2"}, "3268": {"op": "PUSH1", "value": "0x0"}, "3270": {"op": "NOT"}, "3271": {"op": "DIV"}, "3272": {"op": "DUP4"}, "3273": {"op": "GT"}, "3274": {"op": "DUP3"}, "3275": {"op": "ISZERO"}, "3276": {"op": "ISZERO"}, "3277": {"op": "AND"}, "3278": {"op": "ISZERO"}, "3279": {"op": "PUSH2", "value": "0xCDA"}, "3282": {"op": "JUMPI"}, "3283": {"op": "PUSH2", "value": "0xCDA"}, "3286": {"op": "PUSH2", "value": "0xC93"}, "3289": {"jump": "i", "op": "JUMP"}, "3290": {"op": "JUMPDEST"}, "3291": {"op": "POP"}, "3292": {"op": "MUL"}, "3293": {"op": "SWAP1"}, "3294": {"jump": "o", "op": "JUMP"}, "3295": {"op": "JUMPDEST"}, "3296": {"op": "PUSH1", "value": "0x0"}, "3298": {"op": "PUSH1", "value": "0x20"}, "3300": {"op": "DUP3"}, "3301": {"op": "DUP5"}, "3302": {"op": "SUB"}, "3303": {"op": "SLT"}, "3304": {"op": "ISZERO"}, "3305": {"op": "PUSH2", "value": "0xCF1"}, "3308": {"op": "JUMPI"}, "3309": {"op": "PUSH1", "value": "0x0"}, "3311": {"op": "DUP1"}, "3312": {"op": "REVERT"}, "3313": {"op": "JUMPDEST"}, "3314": {"op": "POP"}, "3315": {"op": "MLOAD"}, "3316": {"op": "SWAP2"}, "3317": {"op": "SWAP1"}, "3318": {"op": "POP"}, "3319": {"jump": "o", "op": "JUMP"}, "3320": {"op": "JUMPDEST"}, "3321": {"op": "PUSH1", "value": "0x0"}, "3323": {"op": "PUSH1", "value": "0x20"}, "3325": {"op": "DUP3"}, "3326": {"op": "DUP5"}, "3327": {"op": "SUB"}, "3328": {"op": "SLT"}, "3329": {"op": "ISZERO"}, "3330": {"op": "PUSH2", "value": "0xD0A"}, "3333": {"op": "JUMPI"}, "3334": {"op": "PUSH1", "value": "0x0"}, "3336": {"op": "DUP1"}, "3337": {"op": "REVERT"}, "3338": {"op": "JUMPDEST"}, "3339": {"op": "DUP2"}, "3340": {"op": "MLOAD"}, "3341": {"op": "DUP1"}, "3342": {"op": "ISZERO"}, "3343": {"op": "ISZERO"}, "3344": {"op": "DUP2"}, "3345": {"op": "EQ"}, "3346": {"op": "PUSH2", "value": "0xD1A"}, "3349": {"op": "JUMPI"}, "3350": {"op": "PUSH1", "value": "0x0"}, "3352": {"op": "DUP1"}, "3353": {"op": "REVERT"}, "3354": {"op": "JUMPDEST"}, "3355": {"op": "SWAP4"}, "3356": {"op": "SWAP3"}, "3357": {"op": "POP"}, "3358": {"op": "POP"}, "3359": {"op": "POP"}, "3360": {"jump": "o", "op": "JUMP"}, "3361": {"op": "JUMPDEST"}, "3362": {"op": "PUSH1", "value": "0x0"}, "3364": {"op": "PUSH1", "value": "0x0"}, "3366": {"op": "NOT"}, "3367": {"op": "DUP3"}, "3368": {"op": "EQ"}, "3369": {"op": "ISZERO"}, "3370": {"op": "PUSH2", "value": "0xD35"}, "3373": {"op": "JUMPI"}, "3374": {"op": "PUSH2", "value": "0xD35"}, "3377": {"op": "PUSH2", "value": "0xC93"}, "3380": {"jump": "i", "op": "JUMP"}, "3381": {"op": "JUMPDEST"}, "3382": {"op": "POP"}, "3383": {"op": "PUSH1", "value": "0x1"}, "3385": {"op": "ADD"}, "3386": {"op": "SWAP1"}, "3387": {"jump": "o", "op": "JUMP"}, "3388": {"op": "JUMPDEST"}, "3389": {"op": "PUSH1", "value": "0x0"}, "3391": {"op": "PUSH1", "value": "0x60"}, "3393": {"op": "DUP3"}, "3394": {"op": "ADD"}, "3395": {"op": "DUP6"}, "3396": {"op": "DUP4"}, "3397": {"op": "MSTORE"}, "3398": {"op": "PUSH1", "value": "0x20"}, "3400": {"op": "DUP6"}, "3401": {"op": "DUP2"}, "3402": {"op": "DUP6"}, "3403": {"op": "ADD"}, "3404": {"op": "MSTORE"}, "3405": {"op": "PUSH1", "value": "0x60"}, "3407": {"op": "PUSH1", "value": "0x40"}, "3409": {"op": "DUP6"}, "3410": {"op": "ADD"}, "3411": {"op": "MSTORE"}, "3412": {"op": "DUP2"}, "3413": {"op": "DUP6"}, "3414": {"op": "MLOAD"}, "3415": {"op": "DUP1"}, "3416": {"op": "DUP5"}, "3417": {"op": "MSTORE"}, "3418": {"op": "PUSH1", "value": "0x80"}, "3420": {"op": "DUP7"}, "3421": {"op": "ADD"}, "3422": {"op": "SWAP2"}, "3423": {"op": "POP"}, "3424": {"op": "DUP3"}, "3425": {"op": "DUP8"}, "3426": {"op": "ADD"}, "3427": {"op": "SWAP4"}, "3428": {"op": "POP"}, "3429": {"op": "PUSH1", "value": "0x0"}, "3431": {"op": "JUMPDEST"}, "3432": {"op": "DUP2"}, "3433": {"op": "DUP2"}, "3434": {"op": "LT"}, "3435": {"op": "ISZERO"}, "3436": {"op": "PUSH2", "value": "0xD83"}, "3439": {"op": "JUMPI"}, "3440": {"op": "DUP5"}, "3441": {"op": "MLOAD"}, "3442": {"op": "DUP4"}, "3443": {"op": "MSTORE"}, "3444": {"op": "SWAP4"}, "3445": {"op": "DUP4"}, "3446": {"op": "ADD"}, "3447": {"op": "SWAP4"}, "3448": {"op": "SWAP2"}, "3449": {"op": "DUP4"}, "3450": {"op": "ADD"}, "3451": {"op": "SWAP2"}, "3452": {"op": "PUSH1", "value": "0x1"}, "3454": {"op": "ADD"}, "3455": {"op": "PUSH2", "value": "0xD67"}, "3458": {"op": "JUMP"}, "3459": {"op": "JUMPDEST"}, "3460": {"op": "POP"}, "3461": {"op": "SWAP1"}, "3462": {"op": "SWAP9"}, "3463": {"op": "SWAP8"}, "3464": {"op": "POP"}, "3465": {"op": "POP"}, "3466": {"op": "POP"}, "3467": {"op": "POP"}, "3468": {"op": "POP"}, "3469": {"op": "POP"}, "3470": {"op": "POP"}, "3471": {"op": "POP"}, "3472": {"jump": "o", "op": "JUMP"}, "3473": {"op": "JUMPDEST"}, "3474": {"op": "PUSH1", "value": "0x0"}, "3476": {"op": "DUP3"}, "3477": {"op": "PUSH2", "value": "0xDAE"}, "3480": {"op": "JUMPI"}, "3481": {"op": "PUSH4", "value": "0x4E487B71"}, "3486": {"op": "PUSH1", "value": "0xE0"}, "3488": {"op": "SHL"}, "3489": {"op": "PUSH1", "value": "0x0"}, "3491": {"op": "MSTORE"}, "3492": {"op": "PUSH1", "value": "0x12"}, "3494": {"op": "PUSH1", "value": "0x4"}, "3496": {"op": "MSTORE"}, "3497": {"op": "PUSH1", "value": "0x24"}, "3499": {"op": "PUSH1", "value": "0x0"}, "3501": {"op": "REVERT"}, "3502": {"op": "JUMPDEST"}, "3503": {"op": "POP"}, "3504": {"op": "DIV"}, "3505": {"op": "SWAP1"}, "3506": {"jump": "o", "op": "JUMP"}, "3507": {"op": "JUMPDEST"}, "3508": {"op": "PUSH1", "value": "0x0"}, "3510": {"op": "DUP3"}, "3511": {"op": "NOT"}, "3512": {"op": "DUP3"}, "3513": {"op": "GT"}, "3514": {"op": "ISZERO"}, "3515": {"op": "PUSH2", "value": "0xDC6"}, "3518": {"op": "JUMPI"}, "3519": {"op": "PUSH2", "value": "0xDC6"}, "3522": {"op": "PUSH2", "value": "0xC93"}, "3525": {"jump": "i", "op": "JUMP"}, "3526": {"op": "JUMPDEST"}, "3527": {"op": "POP"}, "3528": {"op": "ADD"}, "3529": {"op": "SWAP1"}, "3530": {"jump": "o", "op": "JUMP"}}, "sha1": "bd92bc4bd49549a354c1b7138a170a42b50dff9d", "source": "// SPDX-License-Identifier: GPL-3.0-only\n\npragma solidity 0.8.12;\n\nimport \"../interfaces/IERC20.sol\";\nimport \"./MerkleLib.sol\";\n\n/// @title A factory pattern for merkle-vesting, that is, a time release schedule for tokens, using merkle proofs to scale\n/// @author metapriest, adrian.wachel, marek.babiarz, radoslaw.gorecki\n/// @notice This contract is permissionless and public facing. Any fees must be included in the data of the merkle tree.\n/// @dev The contract cannot introspect into the contents of the merkle tree, except when provided a merkle proof\ncontract MerkleVesting {\n    using MerkleLib for bytes32;\n\n    // the number of vesting schedules in this contract\n    uint public numTrees;\n    \n    // this represents a single vesting schedule for a specific address\n    struct Tranche {\n        address recipient;\n        uint totalCoins;  // total number of coins released to an address after vesting is completed\n        uint currentCoins; // how many coins are left unclaimed by this address, vested or unvested\n        uint startTime; // when the vesting schedule is set to start, possibly in the past\n        uint endTime;  // when the vesting schedule will have released all coins\n        uint coinsPerSecond; // an intermediate value cached to reduce gas costs, how many coins released every second\n        uint lastWithdrawalTime; // the last time a withdrawal occurred, used to compute unvested coins\n        uint lockPeriodEndTime; // the first time at which coins may be withdrawn\n    }\n\n    // this represents a set of vesting schedules all in the same token\n    struct MerkleTree {\n        bytes32 rootHash;  // merkleroot of tree whose leaves are (address,uint,uint,uint,uint) representing vesting schedules\n        bytes32 ipfsHash; // ipfs hash of entire dataset, used to reconstruct merkle proofs if our servers go down\n        address tokenAddress; // token that the vesting schedules will be denominated in\n        uint tokenBalance; // current amount of tokens deposited to this tree, used to make sure trees don't share tokens\n        uint numTranchesInitialized;\n        mapping (uint => Tranche) tranches;\n        mapping (bytes32 => bool) initialized;\n    }\n\n    // array-like sequential map for all the vesting schedules\n    mapping (uint => MerkleTree) public merkleTrees;\n\n\n    // every time there's a withdrawal\n    event WithdrawalOccurred(uint indexed treeIndex, address indexed destination, uint numTokens, uint tokensLeft);\n\n    // every time a tree is added\n    event MerkleRootAdded(uint indexed treeIndex, address indexed tokenAddress, bytes32 newRoot, bytes32 ipfsHash);\n\n    // every time a tree is topped up\n    event TokensDeposited(uint indexed treeIndex, address indexed tokenAddress, uint amount);\n\n    event TrancheInitialized(uint indexed treeIndex, uint indexed trancheIndex, address indexed recipient, bytes32 leaf);\n\n    error BadTreeIndex(uint treeIndex);\n    error AlreadyInitialized(uint treeIndex, bytes32 leaf);\n    error BadProof(uint treeIndex, bytes32 leaf, bytes32[] proof);\n    error UninitializedAccount(uint treeIndex, uint trancheIndex);\n    error AccountStillLocked(uint treeIndex, uint trancheIndex);\n    error AccountEmpty(uint treeIndex, uint trancheIndex);\n\n    /// @notice Add a new merkle tree to the contract, creating a new merkle-vesting-schedule\n    /// @dev Anyone may call this function, therefore we must make sure trees cannot affect each other\n    /// @dev Root hash should be built from (destination, totalCoins, startTime, endTime, lockPeriodEndTime)\n    /// @param newRoot root hash of merkle tree representing vesting schedules\n    /// @param ipfsHash the ipfs hash of the entire dataset, used for redundance so that creator can ensure merkleproof are always computable\n    /// @param tokenAddress the address of the token contract that is being distributed\n    /// @param tokenBalance the amount of tokens user wishes to use to fund the airdrop, note trees can be under/overfunded\n    function addMerkleRoot(bytes32 newRoot, bytes32 ipfsHash, address tokenAddress, uint tokenBalance) public {\n        // prefix operator ++ increments then evaluates\n        MerkleTree storage tree = merkleTrees[++numTrees];\n        tree.rootHash = newRoot;\n        tree.ipfsHash = ipfsHash;\n        tree.tokenAddress = tokenAddress;\n\n        // fund the tree now\n        depositTokens(numTrees, tokenBalance);\n        emit MerkleRootAdded(numTrees, tokenAddress, newRoot, ipfsHash);\n    }\n\n    /// @notice Add funds to an existing merkle-vesting-schedule\n    /// @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n    /// @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs\n    /// @param treeIndex index into array-like map of merkleTrees\n    /// @param value the amount of tokens user wishes to use to fund the airdrop, note trees can be underfunded\n    function depositTokens(uint treeIndex, uint value) public {\n        if (treeIndex == 0 || treeIndex > numTrees) {\n            revert BadTreeIndex(treeIndex);\n        }\n\n        // storage since we are editing\n        MerkleTree storage merkleTree = merkleTrees[treeIndex];\n\n        IERC20 token = IERC20(merkleTree.tokenAddress);\n        uint balanceBefore = token.balanceOf(address(this));\n\n        // transfer tokens, if this is a malicious token, then this whole tree is malicious\n        // but it does not effect the other trees\n        // NOTE: we don't check for success here because some tokens don't return a bool\n        // Instead we check the balance before and after, which takes care of the fee-on-transfer tokens as well\n        token.transferFrom(msg.sender, address(this), value);\n\n        uint balanceAfter = token.balanceOf(address(this));\n        // diff may be different from value here, it may even be zero if the transfer failed silently\n        uint diff = balanceAfter - balanceBefore;\n\n        // bookkeeping to make sure trees don't share tokens\n        merkleTree.tokenBalance += diff;\n        emit TokensDeposited(treeIndex, merkleTree.tokenAddress, diff);\n    }\n\n    /// @notice Called once per recipient of a vesting schedule to initialize the vesting schedule\n    /// @dev Anyone may call this function, the only risk here is that the token contract is malicious, rendering the tree malicious\n    /// @dev If the tree is over-funded, excess funds are lost. No clear way to get around this without zk-proofs of global tree stats\n    /// @dev The contract has no knowledge of the vesting schedules until this function is called\n    /// @param treeIndex index into array-like map of merkleTrees\n    /// @param destination address that will receive tokens\n    /// @param totalCoins amount of tokens to be released after vesting completes\n    /// @param startTime time that vesting schedule starts, can be past or future\n    /// @param endTime time vesting schedule completes, can be past or future\n    /// @param lockPeriodEndTime time that coins become unlocked, can be after endTime\n    /// @param proof array of hashes linking leaf hash of (destination, totalCoins, startTime, endTime, lockPeriodEndTime) to root\n    function initialize(\n        uint treeIndex,\n        address destination,\n        uint totalCoins,\n        uint startTime,\n        uint endTime,\n        uint lockPeriodEndTime,\n        bytes32[] memory proof) external returns (uint) {\n        if (treeIndex == 0 || treeIndex > numTrees) {\n            revert BadTreeIndex(treeIndex);\n        }\n\n        // leaf hash is digest of vesting schedule parameters and destination\n        // NOTE: use abi.encode, not abi.encodePacked to avoid possible (but unlikely) collision\n        bytes32 leaf = keccak256(abi.encode(destination, totalCoins, startTime, endTime, lockPeriodEndTime));\n\n        // storage because it's cheaper, \"memory\" copies from storage to memory\n        MerkleTree storage tree = merkleTrees[treeIndex];\n\n        // must not initialize multiple times\n        if (tree.initialized[leaf]) {\n            revert AlreadyInitialized(treeIndex, leaf);\n        }\n\n        // call to MerkleLib to check if the submitted data is correct\n        if (tree.rootHash.verifyProof(leaf, proof) == false) {\n            revert BadProof(treeIndex, leaf, proof);\n        }\n\n        // set initialized, preventing double initialization\n        tree.initialized[leaf] = true;\n\n        // precompute how many coins are released per second\n        // NOTE: should check that endTime != startTime on backend since that would revert here\n        uint coinsPerSecond = totalCoins / (endTime - startTime);\n\n        // create the tranche struct and assign it\n        tree.tranches[++tree.numTranchesInitialized] = Tranche(\n            destination,\n            totalCoins,  // total coins to be released\n            totalCoins,  // currentCoins starts as totalCoins\n            startTime,\n            endTime,\n            coinsPerSecond,\n            startTime,    // lastWithdrawal starts as startTime\n            lockPeriodEndTime\n        );\n\n        emit TrancheInitialized(treeIndex, tree.numTranchesInitialized, destination, leaf);\n\n        // if we've passed the lock time go ahead and perform a withdrawal now\n        if (lockPeriodEndTime < block.timestamp) {\n            withdraw(treeIndex, tree.numTranchesInitialized);\n        }\n        return tree.numTranchesInitialized;\n    }\n\n    /// @notice Claim funds as a recipient in the merkle-drop\n    /// @dev Anyone may call this function for anyone else, funds go to destination regardless, it's just a question of\n    /// @dev who provides the proof and pays the gas, msg.sender is not used in this function\n    /// @param treeIndex index into array-like map of merkleTrees, which tree should we apply the proof to?\n    /// @param trancheIndex recipient of tokens\n    function withdraw(uint treeIndex, uint trancheIndex) public {\n\n        MerkleTree storage tree = merkleTrees[treeIndex];\n        Tranche storage tranche = tree.tranches[trancheIndex];\n\n        // checking this way so we don't have to recompute leaf hash\n        if (tranche.totalCoins == 0) {\n            revert UninitializedAccount(treeIndex, trancheIndex);\n        }\n\n        // no withdrawals before lock time ends\n        if (block.timestamp < tranche.lockPeriodEndTime) {\n            revert AccountStillLocked(treeIndex, trancheIndex);\n        }\n\n        // revert if there's nothing left\n        if (tranche.currentCoins == 0) {\n            revert AccountEmpty(treeIndex, trancheIndex);\n        }\n\n        // declaration for branched assignment\n        uint currentWithdrawal;\n\n        // if after vesting period ends, give them the remaining coins\n        if (block.timestamp >= tranche.endTime) {\n            currentWithdrawal = tranche.currentCoins;\n        } else {\n            // compute allowed withdrawal\n            currentWithdrawal = (block.timestamp - tranche.lastWithdrawalTime) * tranche.coinsPerSecond;\n        }\n\n        // this makes sure coins don't get double withdrawn, closes re-entrance gate\n        tranche.lastWithdrawalTime = block.timestamp;\n\n        IERC20 token = IERC20(tree.tokenAddress);\n        uint balanceBefore = token.balanceOf(address(this));\n\n        // Transfer the tokens, if the token contract is malicious, this will make the whole tree malicious\n        // but this does not allow re-entrance due to struct updates and it does not effect other trees.\n        // It is also consistent with the ethereum general security model:\n        // other contracts do what they want, it's our job to protect our contract\n        token.transfer(tranche.recipient, currentWithdrawal);\n\n        // compute the diff in case there is a fee-on-transfer or transfer failed silently\n        uint balanceAfter = token.balanceOf(address(this));\n        uint diff = balanceBefore - balanceAfter;\n\n        // decrease allocation of coins\n        tranche.currentCoins -= diff;\n\n        // update the tree balance so trees can't take each other's tokens\n        tree.tokenBalance -= diff;\n\n        emit WithdrawalOccurred(treeIndex, tranche.recipient, diff, tranche.currentCoins);\n    }\n\n    function getTranche(uint treeIndex, uint trancheIndex) view external returns (address, uint, uint, uint, uint, uint, uint) {\n        Tranche storage tranche = merkleTrees[treeIndex].tranches[trancheIndex];\n        return (tranche.recipient, tranche.totalCoins, tranche.currentCoins, tranche.startTime, tranche.endTime, tranche.coinsPerSecond, tranche.lastWithdrawalTime);\n    }\n\n    function getInitialized(uint treeIndex, bytes32 leaf) external view returns (bool) {\n        return merkleTrees[treeIndex].initialized[leaf];\n    }\n\n}", "sourceMap": "558:12156:3:-:0;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/MerkleVesting.sol", "type": "contract", "deployment": {"address": "0xEedDDCda44c8808260588B311Ff6521D631F3565", "chainid": "137", "blockHeight": 33010409}}