{"allSourcePaths": {"0": "contracts/MultiSend.sol"}, "bytecode": "608060405234801561001057600080fd5b506102a1806100206000396000f3fe60806040526004361061001e5760003560e01c80632dc9ad7f14610023575b600080fd5b610036610031366004610142565b610038565b005b3460005b835181101561010a57828210156100995760405162461bcd60e51b815260206004820152601b60248201527f5468652076616c7565206973206e6f742073756666696369656e740000000000604482015260640160405180910390fd5b6100a38383610223565b91508381815181106100b7576100b761023a565b60200260200101516001600160a01b03166108fc849081150290604051600060405180830381858888f193505050501580156100f7573d6000803e3d6000fd5b508061010281610250565b91505061003c565b50505050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461013d57600080fd5b919050565b6000806040838503121561015557600080fd5b823567ffffffffffffffff8082111561016d57600080fd5b818501915085601f83011261018157600080fd5b813560208282111561019557610195610110565b8160051b604051601f19603f830116810181811086821117156101ba576101ba610110565b6040529283528183019350848101820192898411156101d857600080fd5b948201945b838610156101fd576101ee86610126565b855294820194938201936101dd565b9997909101359750505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156102355761023561020d565b500390565b634e487b7160e01b600052603260045260246000fd5b60006000198214156102645761026461020d565b506001019056fea2646970667358221220b8966ca3d55fe7c4ed877b3ec45a21acaedf72c7841ef2e7eca7ffd6b30af26964736f6c634300080c0033", "bytecodeSha1": "abbdded52c4614f00a2f9e24e87f71c3ac34ec44", "coverageMap": {"statements": {"0": {"MultiSender.multisend": {"0": [484, 539], "1": [553, 568], "2": [641, 670], "3": [394, 397]}}}, "branches": {"0": {"MultiSender.multisend": {"4": [492, 507, true]}}}}, "dependencies": [], "offset": [57, 689], "type": "contract", "abi": [{"inputs": [], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "address payable[]", "name": "addresses", "type": "address[]"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "multisend", "outputs": [], "stateMutability": "payable", "type": "function"}], "ast": {"absolutePath": "contracts/MultiSend.sol", "exportedSymbols": {"MultiSender": [51]}, "id": 52, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "0.8", ".12"], "nodeType": "PragmaDirective", "src": "32:23:0"}, {"abstract": false, "baseContracts": [], "canonicalName": "MultiSender", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 51, "linearizedBaseContracts": [51], "name": "MultiSender", "nameLocation": "66:11:0", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 4, "nodeType": "Block", "src": "98:2:0", "statements": []}, "id": 5, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 2, "nodeType": "ParameterList", "parameters": [], "src": "95:2:0"}, "returnParameters": {"id": 3, "nodeType": "ParameterList", "parameters": [], "src": "98:0:0"}, "scope": 51, "src": "84:16:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 49, "nodeType": "Block", "src": "311:376:0", "statements": [{"assignments": [14], "declarations": [{"constant": false, "id": 14, "mutability": "mutable", "name": "total", "nameLocation": "329:5:0", "nodeType": "VariableDeclaration", "scope": 49, "src": "321:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "321:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 17, "initialValue": {"expression": {"id": 15, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "337:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 16, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "337:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "321:25:0"}, {"body": {"id": 47, "nodeType": "Block", "src": "399:282:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 32, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 30, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "492:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 31, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "501:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "492:15:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5468652076616c7565206973206e6f742073756666696369656e74", "id": 33, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "509:29:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c4a2f6136b83625bbe3050af3823d513fe2a4d9ff0f4dd8b9f042d1794797772", "typeString": "literal_string \"The value is not sufficient\""}, "value": "The value is not sufficient"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c4a2f6136b83625bbe3050af3823d513fe2a4d9ff0f4dd8b9f042d1794797772", "typeString": "literal_string \"The value is not sufficient\""}], "id": 29, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "484:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 34, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "484:55:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 35, "nodeType": "ExpressionStatement", "src": "484:55:0"}, {"expression": {"id": 38, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 36, "name": "total", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "553:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 37, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "562:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "553:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 39, "nodeType": "ExpressionStatement", "src": "553:15:0"}, {"expression": {"arguments": [{"id": 44, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "663:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"baseExpression": {"id": 40, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "641:9:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr", "typeString": "address payable[] memory"}}, "id": 42, "indexExpression": {"id": 41, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "651:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "641:12:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 43, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "641:21:0", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 45, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "641:29:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 46, "nodeType": "ExpressionStatement", "src": "641:29:0"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 25, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "372:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 23, "name": "addresses", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "376:9:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr", "typeString": "address payable[] memory"}}, "id": 24, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "376:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "372:20:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 48, "initializationExpression": {"assignments": [19], "declarations": [{"constant": false, "id": 19, "mutability": "mutable", "name": "i", "nameLocation": "367:1:0", "nodeType": "VariableDeclaration", "scope": 48, "src": "362:6:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 18, "name": "uint", "nodeType": "ElementaryTypeName", "src": "362:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21, "initialValue": {"hexValue": "30", "id": 20, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "369:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "362:8:0"}, "loopExpression": {"expression": {"id": 27, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "394:3:0", "subExpression": {"id": 26, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "394:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 28, "nodeType": "ExpressionStatement", "src": "394:3:0"}, "nodeType": "ForStatement", "src": "357:324:0"}]}, "functionSelector": "2dc9ad7f", "id": 50, "implemented": true, "kind": "function", "modifiers": [], "name": "multisend", "nameLocation": "234:9:0", "nodeType": "FunctionDefinition", "parameters": {"id": 11, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 8, "mutability": "mutable", "name": "addresses", "nameLocation": "269:9:0", "nodeType": "VariableDeclaration", "scope": 50, "src": "244:34:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr", "typeString": "address payable[]"}, "typeName": {"baseType": {"id": 6, "name": "address", "nodeType": "ElementaryTypeName", "src": "244:15:0", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 7, "nodeType": "ArrayTypeName", "src": "244:17:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr", "typeString": "address payable[]"}}, "visibility": "internal"}, {"constant": false, "id": 10, "mutability": "mutable", "name": "amount", "nameLocation": "288:6:0", "nodeType": "VariableDeclaration", "scope": 50, "src": "280:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 9, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "280:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "243:52:0"}, "returnParameters": {"id": 12, "nodeType": "ParameterList", "parameters": [], "src": "311:0:0"}, "scope": 51, "src": "225:462:0", "stateMutability": "payable", "virtual": false, "visibility": "public"}], "scope": 52, "src": "57:632:0", "usedErrors": []}], "src": "32:657:0"}, "compiler": {"version": "0.8.12+commit.f00d7308", "evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}}, "contractName": "MultiSender", "deployedBytecode": "60806040526004361061001e5760003560e01c80632dc9ad7f14610023575b600080fd5b610036610031366004610142565b610038565b005b3460005b835181101561010a57828210156100995760405162461bcd60e51b815260206004820152601b60248201527f5468652076616c7565206973206e6f742073756666696369656e740000000000604482015260640160405180910390fd5b6100a38383610223565b91508381815181106100b7576100b761023a565b60200260200101516001600160a01b03166108fc849081150290604051600060405180830381858888f193505050501580156100f7573d6000803e3d6000fd5b508061010281610250565b91505061003c565b50505050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461013d57600080fd5b919050565b6000806040838503121561015557600080fd5b823567ffffffffffffffff8082111561016d57600080fd5b818501915085601f83011261018157600080fd5b813560208282111561019557610195610110565b8160051b604051601f19603f830116810181811086821117156101ba576101ba610110565b6040529283528183019350848101820192898411156101d857600080fd5b948201945b838610156101fd576101ee86610126565b855294820194938201936101dd565b9997909101359750505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156102355761023561020d565b500390565b634e487b7160e01b600052603260045260246000fd5b60006000198214156102645761026461020d565b506001019056fea2646970667358221220b8966ca3d55fe7c4ed877b3ec45a21acaedf72c7841ef2e7eca7ffd6b30af26964736f6c634300080c0033", "deployedSourceMap": "57:632:0:-:0;;;;;;;;;;;;;;;;;;;;;225:462;;;;;;:::i;:::-;;:::i;:::-;;;337:9;321:13;357:324;376:9;:16;372:1;:20;357:324;;;501:6;492:5;:15;;484:55;;;;-1:-1:-1;;;484:55:0;;1746:2:1;484:55:0;;;1728:21:1;1785:2;1765:18;;;1758:30;1824:29;1804:18;;;1797:57;1871:18;;484:55:0;;;;;;;;553:15;562:6;553:15;;:::i;:::-;;;641:9;651:1;641:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;641:21:0;:29;663:6;641:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;394:3:0;;;;:::i;:::-;;;;357:324;;;;311:376;225:462;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:181;222:20;;-1:-1:-1;;;;;271:31:1;;261:42;;251:70;;317:1;314;307:12;251:70;146:181;;;:::o;332:1207::-;433:6;441;494:2;482:9;473:7;469:23;465:32;462:52;;;510:1;507;500:12;462:52;550:9;537:23;579:18;620:2;612:6;609:14;606:34;;;636:1;633;626:12;606:34;674:6;663:9;659:22;649:32;;719:7;712:4;708:2;704:13;700:27;690:55;;741:1;738;731:12;690:55;777:2;764:16;799:4;822:2;818;815:10;812:36;;;828:18;;:::i;:::-;874:2;871:1;867:10;906:2;900:9;969:2;965:7;960:2;956;952:11;948:25;940:6;936:38;1024:6;1012:10;1009:22;1004:2;992:10;989:18;986:46;983:72;;;1035:18;;:::i;:::-;1071:2;1064:22;1121:18;;;1155:15;;;;-1:-1:-1;1197:11:1;;;1193:20;;;1225:19;;;1222:39;;;1257:1;1254;1247:12;1222:39;1281:11;;;;1301:156;1317:6;1312:3;1309:15;1301:156;;;1383:31;1410:3;1383:31;:::i;:::-;1371:44;;1334:12;;;;1435;;;;1301:156;;;1476:6;1514:18;;;;1501:32;;-1:-1:-1;;;;;;;332:1207:1:o;1900:127::-;1961:10;1956:3;1952:20;1949:1;1942:31;1992:4;1989:1;1982:15;2016:4;2013:1;2006:15;2032:125;2072:4;2100:1;2097;2094:8;2091:34;;;2105:18;;:::i;:::-;-1:-1:-1;2142:9:1;;2032:125::o;2162:127::-;2223:10;2218:3;2214:20;2211:1;2204:31;2254:4;2251:1;2244:15;2278:4;2275:1;2268:15;2294:135;2333:3;-1:-1:-1;;2354:17:1;;2351:43;;;2374:18;;:::i;:::-;-1:-1:-1;2421:1:1;2410:13;;2294:135::o", "language": "Solidity", "natspec": {"methods": {}, "kind": "dev", "version": 1}, "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DC9AD7F EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x142 JUMP JUMPDEST PUSH2 0x38 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x10A JUMPI DUP3 DUP3 LT ISZERO PUSH2 0x99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652076616C7565206973206E6F742073756666696369656E740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA3 DUP4 DUP4 PUSH2 0x223 JUMP JUMPDEST SWAP2 POP DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB7 JUMPI PUSH2 0xB7 PUSH2 0x23A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH2 0x102 DUP2 PUSH2 0x250 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x195 JUMPI PUSH2 0x195 PUSH2 0x110 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP7 DUP3 GT OR ISZERO PUSH2 0x1BA JUMPI PUSH2 0x1BA PUSH2 0x110 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP3 DUP4 MSTORE DUP2 DUP4 ADD SWAP4 POP DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP10 DUP5 GT ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1FD JUMPI PUSH2 0x1EE DUP7 PUSH2 0x126 JUMP JUMPDEST DUP6 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH2 0x1DD JUMP JUMPDEST SWAP10 SWAP8 SWAP1 SWAP2 ADD CALLDATALOAD SWAP8 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x235 JUMPI PUSH2 0x235 PUSH2 0x20D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x264 JUMPI PUSH2 0x264 PUSH2 0x20D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 SWAP7 PUSH13 0xA3D55FE7C4ED877B3EC45A21AC 0xAE 0xDF PUSH19 0xC7841EF2E7ECA7FFD6B30AF26964736F6C6343 STOP ADDMOD 0xC STOP CALLER ", "sha1": "c9389b3d4a5c5ec8fc4508926c42adfddac5aa3e", "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\ncontract MultiSender {\n    constructor() {}\n\n    // withdrawals enable to multiple withdraws to different accounts\n    // at one call, and decrease the network fee\n    function multisend(address payable[] memory addresses, uint256 amount) payable public {\n        uint256 total = msg.value;\n\n        for (uint i=0; i < addresses.length; i++) {\n            // the total should be greater than the sum of the amounts\n            require(total >= amount, \"The value is not sufficient\");\n            total -= amount;\n\n            // send the specified amount to the recipient\n            addresses[i].transfer(amount);\n        }\n    }\n}", "sourceMap": "57:632:0:-:0;;;84:16;;;;;;;;;;57:632;;;;;;", "sourcePath": "contracts/MultiSend.sol", "deployment": {"address": "0x4427047f592ccb3048559aA969efDEa8B1352bA8", "chainid": "11297108109", "blockHeight": 10152503}}